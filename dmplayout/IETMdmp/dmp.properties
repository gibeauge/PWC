
# -------------------------------------------------------------------
# Parametric Technology Corp.
#
# Digital Media Publisher 5.4
#
# This is a Java properties file. The properties in this file control
# the Digital Media Publisher composition process.
# -------------------------------------------------------------------


# Content configuration file
# The property point to the content configuration file. From DMP 5.4,
# DMP supports two types of files for configuring DMP content, the content_config.xml
# and DMPMap. DMP composition process will detect which type of file is specified and
# operate accordingly.

contentConfigFile=content_config.xml


# Output directory for the DMP media image
#
# Use "/" or "\\" as the directory separator. For example: c:/temp/dmp 
# or c:\\temp\\dmp) on the Windows platform. In Java property files,
# the backslash ("\") is used for escaping special characters.

outputroot=c:/temp/dmp


# Layout Template directory
#
# This is the template directory DMP should use for image composition. By 
# default, this directory is ${dmproot}/layouttemplate/default. However, you might 
# want to modify the default layout template while keeping the original one intact.
# In this case, copy the default layout templates directory to a new location,
# make your modifications there, and point the layoutTemplateDir property to the
# new location. The directory path is relative to the location of this file.
#
# layoutTemplatesDir = ../layouttemplate

# Template name
#
# The template to be used. This is the directory name under templatesDir
# defined above. DMP shipped with frame and simple templates, if 
# version is created (say, custom1) then the name should be used. 
#

templateName = frame

#
#
# allowLinkToProfiledTopics: true | false, the default is false.
# This value determine whether to allow links to profiled topics. It is
# false by default, i.e. an error page will display when trying
# to display a topic that is not in the current profile.
#
#

allowLinkToProfiledTopics = false

# License file directory
#
# This directory point to a directory whether license file
# and keystore for license encryption (and content encryption 
# if enabled)
#
# The license file can be generated use Digital Media Publisher License 
# Manager
#

# licenseDir=../../snmanager/key


hideUnindexable = false

#
# Whether unindexable topics should be hidden from table of contents.
# If set to true, all topics other than html, pdf, xml, text, Excel, 
# Word, Powerpoint will be hidden from table of contents.
#

termVectorEnabled = false

#
# Whether to include term vector information when creating full text
# search index. Note, this may increase index size substantially. Unless
# the information (such as number of keyword appear in a document) is critical
# you may not want to enable this. (This has no effect in determining the 
# relevance score in the search result)


# Validate links
#
# validateLinks: Whether the link validation should be performed. It is 
# enabled by default. Unless disabled, it will report orphaned links 
# as well as links that are specified as absolute path.
#
# validateExternalLinks: Whether the external links (links to http://www.yahoo.com,
# for example) should be performed. Disabled by default. Use cautions when setting
# this option to true. For documents that has plenty of external links, this will
# spawn a lot of http requests and may also slow down the publishing process substantially.
#
# maxthread: maximum number of thread when running link validation.
#
# maxdepth: maximum depth to explore when doing link validation.
#

validateLinks = false

validateExternalLinks = false

maxthread = 3

maxdepth = -1

 
# Output location for Web application archive file
#
# The path to output the web application archive (WAR) file generated 
# when the "dmp webapp" command is invoked.
#
# The value can be either an absolute path, such as
#
#     webappLocation=/tmp/web.war
#
# or a path relative to the location of the file, such as
#
#     webappLocation=../myweb.war

webappLocation=../consumer.war


# Should DMP compile the JSP files during image composition?
#
# If the "precompile" property is enabled, Java Server Page files will be
# compiled when the media image is composed and the original JSP files
# will be deleted. This will improve performance when the DMP Consumer
# application launches. 
#
# In some cases, you might want to retain the JSP files for debugging or
# to test the JSP pages before final production. To turn off the precompile
# property, you must comment out that line in this file. Setting the
# property to "false" will not disable precompilation.

precompile = true

# Default Locale
# The locale to be used if no locale in the Consumer that matches
# the user workstation locale. 
#

defaultLocale=en_US
 
# DMP project information
#
# The companyName, projectId, and version properties are used to uniquely
# identify a DMP media image for installation and other purposes. If you
# change the companyName or projectID, DMP treats the current image 
# composition as an entirely new project. If you increase the version, DMP
# treats the current image compostion as an updated release of the same 
# project.
#

# Company name
#
# This is the name of the company producing the image. This value must be 
# be consistent for different releases of the same project.

companyName= Pratt & Whitney Canada
 
# Project identifier 
#
# This is the internal name of the composition project. In combination with 
# version, these two properties uniquely identify a project in the Windows 
# registry or Unix/Linux prefs.xml file. 

projectId= IETM
 
# Version number 
#
# In combination with companyName, these two properties uniquely identify 
# a project in the Windows registry or Unix/Linux prefs.xml file.
#
# The version value must follow this pattern:
#
# \d{1,3}(\.\d{1,3}){0,3} 
#
# Following are some valid values: 1.0  1.1.2  2.2.1  2.4.123
#
# Following are some invalid values: 1.a  2.a  1111.2  1.1.1.1.1.1  1. .2
 
version=1.0

# Project name
#
# This is the official name of the composition project. This value can be
# changed between product releases. The value of this property will be 
# shown in the installation dialog and other areas in the application
# where the product name is displayed.

projectName= PWC IETM


# Default metadata inclusion
#
# This property determines whether metadata extract from document content 
# (e.g. <meta> tag in html) should be included in the advanced search
#

includeDefaultMetadata = false


# Default mimetype
#
# This is the default mimetype that should be used as the default selection
# in advanced search

defaultMimetype = text/html


# Group name
#
# This is group where the project will be showing in the Windows Start Menu. 
# For example, with the following setting
# companyName = ABC Company
# groupName = Knowledge Center
# projectId = Spring 2006 Knowledge Center
#
# It will be shown in the Windows Start Menu as
#       Knowledge Center -> ... (exising ones) ...
#										-> Spring 2006 Knowledge Center
# 

groupName =

# Support Contact Information
#
# This is the contact information that will be displayed
# in Digital Media Consumer when an error occurred which may include 
# situations such as license expired, update failed, program error, etc.
#
supportContactInfo = Technical Support

# Application name 
#
# This is the name for the executable file that launches the application.
# For example, if the value of this property is "dmp," the executable name
# will be "dmp.exe" in Windows and "dmp" (executable script) in Unix/Linux.

appName= dmp

# Application icon
#
# This is the directory path to the icon that will be displayed for the 
# Windows executable. The associated file must be in .ico format. The 
# directory path is relative to the location of layouttemplatedir.

appIcon= resource/app/appicon.ico

# Setup icon
#
# This is the directory path to the icon that will be displayed for the 
# Windows setup program. The associated file must be in .ico format. The 
# location of the directory is relative to the location of layouttemplatedir.

setupIcon= resource/app/setup.ico

# Output platforms
#
# This is the platform support to include in the composed image. Valid 
# values are: windows, hpux, solaris_sparc, solaris_x86, and linux. Multiple platforms must be 
# separated by a space. For example:
#
# platforms = windows
# platforms = windows hpux linux solaris_sparc

platforms = windows linux solaris_sparc

# Java Runtime Environments
#
# Java runtime environments for different platforms to be included in the
# composed image. Valid values are: windows, windows-installer, 
# hpux, hpux-pa-installer, hpux-ia-installer, solaris_sparc, solaris-installer, 
# solaris_x86, solaris_x86-installer, linux and linux-installer. Multiple
# JREs must be separated by a space. For example:
#  
# jres = windows solaris_sparc
# jres = windows hpux-ia-installer
# jres = windows-installer hpux linux
# jres = windows hpux linux
#
# windows: Embedded Windows JRE
# windows-installer: Windows JRE installer
# 
# hpux: Embedded HP-UX JRE for both Itanium and PA_RISC machine 
# hpux-ia-installer: HP-UX JRE for Itanium
# hpux-pa-installer: HP-UX JRE for PA-RISC
#
# linux: Embedded Linux JRE
# linux-installer: Linux JRE installer
#
# solaris_sparc: Embedded Solaris Sparc JRE
# solaris-installer: Solaris Sparc JRE installer
#
# solaris_x86: Embedded Solaris x86 JRE
# solaris_x86-installer: Solaris x86 JRE installer
#
# To avoid compatibility issues, you should consider include a JRE for each 
# platform included in the image. Digital Media Consumer uses J2SE 1.4.2 for
# embedded version and 1.5.0 for installer version. 
#
# For multi-volume image, only jre installer or no jre should be specified as 
# multi-volume Consumer requires JRE resides outside of the media. An ERROR will
# be issue if an embedded JRE is specified for a multi-volume Consumer.
#
# User should not include both installer and embedded version for a platform. This
# will only take up more space in the media without additional benefit. An warning
# will be issued in this case and only the installer will be included in the 
# Consumer output.
#

jres = windows solaris_sparc linux


# Index options
#
# These properties control the DMP indexing process. Valid values are 
# "true" or "false."
#
#
# generateSummary: If set to "true," a search summary file is generated.
#                  That summary is used to generate the DMP Consumer Advanced Search
#                  page, so in most cases this property should be "true."
#
# generateFieldsetInfo: If set to "true," the fieldset settings will become an option
#                       in advance search. For example, use default fieldset, user will
#                       be able to search within "primary heading", "secondary heading",
#                       "etc.".  
#
# generateMimetypeInfo: If set to "true," the mimetypes exist in the content of the dmp
#						output will become an option for search, for example, user can search
#						content only in the given document type, such as html or pdf.
#

generateSummary=true

generateFieldsetInfo=true

generateMimetypeInfo=true

# updateStatus: how the update should be proceeded. There are three possible values
#
# 0:  Disable update, no update is generated (but update button and 
#     configuration is available in Consumer).
# 1:  Manual update: Consumer user can update content by clicking 
#     the update button 
# 2:  At launch: Consumer will check for update each time the application is starting
# 3:  Auto update: Consumer will update at scheduled time. updateSchedule property
#     must be set.
#
updateStatus=0

# updateFrom: the version that the update is based on. The version must be older
#             than the version of the current project. This property use the
#             same format as "version" property defined above, e.g. 1.0, 2.0.1, etc. 
#             It is an error if the version is the same or newer than the current 
#             version.
#
updateFrom = 1.0

# updateUrl 
# The url pointing to the folder that contains update 
# manifest file. It can be a remote URL or local directory.
#
# For remote URL, it should always starts with "http" or "https".
# For local directory, if a relative path is specified, it is relative
# to $CONSUMER_INSTALL_DIR/project/WEB-INF. For example, if updateUrl is
# set to "../_updateFolder", it indicates
# 
# $CONSUMER_INSTALL_DIR/project/_updateFolder 
#
updateUrl = updatepack 

# updateConfigurable
# 
# Whether Consumer user is able to configure update properties.
# 
# true: show update configuration page in Consumer
# false: don't show configuration page
#
# Note: update configuration page will not show even if this value is set 
#       to true if 
#       1. Consumer is not installed, or
#       2. Web deployment and the request is not from localhost
#
updateConfigurable = false

# updateSchedule
# The schedule to run update. This property value is required only if
# updateStatus is set to "3". The updateSchedule has the format of
# [UpdateType]:[DayOfMonth]:[DayOfWeek]:[HourOfDay]
# UpdateType: d (daily), w (weekly), m (monthly)
# DayOfMonth: 1-31
# DayOfWeek: 1-7
# HourOfDay: 0-23 
# 
# For example, to run update at 3am every day, the updateSchedule should look 
# like: updateSchedule = d:0:0:2
# To run update at 3am every Friday: updateSchedule=w:0:5:2
# To run update at 3am the fifth day of each month at 3am: updateSchedule=m:5:0:2
updateSchedule=w:0:1:0

# Log levels
#
# These properties control the amount of information contained in the 
# dmpprocess log file. Valid values are
#
# 0 = DEBUG (a lot of information)
# 1 = INFO
# 2 = WARN
# 3 = ERROR
# 4 = FATAL (only fatal errors are shown)

# Log level for the indexing process
#
# Do not set the value of this property to "0," unless you want to see 
# everything that is being indexed.

logLevel.index= 2

# Log level for the table of contents generation process

logLevel.toc= 1

# Log level for the content compression process

logLevel.zip= 1

# Log level for the image generation setup process

logLevel.setup= 0

# Log level for the image export process

logLevel.export= 0

# Log level for the encryption setup

logLevel.encryption = 0

# Log level for linkvalidation

logLevel.linkvalidaton = 4

# Log level for update pack generation

logLevel.update = 1
