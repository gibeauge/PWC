<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet xmlns:simg="java:net.sf.docbook.saxon.ImageIntrinsics" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ximg="xaln://com.nwalsh.xalan.ImageIntrinsics" xmlns="http://www.w3.org/1999/xhtml" xmlns:exslt="http://exslt.org/common" xmlns:_acl="java:com.arbortext.epic.Acl" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:_="http://www.pwc.ca/namespace/doctypes/emipc" xmlns:_dtd="http://www.arbortext.com/namespace/Styler/UserElements" xmlns:atidlm="http://www.arbortext.com/namespace/atidlm" xmlns:_2="http://www.pwc.ca/namespace/doctypes/jmtosmigrate" xmlns:ch="http://www.arbortext.com/namespace/chunker" xmlns:saxon="http://saxon.sf.net/" xmlns:_5="http://www.pwc.ca/namespace/doctypes/ipc" xmlns:_gte="http://www.arbortext.com/namespace/Styler/GeneratedTextElements" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:_sfe="http://www.arbortext.com/namespace/Styler/StylerFormattingElements" xmlns:_js="java:com.arbortext.epic.internal.js.JavaScript" xmlns:_3="http://www.pwc.ca/namespace/doctypes/migrate" xmlns:_ufe="http://www.arbortext.com/namespace/Styler/UserFormattingElements" version="1.0" exclude-result-prefixes="_ atidlm xml _2 ch saxon _5 xsi _js _3 #default exslt msxsl _dtd _ufe _sfe _gte simg ximg _acl">


<xsl:template match="numlist/address" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sbdata/address" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="alpha-list/address" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="num-list/address" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="glossary/address" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcchapsect-list/address" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist/address" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="address" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="aispart" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="alpha-list" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="applic-group" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="applic-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="address/att" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Attention: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="att" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="aw-notice" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="awlror" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="awlrorsection" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="barend" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="barstart" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:block-nospace" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:block-prespace" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:MetaElement>
                  <_gte:MetaName>
                     <xsl:text>dmp:projectname</xsl:text>
                  </_gte:MetaName>
                  <_gte:MetaValue>
                     <xsl:value-of select="@doctype"/>
                     <xsl:text>_</xsl:text>
                     <xsl:value-of select="@model"/>
                     <xsl:text>_</xsl:text>
                     <xsl:value-of select="@manualpnr"/>
                  </_gte:MetaValue>
               </_gte:MetaElement>
               <_gte:MetaElement>
                  <_gte:MetaName>
                     <xsl:text>dmp:version</xsl:text>
                  </_gte:MetaName>
                  <_gte:MetaValue>
                     <xsl:value-of select="@revnbr"/>
                     <xsl:text>.</xsl:text>
                     <xsl:value-of select="@point-revnbr"/>
                  </_gte:MetaValue>
               </_gte:MetaElement>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="brk" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:processing-instruction name="Pub">_newline</xsl:processing-instruction>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="figure/key/callout" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText> </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="callout" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subtask/caution" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="task/caution" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para/caution" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step/caution" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="procedure/caution" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fandc/caution" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spec-assem/caution" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spring-pressure/caution" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="torque-and-stretch/caution" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fits-and-clears/caution" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="caution[parent::subpara]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="caution" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; background-color: #FFFF00; text-decoration: underline; ">
                  <xsl:text>CAUTION</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:center" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ch-se-su" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="change" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="changebar" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapsect" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapsect-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapsect-list" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:chapsect-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapsect-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:chapsect-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:chapsect-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:chapsect-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>LIST OF CHAPTER/SECTION/SUBJECTS</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapter" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapter-front" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chgdesc" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:cir-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:cir-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:cir-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>CLEANING INSPECTION REPAIR (CIR) MANUAL</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="city" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(./*[not(self::_sfe:BeforeOrAfterText)]|./text()[normalize-space(.)!=''])">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>, </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="co-name" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="comment" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="consumable" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:value-of select="@id"/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:consumables-title" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:consumables-title" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:consumables-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//consumables//_ufe:consumables-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>Consumable Materials</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//consumables//_ufe:consumables-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>Consumable Materials</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:consumables-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="consume-list" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="country" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="csu" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="csu-instance" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="dash" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>—</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="key/def" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:processing-instruction name="Pub">_newline</xsl:processing-instruction>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="deflist/def" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:processing-instruction name="Pub">_newline</xsl:processing-instruction>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="def" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step/deflist" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="deflist" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="delete" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="deleted" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>This topic has been deleted.</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="denom" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="describe" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="description" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="effec" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:eipc-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:eipc-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:eipc-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>ILLUSTRATED PARTS CATALOG</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:em-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:em-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:em-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>OVERHAUL MANUAL</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="email" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Email: </xsl:text>
               <_ufe:email-link>
                  <xsl:if test="string(.)">
                     <xsl:attribute name="email">
                        <xsl:value-of select="string(.)"/>
                     </xsl:attribute>
                  </xsl:if>
               </_ufe:email-link>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:email-link" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_sfe:ExternalLink>
                  <xsl:if test="concat('mailto:', string(./@email))">
                     <xsl:attribute name="href">
                        <xsl:value-of select="concat('mailto:', string(./@email))"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="@email"/>
               </_sfe:ExternalLink>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='parts-list']//emphasis" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="emphasis" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="endmulti" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="engine[position()&gt;1]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>/</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="engine" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:engine-type" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@enginetype and string(@enginetype)='FAN') and not(@enginetype and string(@enginetype)='PROP') and not(@enginetype and string(@enginetype)='SHAFT') and (@enginetype and string(@enginetype)='APU')">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>AUXILIARY POWER UNIT</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(@enginetype and string(@enginetype)='FAN') and not(@enginetype and string(@enginetype)='PROP') and (@enginetype and string(@enginetype)='SHAFT')">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>TURBOSHAFT ENGINE</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(@enginetype and string(@enginetype)='FAN') and (@enginetype and string(@enginetype)='PROP')">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>TURBOPROP ENGINE</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="@enginetype and string(@enginetype)='FAN'">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>TURBOFAN ENGINE</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="eqn[preceding-sibling::*[1][name() = 'table']]" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="eqn[@display='inline' and not(child::table)]" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="eqn[@display='inline']" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="eqn" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="facility" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fandc" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fandc-note" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="address/fax" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>FAX: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fax" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:fig-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="figure/figno" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="figno" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fix-equip" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:fixequ-title" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:fixequ-title" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:fixequ-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//fixtures-and-equipment//_ufe:fixequ-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>Fixtures, Equipment and Supplier
Tools</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//fixtures-and-equipment//_ufe:fixequ-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>Fixtures, Equipment and Supplier
Tools</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:fixequ-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="eqn/frac" mode="expand-gentext" priority="20">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore -->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <table frame="none" id="frac01" tabstyle="frac">
                  <tgroup cols="2">
                     <xsl:processing-instruction name="PubTbl">tgroup                                           clmarg="0.00pt"
crmarg="0.00pt" rth="0.00pt"</xsl:processing-instruction>
                     <colspec colname="col1" colwidth="10px"/>
                     <colspec colname="col2" colwidth="10px"/>
                     <tbody>
                        <row>
                           <entry nameend="col2" namest="col1" colsep="0" rowsep="1">
                              <xsl:if test="(ancestor-or-self::frac[1]//num)[1]/*|(ancestor-or-self::frac[1]//num)[1]/text()|(ancestor-or-self::frac[1]//num)[1]/processing-instruction()">
                                 <_gte:Gentexted-Content-Wrapper>
                                    <xsl:apply-templates mode="expand-gentext" select="(ancestor-or-self::frac[1]//num)[1]/*|(ancestor-or-self::frac[1]//num)[1]/text()|(ancestor-or-self::frac[1]//num)[1]/processing-instruction()">
                                       <xsl:with-param name="skip-expanded-gentext" select="'yes'"/>
                                    </xsl:apply-templates>
                                 </_gte:Gentexted-Content-Wrapper>
                              </xsl:if>
                           </entry>
                        </row>
                        <row>
                           <entry nameend="col2" namest="col1" colsep="0" rowsep="0">
                              <xsl:if test="(ancestor-or-self::frac[1]//denom)[1]/*|(ancestor-or-self::frac[1]//denom)[1]/text()|(ancestor-or-self::frac[1]//denom)[1]/processing-instruction()">
                                 <_gte:Gentexted-Content-Wrapper>
                                    <xsl:apply-templates mode="expand-gentext" select="(ancestor-or-self::frac[1]//denom)[1]/*|(ancestor-or-self::frac[1]//denom)[1]/text()|(ancestor-or-self::frac[1]//denom)[1]/processing-instruction()">
                                       <xsl:with-param name="skip-expanded-gentext" select="'yes'"/>
                                    </xsl:apply-templates>
                                 </_gte:Gentexted-Content-Wrapper>
                              </xsl:if>
                           </entry>
                        </row>
                     </tbody>
                  </tgroup>
               </table>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="frac" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="frontmatter" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:general-title" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:general-title" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:general-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//general//_ufe:general-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>General</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//general//_ufe:general-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>General</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:general-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:glossary-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:glossary-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:glossary-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:glossary-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>GLOSSARY</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:hidden" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="highlights" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:highlights-link" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_sfe:InternalLink>
                  <xsl:if test="string(./@ref)">
                     <xsl:attribute name="targetId">
                        <xsl:value-of select="string(./@ref)"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="@content"/>
               </_sfe:InternalLink>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="history" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="hl-fragment" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:howtouse-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:howtouse-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:howtouse-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>HOW TO USE MANUAL</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="insert" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="int-mail" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>(</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>)</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="intro" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:intro-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:intro-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:intro-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>INTRODUCTION</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="isempty" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step/step/enumlist/item" mode="expand-gentext" priority="30">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="text-decoration: underline; ">
                  <_gte:styler_numbering>
                     <xsl:variable name="gte_id">
                        <xsl:choose>
                           <xsl:when test="@_gte:id">
                              <xsl:value-of select="@_gte:id"/>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:value-of select="'_g_'"/>
                              <xsl:value-of select="generate-id(.)"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:variable>
                     <xsl:attribute name="gte_id">
                        <xsl:value-of select="$gte_id"/>
                     </xsl:attribute>
                  </_gte:styler_numbering>
               </span>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist4//prclist4//prclist4//prclist4/item" mode="expand-gentext" priority="29">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list4//list4//list4//list4/item" mode="expand-gentext" priority="28">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist//enumlist//enumlist//enumlist/item" mode="expand-gentext" priority="27">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist4//prclist4//prclist4/item" mode="expand-gentext" priority="26">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list4//list4//list4/item" mode="expand-gentext" priority="25">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list//list//list/item" mode="expand-gentext" priority="24">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>♦</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist//enumlist//enumlist/item" mode="expand-gentext" priority="23">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist//bullist//bullist/item" mode="expand-gentext" priority="22">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>♦</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist4//prclist4/item" mode="expand-gentext" priority="21">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list4//list4/item" mode="expand-gentext" priority="20">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list//list/item" mode="expand-gentext" priority="19">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>–</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist//enumlist/item" mode="expand-gentext" priority="18">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist//bullist/item" mode="expand-gentext" priority="17">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>–</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list/item[table/@tabstyle='frac']" mode="expand-gentext" priority="16">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist/item[table/@tabstyle='frac']" mode="expand-gentext" priority="15">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcchapsect-list/item" mode="expand-gentext" priority="14">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="numlist/item" mode="expand-gentext" priority="13">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlist/item" mode="expand-gentext" priority="12">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist4/item" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist3/item" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist2/item" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prclist1/item" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list4/item" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list3/item" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list2/item" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list1/item" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list/item" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist/item" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist/item" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="item-nbr" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="figure/key" mode="expand-gentext" priority="20">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <hr/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="key" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="para/list" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lof" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lof-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lot" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lot-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="maint-level" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="manual-pn" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Manual Part No. </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/manual-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/manual-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/manual-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="manual-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="marker" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="model" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:title-block>
                  <xsl:text>Model(s) </xsl:text>
               </_ufe:title-block>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="module" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='trlist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))) and not((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='sblist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))) and not((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='spblist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))) and ((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='pdlist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title)))">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:pdlist-title/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='trlist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))) and not((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='sblist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))) and ((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='spblist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title)))">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:spblist-title/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='trlist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))) and ((ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='sblist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title)))">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:sblist-title/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='trlist') and (not(ancestor-or-self::page-block[1]/pageblock-title)) and (not(./title))">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:temp-rev-title/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="module-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="multi" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="no-street" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="nobrk" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:not-applicable" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Not Applicable</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="nowrap" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//_sfe:BeforeOrAfterText//_ufe:npara-numbering" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//_sfe:BeforeOrAfterText//_ufe:npara-numbering" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:npara-numbering" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="num" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="num-index" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:num-index-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:num-index-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:num-index-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:num-index-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:num-index-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>NUMERICAL INDEX</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="num-list" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:nut-option-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:nut-option-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:nut-option-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:nut-option-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>NUT OPTIONS</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="orig-date" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Original Issue date </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'epc')]//page-block[@pb-name='title-page']" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:eipc-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'tmm')]//page-block[@pb-name='title-page']" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:tmm-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'lmm')]//page-block[@pb-name='title-page']" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:tmm-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'em')]//page-block[@pb-name='title-page']" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:em-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'cir')]//page-block[@pb-name='title-page']" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:cir-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="frontmatter/page-block[@pb-name='title-page']" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'cir') or contains(@doctype, 'em')]//page-block[@pb-name='howtouse']" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:howtouse-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='supp_list']" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:supplier-list-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='glossary']" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:glossary-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='intro']" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="(./pageblock-title)">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:intro-title/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='nut_option']" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:nut-option-title/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/subpara/subpara[not(title)]/para" mode="expand-gentext" priority="52">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/subpara[not(title)]/para" mode="expand-gentext" priority="51">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="text-decoration: underline; ">
                  <_gte:styler_numbering>
                     <xsl:variable name="gte_id">
                        <xsl:choose>
                           <xsl:when test="@_gte:id">
                              <xsl:value-of select="@_gte:id"/>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:value-of select="'_g_'"/>
                              <xsl:value-of select="generate-id(.)"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:variable>
                     <xsl:attribute name="gte_id">
                        <xsl:value-of select="$gte_id"/>
                     </xsl:attribute>
                  </_gte:styler_numbering>
               </span>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara[not(title)]/para" mode="expand-gentext" priority="50">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="text-decoration: underline; ">
                  <_gte:styler_numbering>
                     <xsl:variable name="gte_id">
                        <xsl:choose>
                           <xsl:when test="@_gte:id">
                              <xsl:value-of select="@_gte:id"/>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:value-of select="'_g_'"/>
                              <xsl:value-of select="generate-id(.)"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:variable>
                     <xsl:attribute name="gte_id">
                        <xsl:value-of select="$gte_id"/>
                     </xsl:attribute>
                  </_gte:styler_numbering>
               </span>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para/subpara/subpara[child::title]/para" mode="expand-gentext" priority="49">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara[not(title)]/para" mode="expand-gentext" priority="48">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara[not(title)]/para" mode="expand-gentext" priority="47">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para/subpara[child::title]/para" mode="expand-gentext" priority="46">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem3/prcitem/para" mode="expand-gentext" priority="45">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/para" mode="expand-gentext" priority="44">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para/subpara/para" mode="expand-gentext" priority="43">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'cir')]//note/para" mode="expand-gentext" priority="42">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pageblock-front/general//para" mode="expand-gentext" priority="40">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="warning/para[1]" mode="expand-gentext" priority="40">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="caution/para[1]" mode="expand-gentext" priority="39">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:step-proc-num/para[1]" mode="expand-gentext" priority="38">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step5/para[1]" mode="expand-gentext" priority="37">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step4/para[1]" mode="expand-gentext" priority="36">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step3/para[1]" mode="expand-gentext" priority="35">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step2/para[1]" mode="expand-gentext" priority="34">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="numlitem/para[1]" mode="expand-gentext" priority="33">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="note/para[1]" mode="expand-gentext" priority="32">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlitem/para[1]" mode="expand-gentext" priority="31">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem4/para[1]" mode="expand-gentext" priority="30">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l4item/para[1]" mode="expand-gentext" priority="29">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l3item/para[1]" mode="expand-gentext" priority="28">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l2item/para[1]" mode="expand-gentext" priority="27">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l1item/para[1]" mode="expand-gentext" priority="26">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step/para[1]" mode="expand-gentext" priority="25">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="item/para[1]" mode="expand-gentext" priority="24">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para[ancestor::book[contains(@doctype, 'epc')]]/para" mode="expand-gentext" priority="18">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:step-proc-num/para[position()&gt;1]" mode="expand-gentext" priority="22">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step5/para[position()&gt;1]" mode="expand-gentext" priority="21">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step4/para[position()&gt;1]" mode="expand-gentext" priority="20">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step3/para[position()&gt;1]" mode="expand-gentext" priority="19">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step2/para[position()&gt;1]" mode="expand-gentext" priority="18">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="numlitem/para[position()&gt;1]" mode="expand-gentext" priority="17">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlitem/para[position()&gt;1]" mode="expand-gentext" priority="16">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem4/para[position()&gt;1]" mode="expand-gentext" priority="15">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l4item/para[position()&gt;1]" mode="expand-gentext" priority="14">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l3item/para[position()&gt;1]" mode="expand-gentext" priority="13">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l2item/para[position()&gt;1]" mode="expand-gentext" priority="12">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l1item/para[position()&gt;1]" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step/para[position()&gt;1]" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="item/para[position()&gt;1]" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="taskproc/para" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="title-page/para" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="numlitem/para" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="tprereq/para" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sbnbr/para" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para/para" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/para" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="nomen-col//para" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="para" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapsect-list/part-group" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="numlist/part-group" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcchapsect-list/part-group" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="part-group" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="part-loc" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="partname" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pcextract" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:pdlist-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:pdlist-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>PARTS DIGEST LIST</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk-name" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pnr" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="post-tr" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="postal" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:processing-instruction name="Pub">_hardspace</xsl:processing-instruction>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="postsb" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Post-SB</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pre-tr" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="presb" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Pre-SB</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="procedure" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="process" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwclmm-title//_ufe:proprietary-notice" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:proprietary-warning/>
               <_ufe:block-prespace>
                  <xsl:text>This manual contains proprietary information of Pratt &amp; Whitney
Canada Corp. ("P&amp;WC"), which P&amp;WC provides in confidence and
solely for the purposes of supporting engine certification and providing
applicable information regarding the proper use, maintenance, inspection,
repair, servicing, and parts application of P&amp;WC products and
services, as directed therein. Neither this manual nor any information
in it may be disclosed to others, or used for any other purpose, including,
without, limitation, to design, create, develop, reproduce, manufacture
or derive any design, part, product, material, process, modification,
configuration change or repair, or obtain FAA or other government
approval to do so. Possession and use of this manual is also subject
to the restrictions set out in P&amp;WC's Technical Data Agreement
(a copy of which may be obtained by contacting P&amp;WC Technical
Publications). The contents of this manual may be subject to export
control laws. Unauthorized export or re-export of the manual, or parts
thereof, is prohibited. By accepting and possessing this manual, you
agree to be bound by the foregoing terms.</xsl:text>
               </_ufe:block-prespace>
               <_ufe:block-prespace>
                  <xsl:text>If a Government agency or department intends to disclose any information,
written notice should be given to: VP - Legal Services, Pratt &amp;
Whitney Canada Corp., 1000 Marie-Victorin (01BE5), Longueuil, Quebec
J4G 1A1.</xsl:text>
               </_ufe:block-prespace>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:proprietary-notice" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:proprietary-warning/>
               <_ufe:block-prespace>
                  <xsl:text>This manual contains proprietary information of Pratt &amp; Whitney
Canada Corp. ("P&amp;WC"), which P&amp;WC provides in confidence and
solely for the purposes of supporting engine certification and providing
applicable information regarding the proper use, maintenance, inspection,
repair, servicing, and parts application of P&amp;WC products and
services, as directed therein. Neither this manual nor any information
in it may be disclosed to others, or used for any other purpose, including,
without, limitation, to design, create, develop, reproduce, manufacture
or derive any design, part, product, material, process, modification,
configuration change or repair, or obtain FAA or other government
approval to do so. Possession and use of this manual is also subject
to the restrictions set out in P&amp;WC's Technical Data Agreement
(a copy of which may be obtained by contacting P&amp;WC Technical
Publications). The contents of this manual may be subject to export
control laws. Unauthorized export or re-export of the manual, or parts
thereof, is prohibited. By accepting and possessing this manual, you
agree to be bound by the foregoing terms.</xsl:text>
               </_ufe:block-prespace>
               <_ufe:block-prespace>
                  <xsl:text>If a Government agency or department intends to disclose any information,
written notice should be given to: VP - Legal Services, Pratt &amp;
Whitney Canada Corp., 1000 Marie-Victorin (01BE5), Longueuil, Quebec
J4G 1A1.</xsl:text>
               </_ufe:block-prespace>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:proprietary-warning" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>WARNING - PROPRIETARY RIGHTS &amp; EXPORT CONTROLS NOTICE</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="province" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="qty[ancestor::book[contains(@doctype,'ipc')]]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="(@per-assy and string(@per-assy)='TEXT') or (@per-assy and string(@per-assy)='EMPTY')">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:value-of select="@per-assy"/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="qty" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="quantity" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="record-of-revisions" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="address/ref" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>REF: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ref" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table//refext" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="refext" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='parts-list']//refint[ancestor::book[contains(@doctype, 'epc')]]" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:refint-link>
                  <xsl:if test="string(./@refloc)">
                     <xsl:attribute name="ref">
                        <xsl:value-of select="string(./@refloc)"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="string(.)">
                     <xsl:attribute name="content">
                        <xsl:value-of select="string(.)"/>
                     </xsl:attribute>
                  </xsl:if>
               </_ufe:refint-link>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="refint[ancestor::book[contains(@doctype, 'epc')]]" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:refint-link>
                  <xsl:if test="string(./@refloc)">
                     <xsl:attribute name="ref">
                        <xsl:value-of select="string(./@refloc)"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="string(.)">
                     <xsl:attribute name="content">
                        <xsl:value-of select="string(.)"/>
                     </xsl:attribute>
                  </xsl:if>
               </_ufe:refint-link>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="refint[ancestor::book[contains(@doctype, 'cir') or contains(@doctype, 'em')]]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:refint-link>
                  <xsl:if test="string(./@refid)">
                     <xsl:attribute name="ref">
                        <xsl:value-of select="string(./@refid)"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="concat(string(.), string(./@post-auto-text))">
                     <xsl:attribute name="content">
                        <xsl:value-of select="concat(string(.), string(./@post-auto-text))"/>
                     </xsl:attribute>
                  </xsl:if>
               </_ufe:refint-link>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="refint" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="@refid">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:refint-link>
                        <xsl:if test="string(./@refid)">
                           <xsl:attribute name="ref">
                              <xsl:value-of select="string(./@refid)"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="string(.)">
                           <xsl:attribute name="content">
                              <xsl:value-of select="string(.)"/>
                           </xsl:attribute>
                        </xsl:if>
                     </_ufe:refint-link>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:refint-link>
                        <xsl:if test="string(./@ref)">
                           <xsl:attribute name="ref">
                              <xsl:value-of select="string(./@ref)"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="string(.)">
                           <xsl:attribute name="content">
                              <xsl:value-of select="string(.)"/>
                           </xsl:attribute>
                        </xsl:if>
                     </_ufe:refint-link>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:refint-link" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_sfe:InternalLink>
                  <xsl:if test="string(./@ref)">
                     <xsl:attribute name="targetId">
                        <xsl:value-of select="string(./@ref)"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="@content"/>
               </_sfe:InternalLink>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="title-page//rev-date" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="rev-date" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:revdate-block" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="revend" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="revst" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sb" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>SB</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sb-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sblist" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:sblist-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:sblist-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:sblist-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>SERVICE BULLETIN LIST</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="section" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sin" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="source-item" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:spblist-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:spblist-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:spblist-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>SPARE PARTS BULLETIN LIST</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spec-tool-head" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spec-tool-row" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spec-tool-table" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:spectools-title" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:spectools-title" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:spectools-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//special-tools//_ufe:spectools-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>Special Tools</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//special-tools//_ufe:spectools-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
               <span style="text-decoration: underline; ">
                  <xsl:text>Special Tools</xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:spectools-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sqrt" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>√</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="state" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(./*[not(self::_sfe:BeforeOrAfterText)]|./text()[normalize-space(.)!=''])">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:processing-instruction name="Pub">_hardspace</xsl:processing-instruction>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sub" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subject" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/subpara[title and ancestor::subpara[not(title)]]" mode="expand-gentext" priority="15">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/subpara[not(title) and ancestor::subpara[title]]" mode="expand-gentext" priority="14">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/subpara[not(title)]" mode="expand-gentext" priority="13">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara[title and ancestor::subpara[not(title)]]" mode="expand-gentext" priority="12">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara[not(title) and ancestor::subpara[title]]" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara[not(title)]" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara[title and ancestor::subpara[not(title)]]" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara[not(title) and ancestor::subpara[title]]" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara[not(title)]" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='intro']//n-para/subpara[child::title]" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='intro']//n-para/subpara" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara[title and ancestor::subpara[not(title)]]" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara[not(title) and ancestor::subpara[title]]" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara[not(title)]" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara[not(title)]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sup" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:supplier-list-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:supplier-list-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcspblist/_ufe:supplier-list-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:supplier-list-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>SUPPLIER LIST</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@display='expand']" mode="expand-gentext" priority="13">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[not(title) and not(@tabstyle='frac')]" mode="expand-gentext" priority="12">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="sheet/gdesc/table" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="highlights/table" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="figure/table" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="mfmatr//table[title]" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="mfmatr//table" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='eqn' and @display='inline']" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='IPCDET']" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='frac' and parent::item]" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='frac' and parent::step1 or @tabstyle='frac' and parent::step2 or @tabstyle='frac' and parent::step3 or @tabstyle='frac' and parent::step4 or @tabstyle='frac' and parent::step5]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='frac']" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates mode="expand-gentext" select="@*|node()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@tabstyle='eqn']" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="(@tabstyle and string(@tabstyle)='general') or (@tabstyle and string(@tabstyle)='consumables') or (@tabstyle and string(@tabstyle)='special-tools') or (@tabstyle and string(@tabstyle)='fixtures-and-equipment')">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:npara-numbering/>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:task-postspace" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:task-title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:task-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr//_ufe:task-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:task-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="address/tel[1]" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>TEL: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="address/tel[position()&gt;1]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="tel" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:temp-rev-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:temp-rev-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:temp-rev-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>TEMPORARY REVISION INDEX</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="deflist/term" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <xsl:text>     </xsl:text>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="term" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/subpara/title" mode="expand-gentext" priority="72">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="text-decoration: underline; ">
                  <_gte:styler_numbering>
                     <xsl:variable name="gte_id">
                        <xsl:choose>
                           <xsl:when test="@_gte:id">
                              <xsl:value-of select="@_gte:id"/>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:value-of select="'_g_'"/>
                              <xsl:value-of select="generate-id(.)"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:variable>
                     <xsl:attribute name="gte_id">
                        <xsl:value-of select="$gte_id"/>
                     </xsl:attribute>
                  </_gte:styler_numbering>
               </span>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/subpara/title" mode="expand-gentext" priority="71">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="text-decoration: underline; ">
                  <_gte:styler_numbering>
                     <xsl:variable name="gte_id">
                        <xsl:choose>
                           <xsl:when test="@_gte:id">
                              <xsl:value-of select="@_gte:id"/>
                           </xsl:when>
                           <xsl:otherwise>
                              <xsl:value-of select="'_g_'"/>
                              <xsl:value-of select="generate-id(.)"/>
                           </xsl:otherwise>
                        </xsl:choose>
                     </xsl:variable>
                     <xsl:attribute name="gte_id">
                        <xsl:value-of select="$gte_id"/>
                     </xsl:attribute>
                  </_gte:styler_numbering>
               </span>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/subpara/title" mode="expand-gentext" priority="70">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'epc')]/frontmatter//graphic/title" mode="expand-gentext" priority="69">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'ipc')]/frontmatter//figure/title" mode="expand-gentext" priority="68">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//task/graphic/title" mode="expand-gentext" priority="67">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and not(ancestor::task/@varnbr!='')">
               <!--AddBefore Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and (ancestor::task/@varnbr!='')">
               <!--AddBefore Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and (ancestor::task/@confltr!='')">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='')">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!=''">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and not(ancestor::task/@varnbr!='')">
               <!--AddAfter Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and (ancestor::task/@varnbr!='')">
               <!--AddAfter Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@varnbr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and (ancestor::task/@confltr!='')">
               <!--AddAfter Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@confltr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='')">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@varnbr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!=''">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@confltr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//task/graphic/title" mode="expand-gentext" priority="66">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and not(ancestor::task/@varnbr!='')">
               <!--AddBefore Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and (ancestor::task/@varnbr!='')">
               <!--AddBefore Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and (ancestor::task/@confltr!='')">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='')">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!=''">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and not(ancestor::task/@varnbr!='')">
               <!--AddAfter Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='') and (ancestor::task/@varnbr!='')">
               <!--AddAfter Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@varnbr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and (ancestor::task/@confltr!='')">
               <!--AddAfter Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@confltr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='')">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@varnbr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!=''">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text> (Task </xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                     <xsl:text>-</xsl:text>
                     <xsl:value-of select="ancestor-or-self::task[1]/@confltr"/>
                     <xsl:text>)</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='glossary']/module/title" mode="expand-gentext" priority="61">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block[@pb-name='supp_list']/module/title" mode="expand-gentext" priority="60">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="mm-fits/subpara/title" mode="expand-gentext" priority="62">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem4/prcitem/title" mode="expand-gentext" priority="60">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem3/prcitem/title" mode="expand-gentext" priority="60">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem2/prcitem/title" mode="expand-gentext" priority="59">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem1/prcitem/title" mode="expand-gentext" priority="55">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/subpara/title" mode="expand-gentext" priority="57">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'epc')]//figure/title" mode="expand-gentext" priority="54">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Figure </xsl:text>
               <xsl:value-of select="ancestor-or-self::figure[1]/@fignbr"/>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'epc')]//graphic/title" mode="expand-gentext" priority="53">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Figure </xsl:text>
               <xsl:value-of select="ancestor-or-self::graphic[1]/@fignbr"/>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book[contains(@doctype, 'ipc')]//figure/title" mode="expand-gentext" priority="52">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Figure </xsl:text>
               <xsl:if test="(ancestor-or-self::figure[1]//figno)[1]/*|(ancestor-or-self::figure[1]//figno)[1]/text()|(ancestor-or-self::figure[1]//figno)[1]/processing-instruction()">
                  <_gte:Gentexted-Content-Wrapper>
                     <xsl:apply-templates mode="expand-gentext" select="(ancestor-or-self::figure[1]//figno)[1]/*|(ancestor-or-self::figure[1]//figno)[1]/text()|(ancestor-or-self::figure[1]//figno)[1]/processing-instruction()">
                        <xsl:with-param name="skip-expanded-gentext" select="'yes'"/>
                     </xsl:apply-templates>
                  </_gte:Gentexted-Content-Wrapper>
               </xsl:if>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="task//table/title" mode="expand-gentext" priority="51">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:variable name="gentext-inserts-current-title" select="'false'"/>
         <xsl:attribute name="_gte:unhidden-title">
            <xsl:choose>
               <xsl:when test="$gentext-inserts-current-title='true'">yes</xsl:when>
               <xsl:otherwise>no</xsl:otherwise>
            </xsl:choose>
         </xsl:attribute>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='' and ../@display='expand') and not(ancestor::task/@varnbr!='' and ../@display='expand') and not(../@display='expand')">
               <!--AddBefore Condition #8-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                     </_ufe:hidden>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='' and ../@display='expand') and not(ancestor::task/@varnbr!='' and ../@display='expand') and (../@display='expand')">
               <!--AddBefore Condition #7-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='' and ../@display='expand') and (ancestor::task/@varnbr!='' and ../@display='expand')">
               <!--AddBefore Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and (ancestor::task/@confltr!='' and ../@display='expand')">
               <!--AddBefore Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                     </_ufe:hidden>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand')">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand')">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand'">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='' and ../@display='expand') and not(ancestor::task/@varnbr!='' and ../@display='expand') and not(../@display='expand')">
               <!--AddAfter Condition #8-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>
                        <_ufe:block-nospace>
                           <xsl:text> (Task </xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                           <xsl:text>)</xsl:text>
                        </_ufe:block-nospace>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='' and ../@display='expand') and not(ancestor::task/@varnbr!='' and ../@display='expand') and (../@display='expand')">
               <!--AddAfter Condition #7-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:block-nospace>
                        <xsl:text> (Task </xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                        <xsl:text>)</xsl:text>
                     </_ufe:block-nospace>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and not(ancestor::task/@confltr!='' and ../@display='expand') and (ancestor::task/@varnbr!='' and ../@display='expand')">
               <!--AddAfter Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:block-nospace>
                        <xsl:text> (Task </xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@varnbr"/>
                        <xsl:text>)</xsl:text>
                     </_ufe:block-nospace>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13) and (ancestor::task/@confltr!='' and ../@display='expand')">
               <!--AddAfter Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:block-nospace>
                        <xsl:text> (Task </xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@confltr"/>
                        <xsl:text>)</xsl:text>
                     </_ufe:block-nospace>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>
                        <_ufe:block-nospace>
                           <xsl:text> (Task </xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                           <xsl:text>-</xsl:text>
                           <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                           <xsl:text>)</xsl:text>
                        </_ufe:block-nospace>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ../@display='expand')">
               <!--AddAfter Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:block-nospace>
                        <xsl:text> (Task </xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                        <xsl:text>)</xsl:text>
                     </_ufe:block-nospace>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand') and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@varnbr!='' and ../@display='expand')">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:block-nospace>
                        <xsl:text> (Task </xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@varnbr"/>
                        <xsl:text>)</xsl:text>
                     </_ufe:block-nospace>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13 and ancestor::task/@confltr!='' and ../@display='expand'">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:block-nospace>
                        <xsl:text> (Task </xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@chapnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@sectnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@subjnbr"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@func"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@seq"/>
                        <xsl:text>-</xsl:text>
                        <xsl:value-of select="ancestor-or-self::task[1]/@confltr"/>
                        <xsl:text>)</xsl:text>
                     </_ufe:block-nospace>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//graphic/title" mode="expand-gentext" priority="50">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//graphic/title" mode="expand-gentext" priority="49">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//mm-fits/title" mode="expand-gentext" priority="47">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//mm-fits/title" mode="expand-gentext" priority="46">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//fits-and-clears/title" mode="expand-gentext" priority="46">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//fits-and-clears/title" mode="expand-gentext" priority="45">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block//n-para/title" mode="expand-gentext" priority="43">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block//n-para/title" mode="expand-gentext" priority="42">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="mfmatr/title" mode="expand-gentext" priority="42">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">no</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="figure/title" mode="expand-gentext" priority="41">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh']) and (ancestor::page-block/@pb-name[.='it-oh' or .='lt-oh'])">
               <!--AddBefore Condition #36-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh'])">
               <!--AddBefore Condition #35-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #34-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #33-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddBefore Condition #32-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddBefore Condition #31-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddBefore Condition #30-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddBefore Condition #29-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #28-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #27-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddBefore Condition #26-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddBefore Condition #25-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddBefore Condition #24-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddBefore Condition #23-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')])">
               <!--AddBefore Condition #22-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')])">
               <!--AddBefore Condition #21-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddBefore Condition #20-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddBefore Condition #19-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddBefore Condition #18-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddBefore Condition #17-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddBefore Condition #16-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddBefore Condition #15-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddBefore Condition #14-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddBefore Condition #13-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddBefore Condition #12-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddBefore Condition #11-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddBefore Condition #10-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and (ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddBefore Condition #9-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00')">
               <!--AddBefore Condition #8-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00')">
               <!--AddBefore Condition #7-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddBefore Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddBefore Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and (ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Figure <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service'])">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh']) and (ancestor::page-block/@pb-name[.='it-oh' or .='lt-oh'])">
               <!--AddAfter Condition #36-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh'])">
               <!--AddAfter Condition #35-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddAfter Condition #34-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddAfter Condition #33-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddAfter Condition #32-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddAfter Condition #31-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddAfter Condition #30-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddAfter Condition #29-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddAfter Condition #28-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddAfter Condition #27-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddAfter Condition #26-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddAfter Condition #25-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddAfter Condition #24-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddAfter Condition #23-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')])">
               <!--AddAfter Condition #22-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')])">
               <!--AddAfter Condition #21-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddAfter Condition #20-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddAfter Condition #19-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddAfter Condition #18-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddAfter Condition #17-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddAfter Condition #16-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddAfter Condition #15-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddAfter Condition #14-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddAfter Condition #13-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddAfter Condition #12-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddAfter Condition #11-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddAfter Condition #10-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and (ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddAfter Condition #9-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00')">
               <!--AddAfter Condition #8-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00')">
               <!--AddAfter Condition #7-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddAfter Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddAfter Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddAfter Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and (ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddAfter Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service'])">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subpara/title" mode="expand-gentext" priority="38">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="procedure/title" mode="expand-gentext" priority="37">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="(ancestor-or-self::table[1]/@role and string(ancestor-or-self::table[1]/@role)='torque-and-stretch') or (ancestor-or-self::table[1]/@role and string(ancestor-or-self::table[1]/@role)='spec-assem')">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="taskproc/title" mode="expand-gentext" priority="34">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="nutopt/title" mode="expand-gentext" priority="32">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/title" mode="expand-gentext" priority="29">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText/>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pwcchapsect-item/title" mode="expand-gentext" priority="28">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="tprereq/title" mode="expand-gentext" priority="27">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subtask/title" mode="expand-gentext" priority="26">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fits/title" mode="expand-gentext" priority="25">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="task/title" mode="expand-gentext" priority="24">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <!--XSL choose added to support title underline-->
         <xsl:choose>
            <xsl:when test="not(@_gte:Gentext-Expanded)">
               <span style="text-decoration: underline;">
                  <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
               </span>
            </xsl:when>
            <xsl:otherwise>
               <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="howtouse/title" mode="expand-gentext" priority="23">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">no</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="highlights/title" mode="expand-gentext" priority="22">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lot-item/title" mode="expand-gentext" priority="20">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lot/title" mode="expand-gentext" priority="19">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table//procedure//title" mode="expand-gentext" priority="17">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="torque-and-stretch/title" mode="expand-gentext" priority="16">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spec-tool-table/title" mode="expand-gentext" priority="15">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subject/title" mode="expand-gentext" priority="13">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="section/title" mode="expand-gentext" priority="12">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="page-block/title" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="frontmatter/title" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table[@display='expand']/title" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/ata-page-block//table/title)">
               <!--AddBefore Condition #39-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/page-block//table/title)">
               <!--AddBefore Condition #38-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='it-oh') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='it-oh')">
               <!--AddBefore Condition #37-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='it-oh')">
               <!--AddBefore Condition #36-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #35-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #34-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddBefore Condition #33-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddBefore Condition #32-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddBefore Condition #31-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddBefore Condition #30-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #29-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #28-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddBefore Condition #27-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddBefore Condition #26-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddBefore Condition #25-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddBefore Condition #24-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddBefore Condition #23-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddBefore Condition #22-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddBefore Condition #21-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddBefore Condition #20-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddBefore Condition #19-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddBefore Condition #18-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddBefore Condition #17-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddBefore Condition #16-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddBefore Condition #15-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddBefore Condition #14-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddBefore Condition #13-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and (ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddBefore Condition #12-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00')">
               <!--AddBefore Condition #11-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00')">
               <!--AddBefore Condition #10-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddBefore Condition #9-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddBefore Condition #8-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddBefore Condition #7-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and (ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddBefore Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service'])">
               <!--AddBefore Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service'])">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>Table <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/ata-page-block//table/title)"><!--AddAfter Condition #39--></xsl:when>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/page-block//table/title)"><!--AddAfter Condition #38--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='it-oh') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='it-oh')"><!--AddAfter Condition #37--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='it-oh')"><!--AddAfter Condition #36--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #35--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #34--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])"><!--AddAfter Condition #33--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])"><!--AddAfter Condition #32--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])"><!--AddAfter Condition #31--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])"><!--AddAfter Condition #30--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #29--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #28--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])"><!--AddAfter Condition #27--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])"><!--AddAfter Condition #26--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])"><!--AddAfter Condition #25--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])"><!--AddAfter Condition #24--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddAfter Condition #23-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddAfter Condition #22-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])"><!--AddAfter Condition #21--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])"><!--AddAfter Condition #20--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddAfter Condition #19-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddAfter Condition #18-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::page-block/@pb-name[starts-with(., 'mainprac')])"><!--AddAfter Condition #17--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')])"><!--AddAfter Condition #16--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddAfter Condition #15-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddAfter Condition #14-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])"><!--AddAfter Condition #13--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and (ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])"><!--AddAfter Condition #12--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00')"><!--AddAfter Condition #11--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00')"><!--AddAfter Condition #10--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])"><!--AddAfter Condition #9--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])"><!--AddAfter Condition #8--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])"><!--AddAfter Condition #7--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and (ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])"><!--AddAfter Condition #6--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service'])">
               <!--AddAfter Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service'])">
               <!--AddAfter Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="table/title" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:variable name="gentext-inserts-current-title" select="'false'"/>
         <xsl:attribute name="_gte:unhidden-title">
            <xsl:choose>
               <xsl:when test="$gentext-inserts-current-title='true'">yes</xsl:when>
               <xsl:otherwise>no</xsl:otherwise>
            </xsl:choose>
         </xsl:attribute>
         <xsl:choose>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/ata-page-block//table/title)">
               <!--AddBefore Condition #41-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/page-block//table/title)">
               <!--AddBefore Condition #40-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_gte:styler_numbering>
                        <xsl:variable name="gte_id">
                           <xsl:choose>
                              <xsl:when test="@_gte:id">
                                 <xsl:value-of select="@_gte:id"/>
                              </xsl:when>
                              <xsl:otherwise>
                                 <xsl:value-of select="'_g_'"/>
                                 <xsl:value-of select="generate-id(.)"/>
                              </xsl:otherwise>
                           </xsl:choose>
                        </xsl:variable>
                        <xsl:attribute name="gte_id">
                           <xsl:value-of select="$gte_id"/>
                        </xsl:attribute>
                     </_gte:styler_numbering>
                     <xsl:text> </xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh']) and (ancestor::page-block/@pb-name[.='it-oh' or .='lt-oh'])">
               <!--AddBefore Condition #39-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh'])">
               <!--AddBefore Condition #38-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #37-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #36-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddBefore Condition #35-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])">
               <!--AddBefore Condition #34-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddBefore Condition #33-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])">
               <!--AddBefore Condition #32-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #31-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])">
               <!--AddBefore Condition #30-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddBefore Condition #29-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])">
               <!--AddBefore Condition #28-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddBefore Condition #27-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])">
               <!--AddBefore Condition #26-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')])">
               <!--AddBefore Condition #25-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')])">
               <!--AddBefore Condition #24-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddBefore Condition #23-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddBefore Condition #22-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddBefore Condition #21-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])">
               <!--AddBefore Condition #20-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddBefore Condition #19-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddBefore Condition #18-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddBefore Condition #17-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')])">
               <!--AddBefore Condition #16-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddBefore Condition #15-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddBefore Condition #14-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddBefore Condition #13-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and (ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])">
               <!--AddBefore Condition #12-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00')">
               <!--AddBefore Condition #11-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00')">
               <!--AddBefore Condition #10-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddBefore Condition #9-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])">
               <!--AddBefore Condition #8-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddBefore Condition #7-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and (ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])">
               <!--AddBefore Condition #6-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                        <xsl:text> </xsl:text>
                     </_ufe:hidden>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service'])">
               <!--AddBefore Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service'])">
               <!--AddBefore Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                     </_ufe:hidden>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <_ufe:hidden>Table <_gte:styler_numbering>
                           <xsl:variable name="gte_id">
                              <xsl:choose>
                                 <xsl:when test="@_gte:id">
                                    <xsl:value-of select="@_gte:id"/>
                                 </xsl:when>
                                 <xsl:otherwise>
                                    <xsl:value-of select="'_g_'"/>
                                    <xsl:value-of select="generate-id(.)"/>
                                 </xsl:otherwise>
                              </xsl:choose>
                           </xsl:variable>
                           <xsl:attribute name="gte_id">
                              <xsl:value-of select="$gte_id"/>
                           </xsl:attribute>
                        </_gte:styler_numbering>
                     </_ufe:hidden>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/ata-page-block//table/title)"><!--AddAfter Condition #41--></xsl:when>
            <xsl:when test="(ancestor-or-self::table[1]/@tabstyle and string(ancestor-or-self::table[1]/@tabstyle)='fits-and-clears') and (/page-block//table/title)"><!--AddAfter Condition #40--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh']) and (ancestor::page-block/@pb-name[.='it-oh' or .='lt-oh'])"><!--AddAfter Condition #39--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[.='it-oh' or .='lt-oh'])"><!--AddAfter Condition #38--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #37--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and not(ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::ata-page-block/@pb-name[starts-with(.,'storage') or (starts-with(., 'to') and 'to' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #36--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble']) and (ancestor::page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])"><!--AddAfter Condition #35--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'fc') and 'fc' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'repair') or .='trouble'])"><!--AddAfter Condition #34--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)]) and (ancestor::page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])"><!--AddAfter Condition #33--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and not(ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'as') and 'as' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'clean') or (starts-with(., 'test') and 'test' = translate(., '0123456789', '') and string-length(.) &gt; 4)])"><!--AddAfter Condition #32--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)]) and (ancestor::page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #31--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and not(ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::ata-page-block/@pb-name[.='f-and-c' or starts-with(., 'inspect') or (starts-with(., 're') and 're' = translate(., '0123456789', '') and string-length(.) &gt; 2)])"><!--AddAfter Condition #30--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test']) and (ancestor::page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])"><!--AddAfter Condition #29--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and not(ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'assy') or (starts-with(., 'ic') and 'ic' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'te') and 'te' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='test'])"><!--AddAfter Condition #28--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)]) and (ancestor::page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])"><!--AddAfter Condition #27--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'cl') and 'cl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='install' or starts-with(.,'rem-inst') or (starts-with(., 'reminst') and 'reminst' = translate(., '0123456789', '') and string-length(.) &gt; 7) or .='remove' or (starts-with(., 'repair') and 'repair' = translate(., '0123456789', '') and string-length(.) &gt; 6)])"><!--AddAfter Condition #26--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'test')])">
               <!--AddAfter Condition #25-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'test')])">
               <!--AddAfter Condition #24-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddAfter Condition #23-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and not(ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'repair')])">
               <!--AddAfter Condition #22-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')]) and (ancestor::page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])"><!--AddAfter Condition #21--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'di') and 'di' = translate(., '0123456789', '') and string-length(.) &gt; 2) or starts-with(.,'service')])"><!--AddAfter Condition #20--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddAfter Condition #19-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and not(ancestor::page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'inspect')])">
               <!--AddAfter Condition #18-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')]) and (ancestor::page-block/@pb-name[starts-with(., 'mainprac')])"><!--AddAfter Condition #17--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::ata-page-block/@pb-name[starts-with(., 'mainprac')])"><!--AddAfter Condition #16--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddAfter Condition #15-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and not(ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[starts-with(., 'clean')])">
               <!--AddAfter Condition #14-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and not(ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')]) and (ancestor::page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])"><!--AddAfter Condition #13--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and not(ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00') and (ancestor::ata-page-block/@pb-name[starts-with(., 'disassy') or starts-with(., 'fault')])"><!--AddAfter Condition #12--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00') and (ancestor-or-self::page-block[1]/@pb-name and string(ancestor-or-self::page-block[1]/@pb-name)='intro00')"><!--AddAfter Condition #11--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and not(ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor-or-self::ata-page-block[1]/@pb-name and string(ancestor-or-self::ata-page-block[1]/@pb-name)='intro00')"><!--AddAfter Condition #10--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk']) and (ancestor::page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])"><!--AddAfter Condition #9--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and not(ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::ata-page-block/@pb-name[(starts-with(., 'do') and 'do' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'in') and 'in' = translate(., '0123456789', '') and string-length(.) &gt; 2) or (starts-with(., 'tl') and 'tl' = translate(., '0123456789', '') and string-length(.) &gt; 2) or .='toolsht' or .='trlist' or .='unschedc' or .='unschedchk'])"><!--AddAfter Condition #8--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and not(ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page']) and (ancestor::page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])"><!--AddAfter Condition #7--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service']) and (ancestor::ata-page-block/@pb-name[.='00awl' or .='00intro' or .='airlim' or .='awl' or .='awlror' or .='chapsect' or .='consume' or .='d-and-o' or .='frontmatte' or .='howtouse' or .='00howtouse' or .='intro' or .='nut_option' or .='oplimits' or .='sblist' or .='schedchk' or .='spectool' or .='timelim' or .='title-page'])"><!--AddAfter Condition #6--></xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service']) and (ancestor::book[contains(@doctype,'oh')] and ancestor::page-block/@pb-name[.='service'])">
               <!--AddAfter Condition #5-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="not(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (ancestor::book[contains(@doctype,'oh')] and ancestor::ata-page-block/@pb-name[.='service'])">
               <!--AddAfter Condition #4-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and not(number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #3-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:when test="(ancestor::book[contains(@doctype,'cir') or contains(@doctype,'em') or contains(@doctype,'tmm')]) and (number(ancestor::pgblk/@pgblknbr)&gt;0 and number(ancestor::pgblk/@pgblknbr)&lt;=13)">
               <!--AddAfter Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapter/title" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="book/title" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="ata-page-block/title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="title-page/title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:title-block" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="title-page" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"> </xsl:apply-templates>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
         <!--Unconditional AddAfter-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:proprietary-notice/>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pgblk/_ufe:tmm-title" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="pbfmatr/_ufe:tmm-title" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:tmm-title" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:attribute name="_gte:unhidden-title">yes</xsl:attribute>
         <xsl:choose>
            <xsl:when test="contains(//book/@doctype, 'lmm')">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>LINE MAINTENANCE MANUAL</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>MAINTENANCE MANUAL</xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="toc" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="tool" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="toolname" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="toolnbr" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trbody" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trfignum" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trfmatr" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trreason" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trsupdata" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trtblnum" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="trxref" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="title-page/type" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="type" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="prcitem3/prcitem/unlist" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="tprereq/unlist" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l1item/unlist" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l2item/unlist" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l3item/unlist" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="l4item/unlist" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlist[ancestor::book[contains(@doctype,'epc')]]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlist" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist//enumlist//enumlist//enumlist/unlitem" mode="expand-gentext" priority="12">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist//enumlist//enumlist/unlitem" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list//list//list/unlitem" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>♦</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist//bullist//bullist/unlitem" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>♦</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist//enumlist/unlitem" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list//list/unlitem" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>–</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist//bullist/unlitem" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>–</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="enumlist/unlitem" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_gte:styler_numbering>
                  <xsl:variable name="gte_id">
                     <xsl:choose>
                        <xsl:when test="@_gte:id">
                           <xsl:value-of select="@_gte:id"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="'_g_'"/>
                           <xsl:value-of select="generate-id(.)"/>
                        </xsl:otherwise>
                     </xsl:choose>
                  </xsl:variable>
                  <xsl:attribute name="gte_id">
                     <xsl:value-of select="$gte_id"/>
                  </xsl:attribute>
               </_gte:styler_numbering>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="chapsect-list/unlitem" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlist/unlitem" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:choose>
            <xsl:when test="not(ancestor-or-self::unlist[1]/@bulltype and string(ancestor-or-self::unlist[1]/@bulltype)='NDASH') and (ancestor-or-self::unlist[1]/@bulltype and string(ancestor-or-self::unlist[1]/@bulltype)='BULLET')">
               <!--AddBefore Condition #2-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:text>•</xsl:text>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
            <xsl:when test="ancestor-or-self::unlist[1]/@bulltype and string(ancestor-or-self::unlist[1]/@bulltype)='NDASH'">
               <!--AddBefore Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <span style="font-family: 'Agency FB'; ">
                        <xsl:text>–</xsl:text>
                     </span>
                     <xsl:text> </xsl:text>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:when>
         </xsl:choose>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="list/unlitem" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="bullist/unlitem" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>•</xsl:text>
               <xsl:text> </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="unlitem" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="url" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>Website: </xsl:text>
               <_ufe:url-link>
                  <xsl:if test="string(.)">
                     <xsl:attribute name="url">
                        <xsl:value-of select="string(.)"/>
                     </xsl:attribute>
                  </xsl:if>
               </_ufe:url-link>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_ufe:url-link" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_sfe:ExternalLink>
                  <xsl:if test="concat('http://', string(./@url))">
                     <xsl:attribute name="href">
                        <xsl:value-of select="concat('http://', string(./@url))"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:value-of select="@url"/>
               </_sfe:ExternalLink>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="validation" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step//step/warning" mode="expand-gentext" priority="11">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="subtask/warning" mode="expand-gentext" priority="10">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="n-para/warning" mode="expand-gentext" priority="9">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="step/warning" mode="expand-gentext" priority="8">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="task/warning" mode="expand-gentext" priority="7">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fandc/warning" mode="expand-gentext" priority="6">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spec-assem/warning" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="spring-pressure/warning" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="torque-and-stretch/warning" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="fits-and-clears/warning" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="warning[parent::subpara]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="warning" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-weight: bold; color: #FFFF00; background-color: #FF0000; text-decoration: underline; ">
                  <xsl:text>WARNING</xsl:text>
               </span>
               <xsl:text>: </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lof-item//xref[id(@ref)/self::graphic]" mode="expand-gentext" priority="5">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="lof-item//xref[id(@ref)/self::figure]" mode="expand-gentext" priority="16">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="highlights//xref" mode="expand-gentext" priority="4">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <_ufe:highlights-link>
                  <xsl:if test="string(./@ref)">
                     <xsl:attribute name="ref">
                        <xsl:value-of select="string(./@ref)"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="string(.)">
                     <xsl:attribute name="content">
                        <xsl:value-of select="string(.)"/>
                     </xsl:attribute>
                  </xsl:if>
               </_ufe:highlights-link>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="xref[id(@ref)/self::figure]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates mode="expand-gentext" select="@*"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()"> </xsl:apply-templates>
      </xsl:copy>
   </xsl:template>

<xsl:template match="zip" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
         <xsl:choose>
            <xsl:when test="not(./*[not(self::_sfe:BeforeOrAfterText)]|./text()[normalize-space(.)!=''])">
               <!--AddAfter Condition #1-->
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText/>
               </xsl:if>
            </xsl:when>
            <xsl:otherwise>
               <xsl:if test="not(@_gte:Gentext-Expanded)">
                  <_sfe:BeforeOrAfterText>
                     <xsl:processing-instruction name="Pub">_hardspace</xsl:processing-instruction>
                  </_sfe:BeforeOrAfterText>
               </xsl:if>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_gte:TableOfContents" mode="expand-gentext">
      <_gte:deferredTableOfContents tocNameRef="@tocNameRef"/>
   </xsl:template>

<xsl:template match="_gte:deferredTableOfContents" mode="expand-gentext">
      <xsl:choose>
         <xsl:when test="@tocNameRef='Table_of_Contents'">
            <xsl:call-template name="_gte-toc-Table_of_Contents"/>
         </xsl:when>
         <xsl:when test="false()"/>
      </xsl:choose>
   </xsl:template>

<xsl:template match="_gte:FootnoteBody" mode="expand-gentext" priority="-2">
      <xsl:copy>
         <xsl:apply-templates select="@* | node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_gte:Gentexted-Content-Wrapper" mode="expand-gentext">
      <xsl:copy>
         <xsl:apply-templates select="@* | node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_gte:Deferred-styler_numbering" mode="expand-gentext">
      <xsl:variable name="match">
         <xsl:choose>
            <xsl:when test="contains(@match,':')">
               <xsl:value-of select="substring-after(@match,':')"/>
            </xsl:when>
            <xsl:otherwise>
               <xsl:value-of select="@match"/>
            </xsl:otherwise>
         </xsl:choose>
      </xsl:variable>
      <xsl:variable name="gte_id" select="@gte_id"/>
      <xsl:choose>
         <xsl:when test="$gte_id">
            <xsl:apply-templates mode="styler_numbering" select="//*[@_gte:id=$gte_id]"/>
         </xsl:when>
         <xsl:when test="contains($match,'[')">
            <xsl:variable name="elemname" select="substring-before($match,'[')"/>
            <xsl:apply-templates mode="styler_numbering" select="ancestor::*[name()=$elemname][1]"/>
         </xsl:when>
         <xsl:otherwise>
            <xsl:apply-templates mode="styler_numbering" select="ancestor::*[name()=$match][1]"/>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>

<xsl:template match="_gte:styler_numbering" mode="expand-gentext">
      <xsl:copy>
         <xsl:copy-of select="@*"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_gte:deferredCrossReference" mode="expand-gentext">
      <_gte:deferredCrossReference2>
         <xsl:copy-of select="@*"/>
      </_gte:deferredCrossReference2>
   </xsl:template>

<xsl:template match="_gte:deferredCrossReference2" mode="expand-gentext">
      <xsl:variable name="refed-id" select="@refed-id"/>
      <xsl:variable name="child-title-node" select="(//*[@_gte:id=$refed-id]/*[@_gte:unhidden-title]|//*[@_gte:id=$refed-id]/_sfe:BeforeOrAfterText/*[@_gte:unhidden-title])[1]"/>
      <xsl:choose>
         <xsl:when test="@xrefStyle='Label_Number'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Label_Number"/>
         </xsl:when>
         <xsl:when test="@xrefStyle='Label_Number_Text'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Label_Number_Text"/>
         </xsl:when>
         <xsl:when test="@xrefStyle='Label_Number_Text_Page'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Label_Number_Text_Page"/>
         </xsl:when>
         <xsl:when test="@xrefStyle='Number'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Number"/>
         </xsl:when>
         <xsl:when test="@xrefStyle='Number_Text'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Number_Text"/>
         </xsl:when>
         <xsl:when test="@xrefStyle='Page'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Page"/>
         </xsl:when>
         <xsl:when test="@xrefStyle='Text'">
            <xsl:apply-templates select="$child-title-node" mode="styler_xref-Text"/>
         </xsl:when>
         <xsl:when test="false()"/>
      </xsl:choose>
   </xsl:template>

<xsl:template match="_sfe:BeforeOrAfterText" mode="expand-gentext" priority="100">
      <xsl:param name="skip-expanded-gentext" select="'no'"/>
      <xsl:choose>
         <xsl:when test="$skip-expanded-gentext='yes'"/>
         <xsl:otherwise>
            <xsl:copy>
               <xsl:apply-templates select="@* | node()" mode="expand-gentext"/>
            </xsl:copy>
         </xsl:otherwise>
      </xsl:choose>
   </xsl:template>

<xsl:template match="_gte:MetaElement" mode="expand-gentext">
      <xsl:copy>
         <xsl:apply-templates select="@* | node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:BeforeOrAfterText" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:CollectionItem[1]" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:CollectionItem[position()&gt;1 and not(position()=last())]" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>, </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:CollectionItem[last()]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>, and </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:CollectionItem" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:CrossReference" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:HeaderOrFooter//_sfe:CrossReferenceTitle" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:CrossReferenceTitle" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:ExternalLink" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:Gentext" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:HeaderOrFooter" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:Index" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexAlphaGroup" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexEndPage" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>–</xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexEntry/_sfe:IndexEntry/_sfe:IndexEntry/_sfe:IndexEntry" mode="expand-gentext" priority="3">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexEntry/_sfe:IndexEntry/_sfe:IndexEntry" mode="expand-gentext" priority="2">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexEntry/_sfe:IndexEntry" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexEntry" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexGroupHead" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexHeading" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexLocators" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText> </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexPage[position()&gt;1]" mode="expand-gentext" priority="1">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>, </xsl:text>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexPage" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexPostGroup" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexPreGroup" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexRangeGroup" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexSee" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <xsl:text>, </xsl:text>
               <span style="font-style: italic; ">
                  <xsl:text>See </xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexSeeAlso" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:attribute name="_gte:Gentext-Expanded">y</xsl:attribute>
         <xsl:apply-templates select="@*" mode="expand-gentext"/>
         <xsl:if test="not(@_gte:id)">
            <xsl:attribute name="_gte:id">
               <xsl:value-of select="'_g_'"/>
               <xsl:value-of select="generate-id(.)"/>
            </xsl:attribute>
         </xsl:if>
         <!--Unconditional AddBefore-->
         <xsl:if test="not(@_gte:Gentext-Expanded)">
            <_sfe:BeforeOrAfterText>
               <span style="font-style: italic; ">
                  <xsl:text>See also </xsl:text>
               </span>
            </_sfe:BeforeOrAfterText>
         </xsl:if>
         <xsl:apply-templates select="* | text() | processing-instruction()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:IndexSubGroupHead" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:InternalLink" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:RepeatingTitle" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TableOfContents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocEntry1_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocEntry2_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocEntry3_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocEntry4_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocEntry5_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocEntry6_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocLabel_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocPage_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocTable_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

<xsl:template match="_sfe:TocTitle_Table_of_Contents" mode="expand-gentext" priority="0">
      <xsl:copy>
         <xsl:apply-templates select="@*|node()" mode="expand-gentext"/>
      </xsl:copy>
   </xsl:template>

</xsl:stylesheet>