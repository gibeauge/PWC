<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<?Pub Inc?>
<?APT StylesheetID Title="JMTOS Migrate Components" Description="" CompositionTypes="htmlfile,print,pdf,htmlhelp,web,rtf,dmp" StylerVersion="6.00"?><Styler
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:noNamespaceSchemaLocation="http://www.arbortext.com/namespace/doctypes/styler"
xmlns:atidlm="http://www.arbortext.com/namespace/atidlm"
xmlns:ch="http://www.arbortext.com/namespace/chunker"
xmlns:_gte="http://www.arbortext.com/namespace/Styler/GeneratedTextElements"
xmlns:_sfe="http://www.arbortext.com/namespace/Styler/StylerFormattingElements"
xmlns:_ufe="http://www.arbortext.com/namespace/Styler/UserFormattingElements"
xmlns:_dtd="http://www.arbortext.com/namespace/Styler/UserElements"
xmlns:saxon="http://saxon.sf.net/"
xmlns:_="http://www.pwc.ca/namespace/doctypes/jmtosmigrate"
xmlns:_1="http://www.pwc.ca/namespace/doctypes/migrate"
xmlns:_5="http://www.pwc.ca/namespace/doctypes/ipc"
xmlns:_4="http://www.pwc.ca/namespace/doctypes/emipc"
xmlns:_acl="java:com.arbortext.epic.Acl"
xmlns:_js="java:com.arbortext.epic.internal.js.JavaScript">
<StyleSheetInfo minorVersion="0" printPdfEngine="FOSI" stylerVersion="6"><?Pub Dtl?>
<ElementSet/>
<ChunkConfig/>
<HtmlOutputConfig cssStyleLocation="inHtmlHead"
cssStyling="allProperties" listItemsAsTables="yes" output="htmlfile"
outputXhtml="no" titlesAsTables="yes"/>
<HtmlOutputConfig cssStyleLocation="externalCssFile"
cssStyling="allProperties" listItemsAsTables="yes" output="web"
outputXhtml="no" titlesAsTables="no"/>
<HtmlOutputConfig cssStyleLocation="externalCssFile"
cssStyling="allProperties" listItemsAsTables="yes" output="htmlhelp"
outputXhtml="no" titlesAsTables="no"/>
<HtmlOutputConfig cssStyleLocation="externalCssFile"
cssStyling="allProperties" listItemsAsTables="yes" output="dmp"
outputXhtml="no" titlesAsTables="no"/>
<Language defaultLanguage="en" langAttribute="xml:lang"
langDetermination="attribute">
<GentextLanguage gentextLanguageName="en"/>
<LanguageMap sourceLanguage="en" targetLanguage="en-US"/>
<LanguageMap sourceLanguage="de" targetLanguage="de-1996"/></Language>
</StyleSheetInfo>
<PropertySets><?Pub Dtl?></PropertySets>
<Elements><?Pub Dtl?>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_Table_of_Contents" style="link">
<LinkDetails idrefAttrname="tocentry_id" primary="no"/>
<Context priority="0" selector="_sfe:TocEntry1_Table_of_Contents">
<BaseProperties>
<Indent firstLineIndent="*-4.00em" lastLineRightIndent="0pt"
leftIndent="@4em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_Table_of_Contents" style="link">
<LinkDetails idrefAttrname="tocentry_id" primary="no"/>
<Context priority="0" selector="_sfe:TocEntry2_Table_of_Contents">
<BaseProperties>
<Indent firstLineIndent="*-4.00em" lastLineRightIndent="0pt"
leftIndent="@6em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_Table_of_Contents" style="link">
<LinkDetails idrefAttrname="tocentry_id" primary="no"/>
<Context priority="0" selector="_sfe:TocEntry3_Table_of_Contents">
<BaseProperties>
<Indent firstLineIndent="*-4.00em" lastLineRightIndent="0pt"
leftIndent="@8em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_Table_of_Contents" style="link">
<LinkDetails idrefAttrname="tocentry_id" primary="no"/>
<Context priority="0" selector="_sfe:TocEntry4_Table_of_Contents">
<BaseProperties>
<Indent firstLineIndent="*-4.00em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_Table_of_Contents" style="link">
<LinkDetails idrefAttrname="tocentry_id" primary="no"/>
<Context priority="0" selector="_sfe:TocEntry5_Table_of_Contents">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps sixth level table of contents entries."
name="_sfe:TocEntry6_Table_of_Contents" style="link">
<LinkDetails idrefAttrname="tocentry_id" primary="no"/>
<Context priority="0" selector="_sfe:TocEntry6_Table_of_Contents">
<BaseProperties>
<Indent firstLineIndent="*-14em" lastLineRightIndent="0pt"
leftIndent="@14em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="10em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_Table_of_Contents" style="inline">
<Context priority="0" selector="_sfe:TocLabel_Table_of_Contents">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_Table_of_Contents" style="inline">
<Context priority="0" selector="_sfe:TocPage_Table_of_Contents">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocTable_of_Contents" style="block">
<Context priority="0" selector="_sfe:TocTable_of_Contents">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_Table_of_Contents" style="inline">
<Context priority="0" selector="_sfe:TocTitle_Table_of_Contents">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="ais-item" style="nostyle">
<Context priority="0" selector="ais-item">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="ais-list" style="hidden">
<Context priority="0" selector="ais-list">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="aisnbr" style="nostyle">
<Context priority="0" selector="aisnbr">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="aistitle" style="nostyle">
<Context priority="0" selector="aistitle">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="con" style="inline">
<Context priority="0" selector="con">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A72c79805-1b5c-4b4e-b134-146a5dfe8fab"><_gte:Target lang="en"
><_gte:ElementContent occur="1" scope="con" include="contentOnly"
elem="conname"/> (<_gte:ElementContent occur="1" scope="con"
include="contentOnly" elem="connbr"/>)</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<ContentTest testContent="refint" testDepth="atAnyLevel"/>
<ContentTest testContent="connbr" testDepth="atAnyLevel"
testType="notInclude"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A59a58925-1e58-4256-bf61-ea232731dbf6"><_gte:Target lang="en"
><_gte:ElementContent occur="1" scope="con" include="contentOnly"
elem="conname"/> (<_gte:ElementContent occur="1" scope="con"
include="contentOnly" elem="refint"/>)</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="conindex" style="nostyle">
<Context priority="0" selector="conindex">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="conname" style="inline">
<Context priority="0" selector="conname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="connbr" style="inline">
<Context priority="0" selector="connbr">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="csn" style="inline">
<Context priority="0" selector="csn">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="dtlname" style="inline">
<Context priority="0" selector="dtlname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="dtlnbr" style="inline">
<Context priority="0" selector="dtlnbr">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="effect" style="block">
<Context priority="20" selector="pgblk/effect">
<BaseProperties>
<Font weight="bold"/>
<SpaceBefore maximum="4pt" minimum="4pt" optimum="4pt"/>
<SpaceAfter maximum="4pt" minimum="4pt" optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6803d0f6-1c9d-49a8-a3dc-acfb5ae0790a"><_gte:Target lang="en"
>EFF: <_gte:AttributeContent occur="1" scope="effect" attr="effrg"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="effect">
<BaseProperties>
<Font weight="bold"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A243cbb89-528a-4467-abae-b4a6925d7def"><_gte:Target lang="en"
><_gte:AttributeContent occur="1" scope="effect" attr="effrg"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="equ" style="block">
<Context priority="6" selector="equ[child::table]">
<BaseProperties>
<SpaceAfter optimum="8pt" precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="equ">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="ftnote" style="nostyle">
<Context priority="0" selector="ftnote">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="gdesc" style="block">
<Context priority="0" selector="gdesc">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="graphic" style="formalBlock">
<Context priority="6" selector="graphic[descendant::sheet]">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: graphic[descendant::sheet]-->&lt;xsl:template
name="__style-for_graphic.2grhiic261">       &lt;xsl:text> .x-graphic-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
8pt; }&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Template for Context: graphic[descendant::sheet]-->&lt;xsl:template
match="graphic[descendant::sheet]" priority="1">       &lt;div
style="display:none">&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-graphic-1-0&lt;/xsl:text>    
     &lt;/xsl:attribute>          &lt;xsl:if test="@xml:lang">         
   &lt;xsl:attribute name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">
&lt;xsl:with-param name="only-if-id-attr" select="'no'">&lt;/xsl:with-param>
&lt;xsl:with-param name="generated-id-prefix" select="'styler-id'">&lt;/xsl:with-param>
&lt;/xsl:call-template>          &lt;xsl:attribute name="id">&lt;xsl:text>styler-id&lt;/xsl:text
>&lt;xsl:apply-templates mode="set-id" select=".">&lt;/xsl:apply-templates
>&lt;/xsl:attribute>&lt;!--Process this element's content-->&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>       &lt;/div>&lt;a>&lt;xsl:attribute name="href">&lt;xsl:text
>#styler-id&lt;/xsl:text>&lt;xsl:apply-templates mode="set-id" select=".">
&lt;/xsl:apply-templates>&lt;/xsl:attribute>&lt;xsl:attribute name="onClick"
>                   &lt;xsl:text>displayGraphics('&lt;/xsl:text>&lt;xsl:text
>styler-id&lt;/xsl:text>&lt;xsl:apply-templates mode="set-id" select=".">
&lt;/xsl:apply-templates>&lt;xsl:text>');&lt;/xsl:text>&lt;/xsl:attribute>&lt;/a
>    &lt;/xsl:template>&lt;!--Gentext template for Context: graphic[descendant::sheet]-->&lt;xsl:template
match="graphic[descendant::sheet]" mode="expand-gentext" priority="1"
>       &lt;xsl:copy>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--Initial pass template for Context: graphic[descendant::sheet]-->&lt;xsl:template
match="graphic[descendant::sheet]" mode="initial-pass-mode" priority="1"
>       &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: graphic[descendant::sheet]-->&lt;xsl:template
match="graphic[descendant::sheet]" mode="set-countas" priority="1"
>       &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: graphic[descendant::sheet]-->&lt;xsl:template
match="graphic[descendant::sheet]" mode="set-ch-chunk" priority="1"
>       &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"
>             &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="0" selector="graphic">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="grphcref" style="inline">
<Context priority="0" selector="grphcref">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: grphcref-->&lt;xsl:template
name="__style-for_grphcref.1">       &lt;xsl:text> .x-grphcref-1-0 {margin-left:
0pt; margin-right: 0pt; }&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Template for Context: grphcref-->&lt;xsl:template
match="grphcref" priority="0">       &lt;span>&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-grphcref-1-0&lt;/xsl:text>   
      &lt;/xsl:attribute>          &lt;xsl:if test="@xml:lang">        
    &lt;xsl:attribute name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;!--Process this element's content-->&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>&lt;a>&lt;!--&lt;xsl:attribute name="href">              
          &lt;xsl:text>#styler-id&lt;/xsl:text> 
                       &lt;xsl:apply-templates
mode="set-id" select=".">&lt;/xsl:apply-templates
>                   &lt;/xsl:attribute>-->&lt;xsl:attribute name="href"
>&lt;xsl:text>#none&lt;/xsl:text>&lt;/xsl:attribute>&lt;xsl:attribute name="onClick"
>&lt;xsl:text>displayGraphics('&lt;/xsl:text>&lt;xsl:text>styler-id&lt;/xsl:text
>&lt;xsl:apply-templates mode="set-id" select="id(@refid)">
&lt;/xsl:apply-templates>&lt;xsl:text>');&lt;/xsl:text>&lt;/xsl:attribute>&lt;xsl:text
> &lt;/xsl:text>&lt;xsl:apply-templates mode="styler_numbering"
select="id(@refid)/title">&lt;/xsl:apply-templates>&lt;/a>&lt;xsl:if
test="(@sheetnbr) and (not(@sheetnbr) or (@sheetnbr and string(@sheetnbr)!=''))"
>&lt;xsl:text> Sheet &lt;/xsl:text>&lt;xsl:value-of select="@sheetnbr"/>&lt;/xsl:if
>&lt;xsl:value-of select="@post-auto-text"/>       &lt;/span>    &lt;/xsl:template
>&lt;!--Gentext template for Context: grphcref-->&lt;xsl:template
match="grphcref" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: grphcref-->&lt;xsl:template
match="grphcref" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: grphcref-->&lt;xsl:template
match="grphcref" mode="set-countas" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: grphcref-->&lt;xsl:template
match="grphcref" mode="set-ch-chunk" priority="0">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="hotlink" style="nostyle">
<Context priority="0" selector="hotlink">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="howtouse" style="formalBlock">
<Context priority="0" selector="howtouse">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="ics" style="definitionListItem">
<Context priority="0" selector="ics">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="increv" style="nostyle">
<Context priority="0" selector="increv">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="issdate" style="nostyle">
<Context priority="0" selector="issdate">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="l1item" style="listItem">
<Context priority="36"
selector="pbfmatr//list1/l1item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.6em" leftIndent="@1.6em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A34bb5159-f390-4cb8-9590-98adfcfba6e1"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="A."/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT) '.'"
numberAlignment="left" numberStyle="A" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Aae45145f-f7ca-4d12-8584-9aed65d0104a"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l1item.5pbatem441">       &lt;xsl:text> .x-l1item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']" priority="4"
>       &lt;table border="0" cellpadding="0" cellspacing="0">       
  &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l1item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']"
mode="expand-gentext" priority="4">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']"
mode="initial-pass-mode" priority="4">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']"
mode="styler_numbering" priority="4">       &lt;xsl:number
count="pbfmatr//list1/l1item" format="A"/>       &lt;xsl:text>.&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']" mode="set-countas"
priority="4">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="4">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list1/l1item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="4">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="30" selector="pbfmatr//list1/l1item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.6em" leftIndent="@1.6em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A64513ca7-fc54-48e3-b940-fbb482c35542"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="A."/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT) '.'"
numberAlignment="left" numberStyle="A" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae74dcb2d-4d9a-442a-8d50-77354e00605d"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list1/l1item-->&lt;xsl:template
name="__style-for_l1item.5pbatem212">       &lt;xsl:text> .x-l1item-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list1/l1item-->&lt;xsl:template
match="pbfmatr//list1/l1item" priority="3">       &lt;table border="0"
cellpadding="0" cellspacing="0">          &lt;xsl:attribute name="style"
>             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l1item-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution' and name() != 'note']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list1/l1item-->&lt;xsl:template
match="pbfmatr//list1/l1item" mode="expand-gentext" priority="3"> 
     &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list1/l1item-->&lt;xsl:template
match="pbfmatr//list1/l1item" mode="initial-pass-mode" priority="3"
>       &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list1/l1item-->&lt;xsl:template
match="pbfmatr//list1/l1item" mode="styler_numbering" priority="3"
>       &lt;xsl:number count="pbfmatr//list1/l1item" format="A"/>   
   &lt;xsl:text>.&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list1/l1item-->&lt;xsl:template
match="pbfmatr//list1/l1item" mode="set-countas" priority="3">   
   &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list1/l1item" mode="styler-LabelAndNumberMarker"
priority="3">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list1/l1item-->&lt;xsl:template
match="pbfmatr//list1/l1item" mode="set-ch-chunk" priority="3">  
    &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"> 
           &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="26" selector="list1/l1item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.6em" leftIndent="@1.6em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abd7cd3ee-99cc-4143-a9a6-a57ab4383745"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Abe7fd737-1946-4c8a-a4d1-882c36da7dde"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l1item.3li1lem351">       &lt;xsl:text> .x-l1item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']" priority="2">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l1item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']" mode="expand-gentext"
priority="2">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']" mode="initial-pass-mode"
priority="2">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']" mode="styler_numbering"
priority="2">       &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:number
count="list1/l1item" format="1"/>       &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Set count-as pass template for Context: list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']" mode="set-countas"
priority="2">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="2">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list1/l1item[child::*[1] != 'note']-->&lt;xsl:template
match="list1/l1item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="2">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="20.01" selector="list1/l1item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.6em" leftIndent="@1.6em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab1aba890-8e7f-46e0-99d3-23f247c569f6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Af86094a7-d175-49a4-beef-96bdb98d49ab"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list1/l1item-->&lt;xsl:template
name="__style-for_l1item.2li1lem121">       &lt;xsl:text> .x-l1item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list1/l1item-->&lt;xsl:template
match="list1/l1item" priority="1">&lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l1item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: list1/l1item-->&lt;xsl:template
match="list1/l1item" mode="expand-gentext" priority="1">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list1/l1item-->&lt;xsl:template
match="list1/l1item" mode="initial-pass-mode" priority="1">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list1/l1item-->&lt;xsl:template
match="list1/l1item" mode="styler_numbering" priority="1">       &lt;xsl:text
>(&lt;/xsl:text>       &lt;xsl:number count="list1/l1item" format="1"/> 
     &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: list1/l1item-->&lt;xsl:template
match="list1/l1item" mode="set-countas" priority="1">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list1/l1item" mode="styler-LabelAndNumberMarker" priority="1"
>       &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"
>             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list1/l1item-->&lt;xsl:template
match="list1/l1item" mode="set-ch-chunk" priority="1">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="0" selector="l1item">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="l2item" style="listItem">
<Context priority="36"
selector="pbfmatr//list2/l2item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A98de4bb3-b299-43bd-ad7b-18f13e430ca8"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace"
format="'(' (CURRENT) ')'" numberAlignment="right" numberStyle="1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A49f72d28-7d92-4f6a-869d-85b2424c3b37"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l2item.5pbatem441">       &lt;xsl:text> .x-l2item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']" priority="4"
>       &lt;table border="0" cellpadding="0" cellspacing="0">       
  &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l2item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']"
mode="expand-gentext" priority="4">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']"
mode="initial-pass-mode" priority="4">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']"
mode="styler_numbering" priority="4">       &lt;xsl:text>(&lt;/xsl:text
>       &lt;xsl:number count="pbfmatr//list2/l2item" format="1"/>   
   &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']" mode="set-countas"
priority="4">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="4">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list2/l2item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="4">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="30" selector="pbfmatr//list2/l2item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1c29c7d2-0102-434e-aedc-05c215f24cba"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace"
format="'(' (CURRENT) ')'" numberAlignment="right" numberStyle="1"
tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac9eddc74-6dc8-4089-b9b6-05b597516d2f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list2/l2item-->&lt;xsl:template
name="__style-for_l2item.5pbatem212">       &lt;xsl:text> .x-l2item-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list2/l2item-->&lt;xsl:template
match="pbfmatr//list2/l2item" priority="3">       &lt;table border="0"
cellpadding="0" cellspacing="0">          &lt;xsl:attribute name="style"
>             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l2item-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution' and name() != 'note']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list2/l2item-->&lt;xsl:template
match="pbfmatr//list2/l2item" mode="expand-gentext" priority="3"> 
     &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list2/l2item-->&lt;xsl:template
match="pbfmatr//list2/l2item" mode="initial-pass-mode" priority="3"
>       &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list2/l2item-->&lt;xsl:template
match="pbfmatr//list2/l2item" mode="styler_numbering" priority="3"
>       &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:number
count="pbfmatr//list2/l2item" format="1"/>       &lt;xsl:text>)&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list2/l2item-->&lt;xsl:template
match="pbfmatr//list2/l2item" mode="set-countas" priority="3">   
   &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list2/l2item" mode="styler-LabelAndNumberMarker"
priority="3">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list2/l2item-->&lt;xsl:template
match="pbfmatr//list2/l2item" mode="set-ch-chunk" priority="3">  
    &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"> 
           &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="26" selector="list2/l2item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad3c59664-fd56-43eb-81c8-1f3d5562c7ef"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace"
format="'(' (CURRENT) ')'" numberAlignment="right" numberStyle="a"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Abe73fc9b-35c3-4fad-8d56-ff57213e71a3"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l2item.3li2lem351">       &lt;xsl:text> .x-l2item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']" priority="2">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l2item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']" mode="expand-gentext"
priority="2">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']" mode="initial-pass-mode"
priority="2">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']" mode="styler_numbering"
priority="2">       &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:number
count="list2/l2item" format="a"/>       &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Set count-as pass template for Context: list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']" mode="set-countas"
priority="2">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="2">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list2/l2item[child::*[1] != 'note']-->&lt;xsl:template
match="list2/l2item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="2">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="20.01" selector="list2/l2item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A697dcf95-9d2e-4bce-9f18-f3436c9e9786"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace"
format="'(' (CURRENT) ')'" numberAlignment="right" numberStyle="a"
tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A09dfd036-ecd8-4376-a95e-c9c2a2c6adad"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list2/l2item-->&lt;xsl:template
name="__style-for_l2item.2li2lem121">       &lt;xsl:text> .x-l2item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list2/l2item-->&lt;xsl:template
match="list2/l2item" priority="1">&lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l2item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: list2/l2item-->&lt;xsl:template
match="list2/l2item" mode="expand-gentext" priority="1">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list2/l2item-->&lt;xsl:template
match="list2/l2item" mode="initial-pass-mode" priority="1">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list2/l2item-->&lt;xsl:template
match="list2/l2item" mode="styler_numbering" priority="1">       &lt;xsl:text
>(&lt;/xsl:text>       &lt;xsl:number count="list2/l2item" format="a"/> 
     &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: list2/l2item-->&lt;xsl:template
match="list2/l2item" mode="set-countas" priority="1">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list2/l2item" mode="styler-LabelAndNumberMarker" priority="1"
>       &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"
>             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list2/l2item-->&lt;xsl:template
match="list2/l2item" mode="set-ch-chunk" priority="1">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="0" selector="l2item">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="l3item" style="listItem">
<Context priority="36"
selector="pbfmatr//list3/l3item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa359d823-b800-475c-98ba-6c0f3e30e282"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace"
format="'(' (CURRENT) ')'" numberAlignment="right" numberStyle="a"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Aed4682d6-14a1-4187-8e01-1994f3773113"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l3item.5pbatem441">       &lt;xsl:text> .x-l3item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']" priority="4"
>       &lt;table border="0" cellpadding="0" cellspacing="0">       
  &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l3item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']"
mode="expand-gentext" priority="4">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']"
mode="initial-pass-mode" priority="4">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']"
mode="styler_numbering" priority="4">       &lt;xsl:text>(&lt;/xsl:text
>       &lt;xsl:number count="pbfmatr//list3/l3item" format="a"/>   
   &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']" mode="set-countas"
priority="4">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="4">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list3/l3item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="4">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="30" selector="pbfmatr//list3/l3item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4f26aa11-60d7-437c-ae3c-e1cf68d270d6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace"
format="'(' (CURRENT) ')'" numberAlignment="right" numberStyle="a"
tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A4b16a096-5741-410a-8bda-e33eb534a9b7"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list3/l3item-->&lt;xsl:template
name="__style-for_l3item.5pbatem212">       &lt;xsl:text> .x-l3item-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list3/l3item-->&lt;xsl:template
match="pbfmatr//list3/l3item" priority="3">       &lt;table border="0"
cellpadding="0" cellspacing="0">          &lt;xsl:attribute name="style"
>             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l3item-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution' and name() != 'note']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list3/l3item-->&lt;xsl:template
match="pbfmatr//list3/l3item" mode="expand-gentext" priority="3"> 
     &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list3/l3item-->&lt;xsl:template
match="pbfmatr//list3/l3item" mode="initial-pass-mode" priority="3"
>       &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list3/l3item-->&lt;xsl:template
match="pbfmatr//list3/l3item" mode="styler_numbering" priority="3"
>       &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:number
count="pbfmatr//list3/l3item" format="a"/>       &lt;xsl:text>)&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list3/l3item-->&lt;xsl:template
match="pbfmatr//list3/l3item" mode="set-countas" priority="3">   
   &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list3/l3item" mode="styler-LabelAndNumberMarker"
priority="3">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list3/l3item-->&lt;xsl:template
match="pbfmatr//list3/l3item" mode="set-ch-chunk" priority="3">  
    &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"> 
           &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="26" selector="list3/l3item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afea0cbf8-184b-46cb-9d61-c0b67722710c"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT)"
numberAlignment="right" numberStyle="1" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Af7c20978-3ad6-4604-933b-09c47863e3f0"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l3item.3li3lem351">       &lt;xsl:text> .x-l3item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']" priority="2">       &lt;table
border="0" cellpadding="0" cellspacing="0">          &lt;xsl:attribute
name="style">             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l3item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']" mode="expand-gentext"
priority="2">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']" mode="initial-pass-mode"
priority="2">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']" mode="styler_numbering"
priority="2">       &lt;xsl:number count="list3/l3item" format="1"/> 
  &lt;/xsl:template>&lt;!--Set count-as pass template for Context: list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']" mode="set-countas"
priority="2">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="2">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list3/l3item[child::*[1] != 'note']-->&lt;xsl:template
match="list3/l3item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="2">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="20.01" selector="list3/l3item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad8ae6222-51cf-4e73-8dfa-2755c7363401"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT)"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A05010031-32b2-4853-83e1-6e3ea9c51016"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list3/l3item-->&lt;xsl:template
name="__style-for_l3item.3li3lem122">       &lt;xsl:text> .x-l3item-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list3/l3item-->&lt;xsl:template
match="list3/l3item" priority="1">       &lt;table border="0"
cellpadding="0" cellspacing="0">          &lt;xsl:attribute name="style"
>             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l3item-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution' and name() != 'note']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: list3/l3item-->&lt;xsl:template
match="list3/l3item" mode="expand-gentext" priority="1">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list3/l3item-->&lt;xsl:template
match="list3/l3item" mode="initial-pass-mode" priority="1">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list3/l3item-->&lt;xsl:template
match="list3/l3item" mode="styler_numbering" priority="1">       &lt;xsl:number
count="list3/l3item" format="1"/>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: list3/l3item-->&lt;xsl:template
match="list3/l3item" mode="set-countas" priority="1">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list3/l3item" mode="styler-LabelAndNumberMarker" priority="1"
>       &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"
>             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list3/l3item-->&lt;xsl:template
match="list3/l3item" mode="set-ch-chunk" priority="1">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="0" selector="l3item">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="l4item" style="listItem">
<Context priority="36"
selector="pbfmatr//list4/l4item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9cb29556-9341-48ec-813a-74f6634fd504"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT)"
numberAlignment="right" numberStyle="1" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A07b53421-20d3-4da0-bd91-85bb940d4ac2"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l4item.5pbatem441">       &lt;xsl:text> .x-l4item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']" priority="4"
>       &lt;table border="0" cellpadding="0" cellspacing="0">       
  &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l4item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']"
mode="expand-gentext" priority="4">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']"
mode="initial-pass-mode" priority="4">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']"
mode="styler_numbering" priority="4">       &lt;xsl:number
count="pbfmatr//list4/l4item" format="1"/>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']" mode="set-countas"
priority="4">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="4">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="pbfmatr//list4/l4item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="4">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="30" selector="pbfmatr//list4/l4item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3bb119ea-2579-4e31-81d0-7e941a722d0e"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT)"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A8e43094b-08d8-4f4d-89a4-5b1fc1d14490"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: pbfmatr//list4/l4item-->&lt;xsl:template
name="__style-for_l4item.5pbatem212">       &lt;xsl:text> .x-l4item-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: pbfmatr//list4/l4item-->&lt;xsl:template
match="pbfmatr//list4/l4item" priority="3">       &lt;table border="0"
cellpadding="0" cellspacing="0">          &lt;xsl:attribute name="style"
>             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l4item-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution' and name() != 'note']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: pbfmatr//list4/l4item-->&lt;xsl:template
match="pbfmatr//list4/l4item" mode="expand-gentext" priority="3"> 
     &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pbfmatr//list4/l4item-->&lt;xsl:template
match="pbfmatr//list4/l4item" mode="initial-pass-mode" priority="3"
>       &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=pbfmatr//list4/l4item-->&lt;xsl:template
match="pbfmatr//list4/l4item" mode="styler_numbering" priority="3"
>       &lt;xsl:number count="pbfmatr//list4/l4item" format="1"/>    &lt;/xsl:template
>&lt;!--Set count-as pass template for Context: pbfmatr//list4/l4item-->&lt;xsl:template
match="pbfmatr//list4/l4item" mode="set-countas" priority="3">   
   &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="pbfmatr//list4/l4item" mode="styler-LabelAndNumberMarker"
priority="3">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pbfmatr//list4/l4item-->&lt;xsl:template
match="pbfmatr//list4/l4item" mode="set-ch-chunk" priority="3">  
    &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"> 
           &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="26" selector="list4/l4item[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A380f8004-0027-4e82-838b-6ef83d87ef17"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT)"
numberAlignment="right" numberStyle="a" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Aabe5effe-765e-4dc5-b0f2-2fccf0d2e4c4"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_l4item.3li4lem351">       &lt;xsl:text> .x-l4item-1-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']" priority="2">       &lt;table
border="0" cellpadding="0" cellspacing="0">          &lt;xsl:attribute
name="style">             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l4item-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']" mode="expand-gentext"
priority="2">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']" mode="initial-pass-mode"
priority="2">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']" mode="styler_numbering"
priority="2">       &lt;xsl:number count="list4/l4item" format="a"/> 
  &lt;/xsl:template>&lt;!--Set count-as pass template for Context: list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']" mode="set-countas"
priority="2">       &lt;xsl:copy>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="2">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list4/l4item[child::*[1] != 'note']-->&lt;xsl:template
match="list4/l4item[child::*[1] != 'note']" mode="set-ch-chunk"
priority="2">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="20.03" selector="list4/l4item">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7e0c4ff5-4d3b-45cb-9410-135fd07432cd"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT)"
numberAlignment="right" numberStyle="a" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A1b09ab26-b88a-48b0-acac-e1827453f4f9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: list4/l4item-->&lt;xsl:template
name="__style-for_l4item.3li4lem122">       &lt;xsl:text> .x-l4item-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: list4/l4item-->&lt;xsl:template
match="list4/l4item" priority="1">       &lt;table border="0"
cellpadding="0" cellspacing="0">          &lt;xsl:attribute name="style"
>             &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable
>             &lt;xsl:if test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if
>          &lt;/xsl:attribute>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-l4item-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">1.5em&lt;/xsl:variable>  
       &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">1&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">right&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning' and name() != 'caution' and name() != 'note']">
&lt;/xsl:apply-templates>                &lt;/td>             &lt;/tr>    
     &lt;/tbody>       &lt;/table>    &lt;/xsl:template>&lt;!--Gentext template for Context: list4/l4item-->&lt;xsl:template
match="list4/l4item" mode="expand-gentext" priority="1">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: list4/l4item-->&lt;xsl:template
match="list4/l4item" mode="initial-pass-mode" priority="1">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=list4/l4item-->&lt;xsl:template
match="list4/l4item" mode="styler_numbering" priority="1">       &lt;xsl:number
count="list4/l4item" format="a"/>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: list4/l4item-->&lt;xsl:template
match="list4/l4item" mode="set-countas" priority="1">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="list4/l4item" mode="styler-LabelAndNumberMarker" priority="1"
>       &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"
>             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: list4/l4item-->&lt;xsl:template
match="list4/l4item" mode="set-ch-chunk" priority="1">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="0" selector="l4item">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="l5item" style="nostyle">
<Context priority="0" selector="l5item">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="l6item" style="nostyle">
<Context priority="0" selector="l6item">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="l7item" style="nostyle">
<Context priority="0" selector="l7item">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="list1" style="numberedList">
<Context priority="0" selector="list1">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="list2" style="numberedList">
<Context priority="0" selector="list2">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="list3" style="numberedList">
<Context priority="0" selector="list3">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="list4" style="numberedList">
<Context priority="0" selector="list4">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="list5" style="nostyle">
<Context priority="0" selector="list5">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="list6" style="nostyle">
<Context priority="0" selector="list6">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="list7" style="nostyle">
<Context priority="0" selector="list7">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="lmm-statement" style="block">
<Context priority="0" selector="lmm-statement">
<BaseProperties>
<Font size="10pt"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<SpaceAfter optimum="10pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="mfmatr" style="block">
<Context priority="0" selector="mfmatr">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="ncon" style="inline">
<Context priority="0" selector="ncon">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="numlist" style="numberedList">
<Context priority="0" selector="numlist">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="numlitem" style="listItem">
<Context priority="20.025" selector="numlist/numlitem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.1em" leftIndent="@2.1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aea145365-88ed-47a7-a448-df81f00f57dd"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1."/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="emspace" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A43188630-8d04-4633-8999-c4b109fe7f57"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="numlitem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pageblock-title" style="title">
<Context priority="30" selector="frontmatter//module/pageblock-title">
<BaseProperties>
<Font weight="bold"/>
<Highlight allcaps="yes" textUnderlineStyle="underline"/>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5aae8eae-8ddf-4e4f-a659-6b562ac4b0f8"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ab1b9e49a-88c1-421b-90c6-7433baf63769"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="pageblock-title">
<BaseProperties>
<Font size="14pt" weight="bold"/>
<Breaks blockOrInline="block"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="part" style="inline">
<Context priority="0" selector="part">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pbfmatr" style="formalBlock">
<Context priority="0" selector="pbfmatr">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pgblk" style="formalBlock">
<Context priority="0" selector="pgblk">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem" style="formalBlock">
<Context priority="0" selector="prcitem">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem1" style="listItem">
<Context priority="20.015" selector="prclist1/prcitem1">
<BaseProperties propertySetReferences="List_item_space">
<Indent leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="prcitem1">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem2" style="listItem">
<Context priority="20.015" selector="prclist2/prcitem2">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="prcitem2">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem3" style="listItem">
<Context priority="20.015" selector="prclist3/prcitem3">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="prcitem3">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem4" style="listItem">
<Context priority="20.045" selector="prclist4/prcitem4">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="20.005" selector="numlist/prcitem4">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af315109c-7501-4fa7-aab8-447db7ad7545"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Ab2e164aa-f9c7-43c1-9c93-92a208a28fe9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="prcitem4">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem5" style="nostyle">
<Context priority="0" selector="prcitem5">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem6" style="nostyle">
<Context priority="0" selector="prcitem6">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="prcitem7" style="nostyle">
<Context priority="0" selector="prcitem7">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="prclist1" style="numberedList">
<Context priority="0" selector="prclist1">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prclist2" style="numberedList">
<Context priority="0" selector="prclist2">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prclist3" style="numberedList">
<Context priority="0" selector="prclist3">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prclist4" style="numberedList">
<Context priority="0" selector="prclist4">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="prclist5" style="nostyle">
<Context priority="0" selector="prclist5">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="prclist6" style="nostyle">
<Context priority="0" selector="prclist6">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="prclist7" style="nostyle">
<Context priority="0" selector="prclist7">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="print-module" style="nostyle">
<Context priority="0" selector="print-module">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="print-unit" style="nostyle">
<Context priority="0" selector="print-unit">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pwc-awl" style="nostyle">
<Context priority="0" selector="pwc-awl">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pwc-cgp-stmnt" style="block">
<Context priority="0" selector="pwc-cgp-stmnt">
<BaseProperties>
<Font size="10pt"/>
<SpaceBefore optimum="10pt"/>
<SpaceAfter optimum="10pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwccallout" style="inline">
<Context priority="0" selector="pwccallout">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pwcchapsect" style="block">
<Context priority="0" selector="pwcchapsect">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcchapsect-item" style="definitionListItem">
<Context priority="0" selector="pwcchapsect-item">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcchapsect-list" style="definitionList">
<DefinitionListDetails definitionListDefinitionElement="title"
definitionListItemElement="pwcchapsect-item"
definitionListTermElement="pwcchapsect" gutterWidth="1pc"
termWidth="9pc"/>
<Context priority="0" selector="pwcchapsect-list">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac6d7b1d6-0417-46c0-9a10-bd9ed1294128"><_gte:Target lang="en"
><_ufe:chapsect-title></_ufe:chapsect-title></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="pwccss" style="block">
<Context priority="0" selector="pwccss">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcem-apu-title" style="nostyle">
<Context priority="0" selector="pwcem-apu-title">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pwcem-title" style="block">
<Context priority="0" selector="pwcem-title">
<BaseProperties>
<Font size="24pt" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on" id="A72799d2b-a029-4d2e-8bf3-60dc71213eac"><_gte:Target lang="en">
<_ufe:engine-type><_gte:AttributeModifier setAttrName="enginetype" attrValueXPath="string(./@enginetype)"><_gte:AttributeContent occur="1" scope="pwcem-title" attr="enginetype"/></_gte:AttributeModifier></_ufe:engine-type>
<_ufe:title-block>MODEL(S)</_ufe:title-block>
<_ufe:title-block><_gte:AttributeContent occur="1" scope="pwcem-title" attr="model"/> ENGINES</_ufe:title-block>
<_gte:Font TypeSize="11pt" Weight="medium"><_gte:ElementContent occur="1" scope="pwcem-title" include="contentOnly" elem="statement"/></_gte:Font>
<_ufe:title-block>Manual Part No. <_gte:AttributeContent occur="1" scope="pwcem-title" attr="docnbr"/></_ufe:title-block>
<_ufe:title-block>Issued <_gte:AttributeContent occur="1" scope="pwcem-title" attr="oidate"/></_ufe:title-block></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off" id="Aa791187a-d5a8-4a67-87b4-ad5e1d328d03"><_gte:Target lang="en"><_ufe:proprietary-notice></_ufe:proprietary-notice></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011" sourceType="xslDmp" stylerVersion="6">
&lt;!--Style template for Context: pwcem-title-->
&lt;xsl:template name="__style-for_pwcem-title.1">
  &lt;xsl:text> .x-pwcem-title-1-0 {margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; font-weight:bold; font-size: 24pt; text-align: center; }&lt;/xsl:text>
&lt;/xsl:template>
&lt;!--Template for Context: pwcem-title-->
&lt;xsl:template match="pwcem-title" priority="0">
  &lt;div>
    &lt;!--Emit class values to reflect conditions-->
    &lt;xsl:attribute name="class">&lt;xsl:text> x-pwcem-title-1-0&lt;/xsl:text>&lt;/xsl:attribute>
    &lt;xsl:if test="@xml:lang">      
      &lt;xsl:attribute name="lang">
        &lt;xsl:call-template name="return-lang-applying-language-map">
          &lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
        &lt;/xsl:call-template>
      &lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;xsl:copy-of select="@ch:*"/>
    &lt;xsl:copy-of select="@dmp:*" xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
    &lt;xsl:if test="@xml:lang">
      &lt;xsl:attribute name="lang">
        &lt;xsl:call-template name="return-lang-applying-language-map">
          &lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
        &lt;/xsl:call-template>
      &lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template>
    &lt;!--Process this element's content-->
    &lt;xsl:apply-templates>&lt;/xsl:apply-templates>
  &lt;/div>
&lt;/xsl:template>
&lt;!--Gentext template for Context: pwcem-title-->
&lt;xsl:template match="pwcem-title" mode="expand-gentext" priority="0">
  &lt;xsl:copy>
    &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>
    &lt;xsl:apply-templates mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>
    &lt;xsl:if test="not(@_gte:id)">    
      &lt;xsl:attribute name="_gte:id">
        &lt;xsl:value-of select="'_g_'"/>&lt;xsl:value-of select="generate-id(.)"/>
      &lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;!--Unconditional AddBefore-->
    &lt;xsl:if test="not(@_gte:Gentext-Expanded)">
      &lt;_gte:Must-Expand-Gentext>&lt;/_gte:Must-Expand-Gentext>
      &lt;_sfe:BeforeOrAfterText>
        &lt;_ufe:engine-type>
          &lt;xsl:if test="string(./@enginetype)">
            &lt;xsl:attribute name="enginetype">
              &lt;xsl:value-of select="string(./@enginetype)"/>
            &lt;/xsl:attribute>
          &lt;/xsl:if>
        &lt;/_ufe:engine-type>
        &lt;_ufe:title-block>&lt;xsl:text>MODEL(S)&lt;/xsl:text>&lt;/_ufe:title-block>
        &lt;_ufe:title-block>&lt;xsl:value-of select="@model"/>&lt;xsl:text> ENGINES&lt;/xsl:text>&lt;/_ufe:title-block>
        &lt;!-- Modified by GBE - R-007 -->
        &lt;!--span style="font-size: 11pt; font-weight: normal; ">
          &lt;xsl:if test="(ancestor-or-self::pwcem-title[1]//statement)[1]/*|(ancestor-or-self::pwcem-title[1]//statement)[1]/text()|(ancestor-or-self::pwcem-title[1]//statement)[1]/processing-instruction()">
            &lt;_gte:Gentexted-Content-Wrapper>
              &lt;xsl:apply-templates mode="expand-gentext" select="(ancestor-or-self::pwcem-title[1]//statement)[1]/*|(ancestor-or-self::pwcem-title[1]//statement)[1]/text()|(ancestor-or-self::pwcem-title[1]//statement)[1]/processing-instruction()">
                &lt;xsl:with-param name="skip-expanded-gentext" select="'yes'">&lt;/xsl:with-param>
              &lt;/xsl:apply-templates>
            &lt;/_gte:Gentexted-Content-Wrapper>
          &lt;/xsl:if>
        &lt;/span-->
        &lt;xsl:if test="(ancestor-or-self::pwcem-title[1]//statement)[1]/*|(ancestor-or-self::pwcem-title[1]//statement)[1]/text()|(ancestor-or-self::pwcem-title[1]//statement)[1]/processing-instruction()">
          &lt;xsl:copy-of select="ancestor-or-self::pwcem-title[1]/*[self::revst[following-sibling::statement]]"/>
          &lt;_ufe:statement>&lt;xsl:apply-templates select="ancestor-or-self::pwcem-title[1]/statement/node()" mode="gentext"/>&lt;/_ufe:statement>
          &lt;xsl:copy-of select="ancestor-or-self::pwcem-title[1]/*[self::revend[preceding-sibling::*[1][self::statement]]]"/>
        &lt;/xsl:if>
        &lt;!-- End modified by GBE - R-007 -->
        &lt;_ufe:title-block>&lt;xsl:text>Manual Part No. &lt;/xsl:text>&lt;xsl:value-of select="@docnbr"/>&lt;/_ufe:title-block>
        &lt;_ufe:title-block>&lt;xsl:text>Issued &lt;/xsl:text>
          &lt;xsl:call-template name="FormatDate">
            &lt;xsl:with-param name="DateTime" select="@oidate">&lt;/xsl:with-param>
            &lt;xsl:with-param name="DateFormat">dmy&lt;/xsl:with-param>
          &lt;/xsl:call-template>
        &lt;/_ufe:title-block>
      &lt;/_sfe:BeforeOrAfterText>
    &lt;/xsl:if>
    &lt;xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()">&lt;/xsl:apply-templates>
    &lt;!--Unconditional AddAfter-->
    &lt;xsl:if test="not(@_gte:Gentext-Expanded)">
      &lt;_gte:Must-Expand-Gentext>&lt;/_gte:Must-Expand-Gentext>
      &lt;_sfe:BeforeOrAfterText>&lt;_ufe:proprietary-notice/>&lt;/_sfe:BeforeOrAfterText>
    &lt;/xsl:if>
  &lt;/xsl:copy>
&lt;/xsl:template>
&lt;!-- Added by GBE - R-007 -->
&lt;xsl:template match="revst[following-sibling::statement]" mode="gentext" priority="3"/>
&lt;xsl:template match="revend[preceding-sibling::*[1][self::statement]]" mode="gentext" priority="3"/>
&lt;!-- End added by GBE - R-007 -->
&lt;!--Template for formatting date-->
&lt;xsl:template name="FormatDate">
  &lt;xsl:param name="DateTime">&lt;/xsl:param>
  &lt;xsl:param name="DateFormat">&lt;/xsl:param>
  &lt;xsl:variable name="year">&lt;xsl:value-of select="substring($DateTime,1,4)"/>&lt;/xsl:variable>
  &lt;xsl:variable name="month">&lt;xsl:value-of select="substring($DateTime,5,2)"/>&lt;/xsl:variable>
  &lt;xsl:variable name="day">&lt;xsl:value-of select="substring($DateTime,7,2)"/>&lt;/xsl:variable>
  &lt;xsl:choose>
    &lt;xsl:when test="$DateFormat = 'dmy'">
      &lt;xsl:value-of select="$day"/>
      &lt;xsl:value-of select="' '"/>
      &lt;xsl:choose>
        &lt;xsl:when test="$month = 01">January&lt;/xsl:when>
        &lt;xsl:when test="$month = 02">February&lt;/xsl:when>
        &lt;xsl:when test="$month = 03">March&lt;/xsl:when>
        &lt;xsl:when test="$month = 04">April&lt;/xsl:when>
        &lt;xsl:when test="$month = 05">May&lt;/xsl:when>
        &lt;xsl:when test="$month = 06">June&lt;/xsl:when>
        &lt;xsl:when test="$month = 07">July&lt;/xsl:when>
        &lt;xsl:when test="$month = 08">August&lt;/xsl:when>
        &lt;xsl:when test="$month = 09">September&lt;/xsl:when>
        &lt;xsl:when test="$month = 10">October&lt;/xsl:when>
        &lt;xsl:when test="$month = 11">November&lt;/xsl:when>
        &lt;xsl:when test="$month = 12">December&lt;/xsl:when>
      &lt;/xsl:choose>
      &lt;xsl:value-of select="' '"/>
      &lt;xsl:value-of select="$year"/>
    &lt;/xsl:when>
    &lt;xsl:when test="$DateFormat = 'mdy'">
      &lt;xsl:choose>
        &lt;xsl:when test="$month = 01">January&lt;/xsl:when>
        &lt;xsl:when test="$month = 02">February&lt;/xsl:when>
        &lt;xsl:when test="$month = 03">March&lt;/xsl:when>
        &lt;xsl:when test="$month = 04">April&lt;/xsl:when>
        &lt;xsl:when test="$month = 05">May&lt;/xsl:when>
        &lt;xsl:when test="$month = 06">June&lt;/xsl:when>
        &lt;xsl:when test="$month = 07">July&lt;/xsl:when>
        &lt;xsl:when test="$month = 08">August&lt;/xsl:when>
        &lt;xsl:when test="$month = 09">September&lt;/xsl:when>
        &lt;xsl:when test="$month = 10">October&lt;/xsl:when>
        &lt;xsl:when test="$month = 11">November&lt;/xsl:when>
        &lt;xsl:when test="$month = 12">December&lt;/xsl:when>
      &lt;/xsl:choose>
      &lt;xsl:value-of select="' '"/>
      &lt;xsl:value-of select="$day"/>
      &lt;xsl:value-of select="'/'"/>
      &lt;xsl:value-of select="$year"/>
    &lt;/xsl:when>
  &lt;/xsl:choose>
&lt;/xsl:template>
&lt;!--Initial pass template for Context: pwcem-title-->
&lt;xsl:template match="pwcem-title" mode="initial-pass-mode" priority="0">
  &lt;xsl:copy>
    &lt;xsl:call-template name="maybe-set-gte-id">&lt;/xsl:call-template>
    &lt;xsl:apply-templates mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates>
  &lt;/xsl:copy>
&lt;/xsl:template>
&lt;!--Set count-as pass template for Context: pwcem-title-->
&lt;xsl:template match="pwcem-title" mode="set-countas" priority="0">
  &lt;xsl:copy>
    &lt;xsl:apply-templates mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>
  &lt;/xsl:copy>
&lt;/xsl:template>
&lt;!--Set ch:chunk template for Context: pwcem-title-->
&lt;xsl:template match="pwcem-title" mode="set-ch-chunk" priority="0">
  &lt;xsl:copy>
    &lt;xsl:if test="not(@_gte:did-set-chunk)">
      &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">&lt;/xsl:apply-templates>
  &lt;/xsl:copy>
&lt;/xsl:template>
</EditedSource>
</Context>
</Element>
<Element name="pwcemtask" style="nostyle">
<Context priority="0" selector="pwcemtask">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pwclmm-title" style="block">
<Context priority="0" selector="pwclmm-title">
<BaseProperties>
<Font size="24pt" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on" id="A554d3e57-b5e9-4e02-a7a1-fa606d3f6e3d"><_gte:Target lang="en">
<_ufe:engine-type><_gte:AttributeModifier setAttrName="enginetype" attrValueXPath="string(./@enginetype)"><_gte:AttributeContent occur="1" scope="pwcem-title" attr="enginetype"/></_gte:AttributeModifier></_ufe:engine-type>
<_ufe:title-block>MODEL(S)</_ufe:title-block>
<_ufe:title-block><_gte:AttributeContent occur="1" scope="pwcem-title" attr="model"/> ENGINES</_ufe:title-block>
<_gte:Font TypeSize="11pt" Weight="medium"><_gte:ElementContent occur="1" scope="pwcem-title" include="contentOnly" elem="statement"/></_gte:Font>
<_ufe:title-block>Manual Part No. <_gte:AttributeContent occur="1" scope="pwcem-title" attr="docnbr"/></_ufe:title-block>
<_ufe:title-block>Issued <_gte:AttributeContent occur="1" scope="pwcem-title" attr="oidate"/></_ufe:title-block></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off" id="A18c426f4-e830-4244-8dca-bd8c8d6732cf"><_gte:Target lang="en"><_ufe:proprietary-notice></_ufe:proprietary-notice></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M011" sourceType="xslDmp" stylerVersion="6">
&lt;!--Style template for Context: pwclmm-title-->
&lt;xsl:template name="__style-for_pwclmm-title.1">
  &lt;?Pub Dtl?>&lt;xsl:text> .x-pwclmm-title-1-0 {margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; font-weight: bold; font-size: 24pt; text-align: center; }&lt;/xsl:text>
&lt;/xsl:template>
&lt;!--Template for Context: pwclmm-title-->
&lt;xsl:template match="pwclmm-title" priority="0">
  &lt;?Pub Dtl?>
  &lt;div>
    &lt;!--Emit class values to reflect conditions-->
    &lt;xsl:attribute name="class">&lt;xsl:text> x-pwclmm-title-1-0&lt;/xsl:text>&lt;/xsl:attribute>
    &lt;xsl:if test="@xml:lang">
      &lt;xsl:attribute name="lang">
        &lt;xsl:call-template name="return-lang-applying-language-map">
          &lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
        &lt;/xsl:call-template>
      &lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;xsl:copy-of select="@ch:*"/>
    &lt;xsl:copy-of select="@dmp:*" xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>
    &lt;xsl:if test="@xml:lang">
      &lt;xsl:attribute name="lang">
        &lt;xsl:call-template name="return-lang-applying-language-map">
          &lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
        &lt;/xsl:call-template>
      &lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template>
    &lt;!--Process this element's content-->
    &lt;xsl:apply-templates>&lt;/xsl:apply-templates>
  &lt;/div>
&lt;/xsl:template>
&lt;!--Gentext template for Context: pwclmm-title-->
&lt;xsl:template match="pwclmm-title" mode="expand-gentext" priority="0">
  &lt;?Pub Dtl?>
  &lt;xsl:copy>
    &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>
    &lt;xsl:apply-templates mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>
    &lt;xsl:if test="not(@_gte:id)">
      &lt;?Pub Dtl?>
      &lt;xsl:attribute name="_gte:id">
        &lt;xsl:value-of select="'_g_'"/>&lt;xsl:value-of select="generate-id(.)"/>
      &lt;/xsl:attribute>
    &lt;/xsl:if>
    &lt;!--Unconditional AddBefore-->
    &lt;xsl:if test="not(@_gte:Gentext-Expanded)">
      &lt;_gte:Must-Expand-Gentext>&lt;/_gte:Must-Expand-Gentext>
      &lt;_sfe:BeforeOrAfterText>
        &lt;_ufe:engine-type>
          &lt;xsl:if test="string(./@enginetype)">
            &lt;xsl:attribute name="enginetype">&lt;xsl:value-of select="string(./@enginetype)"/>&lt;/xsl:attribute>
          &lt;/xsl:if>
        &lt;/_ufe:engine-type>
        &lt;_ufe:title-block>&lt;xsl:text>MODEL(S)&lt;/xsl:text>&lt;/_ufe:title-block>
        &lt;_ufe:title-block>&lt;xsl:value-of select="@model"/>&lt;xsl:text> ENGINES&lt;/xsl:text>&lt;/_ufe:title-block>
        &lt;!-- Modified by GBE - R007 -->
        &lt;!--span style="font-size: 11pt; font-weight: normal; ">
          &lt;xsl:if test="(ancestor-or-self::pwclmm-title[1]//statement)[1]/*|(ancestor-or-self::pwclmm-title[1]//statement)[1]/text()|(ancestor-or-self::pwclmm-title[1]//statement)[1]/processing-instruction()">
            &lt;_gte:Gentexted-Content-Wrapper>
              &lt;xsl:apply-templates mode="expand-gentext" select="(ancestor-or-self::pwclmm-title[1]//statement)[1]/*|(ancestor-or-self::pwclmm-title[1]//statement)[1]/text()|(ancestor-or-self::pwclmm-title[1]//statement)[1]/processing-instruction()">
                &lt;xsl:with-param name="skip-expanded-gentext" select="'yes'">&lt;/xsl:with-param>
              &lt;/xsl:apply-templates>
            &lt;/_gte:Gentexted-Content-Wrapper>
          &lt;/xsl:if>
        &lt;/span-->
        &lt;xsl:if test="(ancestor-or-self::pwclmm-title[1]//statement)[1]/*|(ancestor-or-self::pwclmm-title[1]//statement)[1]/text()|(ancestor-or-self::pwclmm-title[1]//statement)[1]/processing-instruction()">
          &lt;xsl:copy-of select="ancestor-or-self::pwclmm-title[1]/*[self::revst[following-sibling::statement]]"/>
          &lt;_ufe:statement>&lt;xsl:apply-templates select="ancestor-or-self::pwclmm-title[1]/statement/node()" mode="gentext"/>&lt;/_ufe:statement>
          &lt;xsl:copy-of select="ancestor-or-self::pwclmm-title[1]/*[self::revend[preceding-sibling::*[1][self::statement]]]"/>
        &lt;/xsl:if>
        &lt;!-- End modified by GBE - R-007 -->
        &lt;_ufe:title-block>&lt;xsl:text>Manual Part No. &lt;/xsl:text>&lt;xsl:value-of select="@docnbr"/>&lt;/_ufe:title-block>
        &lt;_ufe:title-block>
          &lt;xsl:text>Issued &lt;/xsl:text>
          &lt;xsl:call-template name="FormatDate">
            &lt;xsl:with-param name="DateTime" select="@oidate">&lt;/xsl:with-param>
            &lt;xsl:with-param name="DateFormat">dmy&lt;/xsl:with-param>
          &lt;/xsl:call-template>
        &lt;/_ufe:title-block>
      &lt;/_sfe:BeforeOrAfterText>
    &lt;/xsl:if>
    &lt;xsl:apply-templates mode="expand-gentext" select="* | text() | processing-instruction()">&lt;/xsl:apply-templates>
    &lt;!--Unconditional AddAfter-->
    &lt;xsl:if test="not(@_gte:Gentext-Expanded)">
      &lt;_gte:Must-Expand-Gentext>&lt;/_gte:Must-Expand-Gentext>
      &lt;_sfe:BeforeOrAfterText>
        &lt;_ufe:proprietary-notice/>
      &lt;/_sfe:BeforeOrAfterText>
    &lt;/xsl:if>
  &lt;/xsl:copy>
&lt;/xsl:template>
&lt;!-- Added by GBE - R-007 -->
&lt;xsl:template match="revst[following-sibling::statement]" mode="gentext" priority="4"/>
&lt;xsl:template match="revend[preceding-sibling::*[1][self::statement]]" mode="gentext" priority="4"/>
&lt;!-- End added by GBE - R-007 -->
&lt;!--Template for formatting date-->
&lt;!--gdb 08-27-12: Template for formatting date-->
&lt;xsl:template name="FormatDate">
  &lt;?Pub Dtl?>
  &lt;xsl:param name="DateTime">&lt;/xsl:param>
  &lt;xsl:param name="DateFormat">&lt;/xsl:param>
  &lt;xsl:variable name="year">&lt;xsl:value-of select="substring($DateTime,1,4)"/>&lt;/xsl:variable>
  &lt;xsl:variable name="month">&lt;xsl:value-of select="substring($DateTime,5,2)"/>&lt;/xsl:variable>
  &lt;xsl:variable name="day">&lt;xsl:value-of select="substring($DateTime,7,2)"/>&lt;/xsl:variable>
  &lt;xsl:choose>
&lt;xsl:when test="$DateFormat = 'dmy'">&lt;xsl:value-of select="$day"/>&lt;xsl:value-of
select="' '"/>&lt;xsl:choose>
&lt;xsl:when test="$month = 01">January&lt;/xsl:when>
&lt;xsl:when test="$month = 02">February&lt;/xsl:when>
&lt;xsl:when test="$month = 03">March&lt;/xsl:when>
&lt;xsl:when test="$month = 04">April&lt;/xsl:when>
&lt;xsl:when test="$month = 05">May&lt;/xsl:when>
&lt;xsl:when test="$month = 06">June&lt;/xsl:when>
&lt;xsl:when test="$month = 07">July&lt;/xsl:when>
&lt;xsl:when test="$month = 08">August&lt;/xsl:when>
&lt;xsl:when test="$month = 09">September&lt;/xsl:when>
&lt;xsl:when test="$month = 10">October&lt;/xsl:when>
&lt;xsl:when test="$month = 11">November&lt;/xsl:when>
&lt;xsl:when test="$month = 12">December&lt;/xsl:when>
&lt;/xsl:choose>&lt;xsl:value-of select="' '"/>&lt;xsl:value-of select="$year"
/>&lt;/xsl:when>
&lt;xsl:when test="$DateFormat = 'mdy'">&lt;xsl:choose>
&lt;xsl:when test="$month = 01">January&lt;/xsl:when>
&lt;xsl:when test="$month = 02">February&lt;/xsl:when>
&lt;xsl:when test="$month = 03">March&lt;/xsl:when>
&lt;xsl:when test="$month = 04">April&lt;/xsl:when>
&lt;xsl:when test="$month = 05">May&lt;/xsl:when>
&lt;xsl:when test="$month = 06">June&lt;/xsl:when>
&lt;xsl:when test="$month = 07">July&lt;/xsl:when>
&lt;xsl:when test="$month = 08">August&lt;/xsl:when>
&lt;xsl:when test="$month = 09">September&lt;/xsl:when>
&lt;xsl:when test="$month = 10">October&lt;/xsl:when>
&lt;xsl:when test="$month = 11">November&lt;/xsl:when>
&lt;xsl:when test="$month = 12">December&lt;/xsl:when>
&lt;/xsl:choose>&lt;xsl:value-of select="' '"/>&lt;xsl:value-of select="$day"
/>&lt;xsl:value-of select="'/'"/>&lt;xsl:value-of select="$year"/>&lt;/xsl:when>
&lt;/xsl:choose>&lt;/xsl:template>&lt;!--Initial pass template for Context: pwclmm-title-->&lt;xsl:template
match="pwclmm-title" mode="initial-pass-mode" priority="0">&lt;?Pub Dtl?> 
     &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pwclmm-title-->&lt;xsl:template
match="pwclmm-title" mode="set-countas" priority="0">&lt;?Pub Dtl?> 
     &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: pwclmm-title-->&lt;xsl:template
match="pwclmm-title" mode="set-ch-chunk" priority="0">&lt;?Pub Dtl?> 
     &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"> 
           &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
</Element>
<Element name="pwcni" style="formalBlock">
<Context priority="0" selector="pwcni">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcnitem" style="block">
<Context priority="0" selector="pwcnitem">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcpbfront" style="nostyle">
<Context priority="0" selector="pwcpbfront">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="pwcsbnbr" style="inline">
<Context priority="0" selector="pwcsbnbr">
<BaseProperties propertySetReferences="Link">
<Highlight textUnderlineStyle="underline"/>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="23" sourceType="xslDmp" stylerVersion="5"
>&lt;!--Style template for Context: pwcsbnbr-->&lt;xsl:template
name="__style-for_pwcsbnbr.1">       &lt;xsl:text> .x-pwcsbnbr-1-0 {margin-left:
0pt; margin-right: 0pt; color: #0000FF; text-decoration: underline
; text-decoration: underline ; }&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Template for Context: pwcsbnbr-->&lt;xsl:template
match="pwcsbnbr" priority="0">       &lt;span
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap">&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-pwcsbnbr-1-0&lt;/xsl:text>   
      &lt;/xsl:attribute>          &lt;xsl:copy-of select="@ch:*"/>    
     &lt;xsl:copy-of select="@dmp:*"/>          &lt;xsl:call-template
name="maybe-set-id">&lt;/xsl:call-template>          &lt;!--Process this element's content-->&lt;a
>&lt;xsl:attribute name="onClick">&lt;xsl:text>sbLink('&lt;/xsl:text>&lt;xsl:value-of
select="."/>&lt;xsl:text>');&lt;/xsl:text>&lt;/xsl:attribute>&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>&lt;/a>       &lt;/span>    &lt;/xsl:template>&lt;!--Gentext template for Context: pwcsbnbr-->&lt;xsl:template
match="pwcsbnbr" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pwcsbnbr-->&lt;xsl:template
match="pwcsbnbr" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pwcsbnbr-->&lt;xsl:template
match="pwcsbnbr" mode="set-countas" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: pwcsbnbr-->&lt;xsl:template
match="pwcsbnbr" mode="set-ch-chunk" priority="0">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="pwcsoa" style="graphic">
<GraphicDetails filename="negnumber"></GraphicDetails>
<Context priority="0" selector="pwcsoa">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="size" testType="notEqual" testValue="med"/>
</Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="pwcspbdata" style="definitionListItem">
<Context priority="0" selector="pwcspbdata">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcspblist" style="formalBlock">
<Context priority="0" selector="pwcspblist">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pwcspbnbr" style="inline">
<Context priority="0" selector="pwcspbnbr">
<BaseProperties propertySetReferences="Link">
<Highlight textUnderlineStyle="underline"/>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="23" sourceType="xslDmp" stylerVersion="5"
>&lt;!--Style template for Context: pwcspbnbr-->&lt;xsl:template
name="__style-for_pwcspbnbr.1">       &lt;xsl:text> .x-pwcspbnbr-1-0
{margin-left: 0pt; margin-right: 0pt; color: #0000FF; text-decoration:
underline ; text-decoration: underline ; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: pwcspbnbr-->&lt;xsl:template match="pwcspbnbr"
priority="0">       &lt;span
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap">&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-pwcspbnbr-1-0&lt;/xsl:text>  
       &lt;/xsl:attribute>          &lt;xsl:copy-of select="@ch:*"/>   
      &lt;xsl:copy-of select="@dmp:*"/>          &lt;xsl:call-template
name="maybe-set-id">&lt;/xsl:call-template>          &lt;!--Process this element's content-->&lt;a
>&lt;xsl:attribute name="onClick">&lt;xsl:text>spbLink('&lt;/xsl:text>&lt;xsl:value-of
select="."/>&lt;xsl:text>');&lt;/xsl:text>&lt;/xsl:attribute>&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>&lt;/a>       &lt;/span>    &lt;/xsl:template>&lt;!--Gentext template for Context: pwcspbnbr-->&lt;xsl:template
match="pwcspbnbr" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: pwcspbnbr-->&lt;xsl:template
match="pwcspbnbr" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: pwcspbnbr-->&lt;xsl:template
match="pwcspbnbr" mode="set-countas" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: pwcspbnbr-->&lt;xsl:template
match="pwcspbnbr" mode="set-ch-chunk" priority="0">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="sbdata" style="definitionListItem">
<Context priority="0" selector="sbdata">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="sbeff" style="inline">
<Context priority="0" selector="sbeff">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac76b4519-4646-4d1e-9bb5-90035f61f997"><_gte:Target lang="en"
><_gte:AttributeContent occur="1" scope="sbeff" attr="sbcond"/>-SB<_gte:AttributeContent
occur="1" scope="sbeff" attr="sbnbr"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="sbcond" testType="equals" testValue="NA"/>
<AttributeTest attributeName="sbcond" testType="equals" testValue="na"/>
<AttributeTest attributeName="sbcond" testType="none"/>
<AttributeTest attributeName="sbcond" testType="equals" testValue="RWK"/>
<AttributeTest attributeName="sbcond" testType="equals" testValue="rwk"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9af6fdf4-36ab-41b3-9f9d-9bdf1ec2953d"><_gte:Target lang="en"
>SB<_gte:AttributeContent occur="1" scope="sbeff" attr="sbnbr"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: sbeff-->&lt;xsl:template
name="__style-for_sbeff.1">       &lt;xsl:text> .x-sbeff-1-0 {margin-left:
0pt; margin-right: 0pt; } .x-sbeff-1-1 {}&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: sbeff-->&lt;xsl:template match="sbeff"
priority="0">       &lt;xsl:variable name="foClass">inline&lt;/xsl:variable
>       &lt;xsl:variable name="blockness">inline&lt;/xsl:variable>     
 &lt;span>&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-sbeff-1-0&lt;/xsl:text>      
      &lt;xsl:if
test="(@sbcond and string(@sbcond)='NA') or (@sbcond and string(@sbcond)='na') or (not(@sbcond)) or (@sbcond and string(@sbcond)='RWK') or (@sbcond and string(@sbcond)='rwk')"
> x-sbeff-1-1&lt;/xsl:if>          &lt;/xsl:attribute>          &lt;xsl:if
test="@xml:lang">             &lt;xsl:attribute name="lang">        
       &lt;xsl:call-template name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:variable name="Breaks-chunkFilenameXPath">&lt;/xsl:variable> 
        &lt;xsl:variable name="Breaks-persistentFilename">&lt;/xsl:variable
>          &lt;xsl:if
test="($Breaks-persistentFilename='yes') and ($Breaks-chunkFilenameXPath!='')"
>             &lt;xsl:variable name="chunkFilename">&lt;/xsl:variable> 
           &lt;xsl:if test="$chunkFilename!=''">                &lt;xsl:attribute
name="ch:filename">                   &lt;xsl:value-of
select="$chunkFilename"/>                &lt;/xsl:attribute>        
       &lt;xsl:attribute name="ch:namepriority">0&lt;/xsl:attribute>   
         &lt;/xsl:if>          &lt;/xsl:if>          &lt;xsl:if test="@xml:lang"
>             &lt;xsl:attribute name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;!--Process this element's content-->&lt;a href="#">&lt;xsl:attribute
name="onClick">&lt;xsl:text>sbLink('&lt;/xsl:text>&lt;xsl:value-of select="."
/>&lt;xsl:text>');&lt;/xsl:text>&lt;/xsl:attribute>&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>&lt;/a>       &lt;/span>    &lt;/xsl:template>&lt;!--Gentext template for Context: sbeff-->&lt;xsl:template
match="sbeff" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;xsl:choose>
&lt;xsl:when
test="(@sbcond and string(@sbcond)='NA') or (@sbcond and string(@sbcond)='na') or (not(@sbcond)) or (@sbcond and string(@sbcond)='RWK') or (@sbcond and string(@sbcond)='rwk')"
>&lt;!--AddBefore Condition #1-->&lt;xsl:if test="not(@_gte:Gentext-Expanded)"
>                   &lt;_gte:Must-Expand-Gentext>&lt;/_gte:Must-Expand-Gentext
>                   &lt;_sfe:BeforeOrAfterText>                      &lt;xsl:text
>SB&lt;/xsl:text>                      &lt;xsl:value-of select="@sbnbr"
/>                   &lt;/_sfe:BeforeOrAfterText>                &lt;/xsl:if
>             &lt;/xsl:when>
&lt;xsl:otherwise>                &lt;xsl:if
test="not(@_gte:Gentext-Expanded)">                   &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>                   &lt;_sfe:BeforeOrAfterText
>                      &lt;xsl:value-of select="@sbcond"/>          
           &lt;xsl:text>-SB&lt;/xsl:text>                      &lt;xsl:value-of
select="@sbnbr"/>                   &lt;/_sfe:BeforeOrAfterText>    
           &lt;/xsl:if>             &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: sbeff-->&lt;xsl:template
match="sbeff" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: sbeff-->&lt;xsl:template
match="sbeff" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: sbeff-->&lt;xsl:template
match="sbeff" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:variable
name="Breaks-chunkBoundary">&lt;/xsl:variable>             &lt;xsl:if
test="$Breaks-chunkBoundary = 'yes'">                &lt;xsl:attribute
name="ch:chunk">yes&lt;/xsl:attribute>             &lt;/xsl:if>        
    &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute> 
        &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
</Element>
<Element name="sbnbr" style="block">
<Context priority="0" selector="sbnbr">
<BaseProperties propertySetReferences="Link">
<Highlight textUnderlineStyle="underline"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A830df10d-6df0-4141-ba21-35af558296f3"><_gte:Target lang="en"
> <_gte:AttributeContent occur="1" scope="sbnbr" attr="pwcrevno"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="23" sourceType="xslDmp" stylerVersion="5"
>&lt;!--Style template for Context: sbnbr-->&lt;xsl:template
name="__style-for_sbnbr.1">       &lt;xsl:text> .x-sbnbr-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; color: #0000FF; text-decoration:
underline ; text-decoration: underline ; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: sbnbr-->&lt;xsl:template match="sbnbr"
priority="0">       &lt;div
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap">&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-sbnbr-1-0&lt;/xsl:text>      
   &lt;/xsl:attribute>          &lt;xsl:copy-of select="@ch:*"/>       
  &lt;xsl:copy-of select="@dmp:*"/>          &lt;xsl:call-template
name="maybe-set-id">&lt;/xsl:call-template>          &lt;!--Process this element's content-->&lt;a
href="#">&lt;xsl:attribute name="onClick">&lt;xsl:text>sbLink('&lt;/xsl:text
>&lt;xsl:value-of select="."/>&lt;xsl:text>');&lt;/xsl:text>&lt;/xsl:attribute
>&lt;xsl:apply-templates>&lt;/xsl:apply-templates>&lt;/a>       &lt;/div>    &lt;/xsl:template
>&lt;!--Gentext template for Context: sbnbr-->&lt;xsl:template match="sbnbr"
mode="expand-gentext" priority="0">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>          &lt;!--Unconditional AddAfter-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:value-of
select="@pwcrevno"/>             &lt;/_sfe:BeforeOrAfterText>       
  &lt;/xsl:if>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: sbnbr-->&lt;xsl:template
match="sbnbr" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: sbnbr-->&lt;xsl:template
match="sbnbr" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--DefList Term Template for sbnbr-->&lt;xsl:template
match="sblist//sbdata/sbnbr" priority="101">       &lt;dt
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap">&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:if
test="name(..)='ics' or name(..)='pwcchapsect-item' or name(..)='sbdata' or name(..)='spbnbr'"
>                &lt;xsl:text>&lt;/xsl:text>                &lt;xsl:text>x-&lt;/xsl:text
>                &lt;xsl:value-of
select="string(translate(name(..),':._','---'))"/>                &lt;xsl:text
>-1-0&lt;/xsl:text>             &lt;/xsl:if>             &lt;xsl:text> x-sbnbr-1-0&lt;/xsl:text
>          &lt;/xsl:attribute>          &lt;xsl:copy-of select="@ch:*"/> 
        &lt;xsl:copy-of select="@dmp:*"/>          &lt;xsl:call-template
name="maybe-set-id">&lt;/xsl:call-template>          &lt;!--Process this element's content-->&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>       &lt;/dt>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: sbnbr-->&lt;xsl:template
match="sbnbr" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="sheet" style="graphic">
<GraphicDetails filename="gnbr" primary="no"></GraphicDetails>
<Context priority="0" selector="sheet">
<BaseProperties propertySetReferences="Standard_space">
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4c84d239-3ad2-4f2f-8d89-e663d1aafa37"><_gte:Target lang="en"
><_ufe:block-prespace>SHEET (<_gte:AttributeContent occur="1"
scope="sheet" attr="sheetnbr"/> OF <_gte:AttributeContent occur="last"
scope="graphic" attr="sheetnbr" elem="sheet"/>)</_ufe:block-prespace
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression='count(following-sibling::sheet[@size="big"]) > 0'/>
</Tests>
<BaseProperties>
<Hidden hidden="no"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<AttributeTest attributeName="size" testType="notEqual" testValue="big"/>
</Tests>
<BaseProperties>
<Hidden hidden="no"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A671b631d-1f72-4c4c-b854-d473fe797770"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: sheet-->&lt;xsl:template
name="__style-for_sheet.1">       &lt;xsl:text> .x-sheet-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 8pt; } .x-sheet-1-1
{border-bottom: 2px solid #000000;} .x-sheet-1-2 {}&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: sheet-->&lt;xsl:template match="sheet"
priority="0">       &lt;xsl:param name="hidden" select="'yes'">&lt;/xsl:param
>       &lt;!--Dynamically determine the fo-class-->&lt;xsl:variable
name="foClass">          &lt;xsl:choose>
&lt;xsl:when test="not(@size) or (@size and string(@size)!='big')">hidden&lt;/xsl:when>
&lt;xsl:when test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'
>graphic-block&lt;/xsl:when>
&lt;xsl:otherwise>graphic-block&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:variable name="blockness"
>block&lt;/xsl:variable>       &lt;xsl:variable name="hiddenness">     
    &lt;xsl:choose>
&lt;xsl:when test="not(@size) or (@size and string(@size)!='big')">yes&lt;/xsl:when>
&lt;xsl:when test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'
>no&lt;/xsl:when>
&lt;xsl:otherwise>no&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:variable name="startnew"
>&lt;/xsl:variable>       &lt;xsl:variable name="newpageset">#noChange&lt;/xsl:variable
>       &lt;xsl:variable name="fo-class">          &lt;xsl:choose>
&lt;xsl:when test="$hiddenness='yes'">                &lt;xsl:text>hidden-&lt;/xsl:text
>                &lt;xsl:value-of select="$blockness"/>             &lt;/xsl:when>
&lt;xsl:when test="$hiddenness='no' and starts-with($foClass,'hidden-')"
>                &lt;xsl:value-of select="substring($foClass,8)"/>  
          &lt;/xsl:when>
&lt;xsl:when test="true()">&lt;!--This is the "otherwise" clause, but there may be no when's-->&lt;xsl:value-of
select="$foClass"/>             &lt;/xsl:when>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:variable
name="given-lre-override-name">&lt;/xsl:variable>       &lt;xsl:variable
name="lre-override-name">          &lt;xsl:call-template
name="determine-lre-override-name">
&lt;xsl:with-param name="given-lre-override-name"
select="$given-lre-override-name">&lt;/xsl:with-param>
&lt;xsl:with-param name="fo-class" select="$fo-class">&lt;/xsl:with-param>
&lt;/xsl:call-template>       &lt;/xsl:variable>       &lt;!--Execute the appropriate code for the dynamically determined fo-class-->&lt;xsl:choose>
&lt;xsl:when test="$fo-class='hidden-block'">             &lt;div>&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">                   &lt;xsl:text> x-sheet-1-0&lt;/xsl:text> 
                 &lt;xsl:if
test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'> x-sheet-1-1&lt;/xsl:if
>                   &lt;xsl:if
test="not(@size) or (@size and string(@size)!='big')"> x-sheet-1-2&lt;/xsl:if
>                &lt;/xsl:attribute>                &lt;xsl:if
test="@xml:lang">                   &lt;xsl:attribute name="lang">  
                   &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                   &lt;/xsl:attribute>          
     &lt;/xsl:if>                &lt;xsl:copy-of select="@ch:*"/>      
         &lt;xsl:copy-of select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
         &lt;xsl:variable name="Breaks-chunkFilenameXPath">&lt;/xsl:variable
>                &lt;xsl:variable name="Breaks-persistentFilename">&lt;/xsl:variable
>                &lt;xsl:if
test="($Breaks-persistentFilename='yes') and ($Breaks-chunkFilenameXPath!='')"
>                   &lt;xsl:variable name="chunkFilename">&lt;/xsl:variable
>                   &lt;xsl:if test="$chunkFilename!=''">           
          &lt;xsl:attribute name="ch:filename">                     
   &lt;xsl:value-of select="$chunkFilename"/>                      &lt;/xsl:attribute
>                      &lt;xsl:attribute name="ch:namepriority">0&lt;/xsl:attribute
>                   &lt;/xsl:if>                &lt;/xsl:if>           
    &lt;xsl:if test="@xml:lang">                   &lt;xsl:attribute
name="lang">                      &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                   &lt;/xsl:attribute>          
     &lt;/xsl:if>                &lt;xsl:call-template name="maybe-set-id">
&lt;/xsl:call-template>                &lt;!--Suppress element contents (but not gentext) unless unhidden-->&lt;xsl:choose>
&lt;xsl:when test="$hidden='no'">                      &lt;xsl:apply-templates>
&lt;/xsl:apply-templates>                   &lt;/xsl:when>
&lt;xsl:otherwise>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText">&lt;/xsl:apply-templates>           
       &lt;/xsl:otherwise>
&lt;/xsl:choose>             &lt;/div>          &lt;/xsl:when>
&lt;xsl:when test="$fo-class='block'">             &lt;div>&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">                   &lt;xsl:text> x-sheet-1-0&lt;/xsl:text> 
                 &lt;xsl:if
test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'> x-sheet-1-1&lt;/xsl:if
>                   &lt;xsl:if
test="not(@size) or (@size and string(@size)!='big')"> x-sheet-1-2&lt;/xsl:if
>                &lt;/xsl:attribute>                &lt;xsl:if
test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'>&lt;xsl:attribute
name="style">margin-bottom: 8pt; border-bottom: 2px solid #000000;&lt;/xsl:attribute
>&lt;/xsl:if>&lt;xsl:if test="@xml:lang">                   &lt;xsl:attribute
name="lang">                      &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                   &lt;/xsl:attribute>          
     &lt;/xsl:if>                &lt;xsl:copy-of select="@ch:*"/>      
         &lt;xsl:copy-of select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
         &lt;xsl:variable name="Breaks-chunkFilenameXPath">&lt;/xsl:variable
>                &lt;xsl:variable name="Breaks-persistentFilename">&lt;/xsl:variable
>                &lt;xsl:if
test="($Breaks-persistentFilename='yes') and ($Breaks-chunkFilenameXPath!='')"
>                   &lt;xsl:variable name="chunkFilename">&lt;/xsl:variable
>                   &lt;xsl:if test="$chunkFilename!=''">           
          &lt;xsl:attribute name="ch:filename">                     
   &lt;xsl:value-of select="$chunkFilename"/>                      &lt;/xsl:attribute
>                      &lt;xsl:attribute name="ch:namepriority">0&lt;/xsl:attribute
>                   &lt;/xsl:if>                &lt;/xsl:if>           
    &lt;xsl:if test="@xml:lang">                   &lt;xsl:attribute
name="lang">                      &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                   &lt;/xsl:attribute>          
     &lt;/xsl:if>                &lt;xsl:call-template name="maybe-set-id">
&lt;/xsl:call-template>                &lt;!--Process this element's content-->&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>&lt;/div>&lt;/xsl:when>
&lt;xsl:when test="$fo-class='graphic-block'">             &lt;div>&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">                   &lt;xsl:text> x-sheet-1-0&lt;/xsl:text> 
                 &lt;xsl:if
test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'> x-sheet-1-1&lt;/xsl:if
>                   &lt;xsl:if
test="not(@size) or (@size and string(@size)!='big')"> x-sheet-1-2&lt;/xsl:if
>                &lt;/xsl:attribute>                &lt;xsl:if
test='count(following-sibling::sheet[@size="big"]) &amp;gt; 0'>&lt;xsl:attribute
name="style">margin-bottom: 8pt; border-bottom: 2px solid #000000;&lt;/xsl:attribute
>&lt;/xsl:if>&lt;xsl:if test="@xml:lang">                   &lt;xsl:attribute
name="lang">                      &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                   &lt;/xsl:attribute>          
     &lt;/xsl:if>                &lt;xsl:copy-of select="@ch:*"/>      
         &lt;xsl:copy-of select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
         &lt;xsl:variable name="Breaks-chunkFilenameXPath">&lt;/xsl:variable
>                &lt;xsl:variable name="Breaks-persistentFilename">&lt;/xsl:variable
>                &lt;xsl:if
test="($Breaks-persistentFilename='yes') and ($Breaks-chunkFilenameXPath!='')"
>                   &lt;xsl:variable name="chunkFilename">&lt;/xsl:variable
>                   &lt;xsl:if test="$chunkFilename!=''">           
          &lt;xsl:attribute name="ch:filename">                     
   &lt;xsl:value-of select="$chunkFilename"/>                      &lt;/xsl:attribute
>                      &lt;xsl:attribute name="ch:namepriority">0&lt;/xsl:attribute
>                   &lt;/xsl:if>                &lt;/xsl:if>           
    &lt;xsl:if test="@xml:lang">                   &lt;xsl:attribute
name="lang">                      &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                   &lt;/xsl:attribute>          
     &lt;/xsl:if>                &lt;xsl:choose>
&lt;xsl:when test="@ati3d:viewer"
xmlns:ati3d="http://www.arbortext.com/namespace/graphics">&lt;!--this graphic is a 3D graphic-->&lt;xsl:variable
name="viewer" select="@ati3d:viewer">&lt;/xsl:variable>             
        &lt;xsl:variable name="generated-idval">                    
    &lt;xsl:value-of select="concat($viewer,'_')"/>                 
       &lt;xsl:apply-templates mode="set-id" select=".">
&lt;/xsl:apply-templates>                      &lt;/xsl:variable>      
               &lt;xsl:variable name="idval">                       
 &lt;xsl:value-of select="translate($generated-idval,'.','_')"/>    
                 &lt;/xsl:variable>                      &lt;span
id="{$idval}">                         &lt;xsl:variable
name="specified-idval" select="string(@_gte:id)">&lt;/xsl:variable> 
                       &lt;span>                            &lt;xsl:if
test="$specified-idval!=''">                               &lt;xsl:attribute
name="id">                                  &lt;xsl:value-of
select="$specified-idval"/>                               &lt;/xsl:attribute
>                            &lt;/xsl:if>                            &lt;xsl:variable
name="filename">                               &lt;xsl:value-of
select="@gnbr"/>                            &lt;/xsl:variable>      
                     &lt;span class="viewpath">                     
         &lt;xsl:value-of select="translate($filename,'\','/')"/>   
                        &lt;/span>                            &lt;xsl:if
test="@ati3d:links">                               &lt;span
class="viewlinks">                                  &lt;xsl:value-of
select="@ati3d:links"/>                               &lt;/span>    
                       &lt;/xsl:if>                         &lt;/span> 
                       &lt;xsl:variable name="annotation"
select="@ati3d:view">&lt;/xsl:variable>                         &lt;xsl:variable
name="height">&lt;/xsl:variable>                         &lt;xsl:variable
name="width">&lt;/xsl:variable>                         &lt;script>    
                       &lt;xsl:value-of select="$viewer"/>          
                 &lt;xsl:text>_Insert('&lt;/xsl:text>                  
         &lt;xsl:value-of select="$idval"/>                         
  &lt;xsl:text>', '&lt;/xsl:text>                            &lt;xsl:value-of
select="$width"/>                            &lt;xsl:text>', '&lt;/xsl:text
>                            &lt;xsl:value-of select="$height"/>    
                       &lt;xsl:text>', '&lt;/xsl:text>                 
          &lt;xsl:value-of select="$annotation"/>                   
        &lt;xsl:text>', '&lt;/xsl:text>                            &lt;xsl:call-template
name="get-downloaduri">
&lt;xsl:with-param name="viewer" select="$viewer">&lt;/xsl:with-param>
&lt;/xsl:call-template>                            &lt;xsl:text>');&lt;/xsl:text
>                         &lt;/script>                      &lt;/span> 
                 &lt;/xsl:when>
&lt;xsl:otherwise>&lt;!--this is a "regular" graphic-->&lt;img alt="Graphic"
>                         &lt;xsl:if test="@xml:lang">              
             &lt;xsl:attribute name="lang">                         
     &lt;xsl:call-template name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                            &lt;/xsl:attribute> 
                       &lt;/xsl:if>                         &lt;xsl:copy-of
select="@ch:*"/>                         &lt;xsl:copy-of select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
                  &lt;xsl:variable name="Breaks-chunkFilenameXPath">&lt;/xsl:variable
>                         &lt;xsl:variable name="Breaks-persistentFilename"
>&lt;/xsl:variable>                         &lt;xsl:if
test="($Breaks-persistentFilename='yes') and ($Breaks-chunkFilenameXPath!='')"
>                            &lt;xsl:variable name="chunkFilename">&lt;/xsl:variable
>                            &lt;xsl:if test="$chunkFilename!=''">  
                            &lt;xsl:attribute name="ch:filename">   
                              &lt;xsl:value-of select="$chunkFilename"
/>                               &lt;/xsl:attribute>                
              &lt;xsl:attribute name="ch:namepriority">0&lt;/xsl:attribute
>                            &lt;/xsl:if>                         &lt;/xsl:if
>                         &lt;xsl:if test="@xml:lang">              
             &lt;xsl:attribute name="lang">                         
     &lt;xsl:call-template name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>                            &lt;/xsl:attribute> 
                       &lt;/xsl:if>                         &lt;xsl:variable
name="filename">                            &lt;xsl:value-of select="@gnbr"
/>                         &lt;/xsl:variable>                       
 &lt;xsl:variable name="graphic-prop-filename">                     
      &lt;xsl:if test="$graphics-path!=''">                         
     &lt;xsl:call-template name="substring-before-last">
&lt;xsl:with-param name="str" select="$graphics-path">&lt;/xsl:with-param>
&lt;xsl:with-param name="delim" select="'/'">&lt;/xsl:with-param>
&lt;/xsl:call-template>                               &lt;xsl:text>/&lt;/xsl:text
>                            &lt;/xsl:if>                            &lt;xsl:value-of
select="$filename"/>                         &lt;/xsl:variable>     
                   &lt;xsl:attribute name="src">                    
       &lt;xsl:value-of select="string($filename)"/>                
        &lt;/xsl:attribute>                         &lt;xsl:attribute
name="style">max-width: 100%; &lt;/xsl:attribute>                   
     &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template> 
                       &lt;!--Process this element's content-->&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>&lt;/img>&lt;/xsl:otherwise>
&lt;/xsl:choose>&lt;!--Source edit to add negnum to graphic pop-up window.-->&lt;xsl:if
test="@negnum">&lt;div>&lt;xsl:attribute name="style">margin-bottom: 8pt;&lt;/xsl:attribute
>&lt;xsl:value-of select="@negnum"/>&lt;/div>&lt;/xsl:if>&lt;/div>&lt;/xsl:when>
&lt;/xsl:choose>&lt;/xsl:template>&lt;!--Gentext template for Context: sheet-->&lt;xsl:template
match="sheet" mode="expand-gentext" priority="0">       &lt;xsl:choose>
&lt;xsl:when test="not(@size) or (@size and string(@size)!='big')">&lt;!--AddBefore Condition #2-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">                &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>                &lt;_sfe:BeforeOrAfterText
>&lt;/_sfe:BeforeOrAfterText>             &lt;/xsl:if>          &lt;/xsl:when>
&lt;xsl:otherwise>             &lt;xsl:if test="not(@_gte:Gentext-Expanded)"
>                &lt;_gte:Must-Expand-Gentext>&lt;/_gte:Must-Expand-Gentext
>                &lt;_sfe:BeforeOrAfterText>                   &lt;_ufe:block-prespace
>                      &lt;xsl:text>SHEET (&lt;/xsl:text>              
       &lt;xsl:value-of select="@sheetnbr"/>                      &lt;xsl:text
> OF &lt;/xsl:text>                      &lt;xsl:value-of
select="(ancestor-or-self::graphic[1]//sheet)[position()=last()]/@sheetnbr"
/>                      &lt;xsl:text>)&lt;/xsl:text>                   &lt;/_ufe:block-prespace
>                &lt;/_sfe:BeforeOrAfterText>             &lt;/xsl:if> 
        &lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: sheet-->&lt;xsl:template
match="sheet" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: sheet-->&lt;xsl:template
match="sheet" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: sheet-->&lt;xsl:template
match="sheet" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:variable
name="Breaks-chunkBoundary">&lt;/xsl:variable>             &lt;xsl:if
test="$Breaks-chunkBoundary = 'yes'">                &lt;xsl:attribute
name="ch:chunk">yes&lt;/xsl:attribute>             &lt;/xsl:if>        
    &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute> 
        &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
</Element>
<Element name="slavename" style="inline">
<Context priority="0" selector="slavename">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="slavenbr" style="inline">
<Context priority="0" selector="slavenbr">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="slavepart" style="inline">
<Context priority="0" selector="slavepart">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="spbnbr" style="definitionListItem">
<Context priority="0" selector="spbnbr">
<BaseProperties propertySetReferences="List_item_space Link">
<Highlight textUnderlineStyle="underline"/>
<Breaks blockOrInline="block"/></BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: spbnbr-->&lt;xsl:template
name="__style-for_spbnbr.1">       &lt;xsl:text> .x-spbnbr-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; color: #0000FF; text-decoration: underline ; text-decoration:
underline ; }&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Template for Context: spbnbr-->&lt;xsl:template
match="spbnbr" priority="0">       &lt;xsl:variable name="foClass">definitionListItem&lt;/xsl:variable
>       &lt;xsl:variable name="blockness">block&lt;/xsl:variable>       &lt;xsl:variable
name="startnew">&lt;/xsl:variable>       &lt;xsl:variable name="newpageset"
>#noChange&lt;/xsl:variable>       &lt;a>&lt;xsl:attribute name="onClick">&lt;xsl:text
>spbLink('&lt;/xsl:text>&lt;xsl:value-of select="."/>&lt;xsl:text>');&lt;/xsl:text
>&lt;/xsl:attribute>&lt;xsl:apply-templates>&lt;/xsl:apply-templates>&lt;/a> 
  &lt;/xsl:template>&lt;!--Gentext template for Context: spbnbr-->&lt;xsl:template
match="spbnbr" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: spbnbr-->&lt;xsl:template
match="spbnbr" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: spbnbr-->&lt;xsl:template
match="spbnbr" mode="set-countas" priority="0">       &lt;xsl:copy> 
        &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--DefList Term Template for spbnbr-->&lt;xsl:template
match="pwcspblist//pwcspbdata/spbnbr" priority="101">       &lt;dt>&lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:if
test="name(..)='chapsect-item' or name(..)='ics' or name(..)='pwcchapsect-item' or name(..)='pwcspbdata' or name(..)='sbdata' or name(..)='spbnbr'"
>                &lt;xsl:text>&lt;/xsl:text>                &lt;xsl:text>x-&lt;/xsl:text
>                &lt;xsl:value-of
select="string(translate(name(..),':._','---'))"/>                &lt;xsl:text
>-1-0&lt;/xsl:text>             &lt;/xsl:if>             &lt;xsl:text> x-spbnbr-1-0&lt;/xsl:text
>          &lt;/xsl:attribute>          &lt;xsl:if test="@xml:lang">   
         &lt;xsl:attribute name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;!--Process this element's content-->&lt;xsl:apply-templates>
&lt;/xsl:apply-templates>       &lt;/dt>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: spbnbr-->&lt;xsl:template
match="spbnbr" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="statement" style="block">
<Context priority="0" selector="statement">
<BaseProperties>
<Hidden hidden="yes"/>
<Font size="11pt" weight="normal"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="std" style="inline">
<Context priority="0" selector="std">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Add5eabd7-febc-47bb-9293-d6fd31408a37"><_gte:Target lang="en"
><_gte:ElementContent occur="1" scope="std" include="contentOnly"
elem="stdname"/> (<_gte:ElementContent occur="1" scope="std"
include="contentOnly" elem="stdnbr"/>)</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="self::std/stdnbr[contains(., 'NA')]"/>
<XPathTest expression="string-length(self::std/stdnbr) = 2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adb896cb6-03ff-4855-8f48-124ac46362d8"><_gte:Target lang="en"
><_gte:ElementContent occur="1" scope="std" include="contentOnly"
elem="stdname"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="stdname" style="inline">
<Context priority="0" selector="stdname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="stdnbr" style="inline">
<Context priority="0" selector="stdnbr">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="step" style="listItem">
<Context priority="20.005" selector="numlist/step">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A627dec14-0e96-4f19-ae21-dd062c0dd43a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Ab9a103d0-de7a-4a63-9036-f759ad5e2372"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="16" selector="procedure//step[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-18pt" leftIndent="@18pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0c798631-b2a7-4a05-b770-6052ab487694"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="'(' (CURRENT) ')'"
numberAlignment="left" numberScope="procedure" numberStyle="1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A09511794-e36e-4907-9526-0a416782b371"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: procedure//step[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_step.4predep382">       &lt;xsl:text> .x-step-2-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: procedure//step[child::*[1] != 'note']-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']" priority="2">     
 &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: procedure//step[child::*[1] != 'note']-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']" mode="expand-gentext"
priority="2">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:Gentext-Expanded">y&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="expand-gentext" select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if
test="not(@_gte:id)">             &lt;xsl:attribute name="_gte:id"> 
              &lt;xsl:value-of select="'_g_'"/>                &lt;xsl:value-of
select="generate-id(.)"/>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: procedure//step[child::*[1] != 'note']-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']" mode="initial-pass-mode"
priority="2">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=procedure//step[child::*[1] != 'note']-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']" mode="styler_numbering"
priority="2">       &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:variable
name="node-id" select="generate-id(.)">&lt;/xsl:variable>       &lt;xsl:variable
name="from-node"
select="(ancestor-or-self::procedure[not(ancestor::procedure)])[last()]"
>&lt;/xsl:variable>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^procedure.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^procedure.cnt'][not(ancestor-or-self::procedure)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="1" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: procedure//step[child::*[1] != 'note']-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']" mode="set-countas"
priority="2">       &lt;xsl:copy>          &lt;xsl:attribute
name="_gte:count-as-id">cnt__^procedure.cnt&lt;/xsl:attribute>      
   &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']"
mode="styler-LabelAndNumberMarker" priority="2">       &lt;_gte:styler_numbering
>          &lt;xsl:variable name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: procedure//step[child::*[1] != 'note']-->&lt;xsl:template
match="procedure//step[child::*[1] != 'note']" mode="set-ch-chunk"
priority="2">       &lt;xsl:copy>          &lt;xsl:if
test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="10" selector="procedure//step">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-18pt" leftIndent="@18pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A62babfc7-5a5d-4c45-b642-1cc76e83c4f9"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="'(' (CURRENT) ')'"
numberAlignment="left" numberScope="procedure" numberStyle="1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae01a83e4-e160-4934-b137-4836bcbb9967"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="23" sourceType="xslDmp" stylerVersion="5"
>&lt;!--Style template for Context: procedure//step-->&lt;xsl:template
name="__style-for_step.2predep151">       &lt;xsl:text> .x-step-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; margin-left: 16pt; text-indent: 0pt; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: procedure//step-->&lt;xsl:template
match="procedure//step" priority="10">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
width="100%" xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"
>          &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable> 
        &lt;xsl:if test="$followWith='tab'">             &lt;xsl:attribute
name="style">table-layout: fixed; &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step-1-0&lt;/xsl:text>       
  &lt;/xsl:attribute>          &lt;xsl:copy-of select="@ch:*"/>        
 &lt;xsl:copy-of select="@dmp:*"/>          &lt;xsl:call-template
name="maybe-set-id">&lt;/xsl:call-template>          &lt;xsl:variable
name="col1-width">0pt&lt;/xsl:variable>          &lt;xsl:variable
name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: procedure//step-->&lt;xsl:template
match="procedure//step" mode="expand-gentext" priority="10">     
 &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: procedure//step-->&lt;xsl:template
match="procedure//step" mode="initial-pass-mode" priority="10">  
    &lt;xsl:copy>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=procedure//step-->&lt;xsl:template
match="procedure//step" mode="styler_numbering" priority="10">   
   &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:variable name="node-id"
select="generate-id(.)">&lt;/xsl:variable>       &lt;xsl:variable
name="from-node"
select="(ancestor-or-self::procedure[not(ancestor::procedure)])[last()]"
>&lt;/xsl:variable>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^procedure.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^procedure.cnt'][not(ancestor-or-self::procedure)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="1" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: procedure//step-->&lt;xsl:template
match="procedure//step" mode="set-countas" priority="10">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:count-as-id">cnt__^procedure.cnt&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="procedure//step" mode="styler-LabelAndNumberMarker" priority="10"
>       &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"
>             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: procedure//step-->&lt;xsl:template
match="procedure//step" mode="set-ch-chunk" priority="10">       &lt;xsl:copy
>          &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
<Context priority="0" selector="step">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1em" leftIndent="@1em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="step2" style="listItem">
<Context priority="20.005" selector="numlist/step2">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af5e12efa-067f-49e6-95f5-0a8e9c5e9925"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A80d442cb-8433-4493-9b9b-168ece897a13"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6" selector="step2[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.6em" leftIndent="@1.6em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adeaa941d-3cb2-499d-bf4f-5db5216b032a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="'(' (CURRENT) ')'"
numberAlignment="left" numberScope="step" numberStyle="a"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae0ccdada-e35a-4445-985f-7e14d8fafe30"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step2[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_step2.3st2p2282">       &lt;xsl:text> .x-step2-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: step2[child::*[1] != 'note']-->&lt;xsl:template
match="step2[child::*[1] != 'note']" priority="1">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step2-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: step2[child::*[1] != 'note']-->&lt;xsl:template
match="step2[child::*[1] != 'note']" mode="expand-gentext" priority="1"
>       &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step2[child::*[1] != 'note']-->&lt;xsl:template
match="step2[child::*[1] != 'note']" mode="initial-pass-mode"
priority="1">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=step2[child::*[1] != 'note']-->&lt;xsl:template
match="step2[child::*[1] != 'note']" mode="styler_numbering"
priority="1">       &lt;xsl:text>(&lt;/xsl:text>       &lt;xsl:variable
name="node-id" select="generate-id(.)">&lt;/xsl:variable>       &lt;xsl:variable
name="from-node"
select="(ancestor-or-self::step[not(ancestor::step)])[last()]">&lt;/xsl:variable
>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^step.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^step.cnt'][not(ancestor-or-self::step)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="a" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step2[child::*[1] != 'note']-->&lt;xsl:template
match="step2[child::*[1] != 'note']" mode="set-countas" priority="1"
>       &lt;xsl:copy>          &lt;xsl:attribute name="_gte:count-as-id"
>cnt__^step.cnt&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="step2[child::*[1] != 'note']" mode="styler-LabelAndNumberMarker"
priority="1">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step2[child::*[1] != 'note']-->&lt;xsl:template
match="step2[child::*[1] != 'note']" mode="set-ch-chunk" priority="1"
>       &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"
>             &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="0" selector="step2">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.6em" leftIndent="@1.6em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0536ddf7-a5cf-407d-a16f-ecd8c9c79e61"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="'(' (CURRENT) ')'"
numberAlignment="left" numberScope="step" numberStyle="a"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A8f4bd6c3-2ece-48ad-91b7-523352021f2f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="23" sourceType="xslDmp" stylerVersion="5"
>&lt;!--Style template for Context: step2-->&lt;xsl:template
name="__style-for_step2.1">       &lt;xsl:text> .x-step2-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: step2-->&lt;xsl:template match="step2"
priority="0">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
width="100%" xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"
>          &lt;xsl:variable name="followWith">emspace&lt;/xsl:variable> 
        &lt;xsl:if test="$followWith='tab'">             &lt;xsl:attribute
name="style">table-layout: fixed; &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step2-1-0&lt;/xsl:text>      
   &lt;/xsl:attribute>          &lt;xsl:copy-of select="@ch:*"/>       
  &lt;xsl:copy-of select="@dmp:*"/>          &lt;xsl:call-template
name="maybe-set-id">&lt;/xsl:call-template>          &lt;xsl:variable
name="col1-width">0pt&lt;/xsl:variable>          &lt;xsl:variable
name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: step2-->&lt;xsl:template
match="step2" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step2-->&lt;xsl:template
match="step2" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=step2-->&lt;xsl:template
match="step2" mode="styler_numbering" priority="0">       &lt;xsl:text
>(&lt;/xsl:text>       &lt;xsl:variable name="node-id" select="generate-id(.)"
>&lt;/xsl:variable>       &lt;xsl:variable name="from-node"
select="(ancestor-or-self::step[not(ancestor::step)])[last()]">&lt;/xsl:variable
>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^step.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^step.cnt'][not(ancestor-or-self::step)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="a" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;xsl:text>)&lt;/xsl:text>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step2-->&lt;xsl:template
match="step2" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:attribute name="_gte:count-as-id">cnt__^step.cnt&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="step2" mode="styler-LabelAndNumberMarker" priority="0">   
   &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"> 
           &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step2-->&lt;xsl:template
match="step2" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="step3" style="listItem">
<Context priority="20.005" selector="numlist/step3">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad20b3506-e5d3-47c5-8ae8-a68276ad9fa9"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A1cf15d06-96d6-4c5c-aa46-4297a8419998"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6" selector="step3[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.3em" leftIndent="@1.3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Add361b4a-44a6-46a2-8272-a2df74b6f4c2"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="step2" numberStyle="1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A1fa95d1e-e14a-431c-8af1-22339dd1fc4a"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step3[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_step3.3st3p3282">       &lt;xsl:text> .x-step3-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: step3[child::*[1] != 'note']-->&lt;xsl:template
match="step3[child::*[1] != 'note']" priority="1">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step3-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: step3[child::*[1] != 'note']-->&lt;xsl:template
match="step3[child::*[1] != 'note']" mode="expand-gentext" priority="1"
>       &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step3[child::*[1] != 'note']-->&lt;xsl:template
match="step3[child::*[1] != 'note']" mode="initial-pass-mode"
priority="1">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=step3[child::*[1] != 'note']-->&lt;xsl:template
match="step3[child::*[1] != 'note']" mode="styler_numbering"
priority="1">       &lt;xsl:variable name="node-id" select="generate-id(.)"
>&lt;/xsl:variable>       &lt;xsl:variable name="from-node"
select="(ancestor-or-self::step2[not(ancestor::step2)])[last()]">&lt;/xsl:variable
>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^step2.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^step2.cnt'][not(ancestor-or-self::step2)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="1" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step3[child::*[1] != 'note']-->&lt;xsl:template
match="step3[child::*[1] != 'note']" mode="set-countas" priority="1"
>       &lt;xsl:copy>          &lt;xsl:attribute name="_gte:count-as-id"
>cnt__^step2.cnt&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="step3[child::*[1] != 'note']" mode="styler-LabelAndNumberMarker"
priority="1">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step3[child::*[1] != 'note']-->&lt;xsl:template
match="step3[child::*[1] != 'note']" mode="set-ch-chunk" priority="1"
>       &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"
>             &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="0" selector="step3">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.3em" leftIndent="@1.3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A24cc2290-ea7b-4709-b1c4-162cdf121d11"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="step2" numberStyle="1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A98750a4c-60d6-4c53-82df-03b42bb6d0ed"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step3-->&lt;xsl:template
name="__style-for_step3.1">       &lt;xsl:text> .x-step3-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: step3-->&lt;xsl:template match="step3"
priority="0">&lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step3-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: step3-->&lt;xsl:template
match="step3" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step3-->&lt;xsl:template
match="step3" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=step3-->&lt;xsl:template
match="step3" mode="styler_numbering" priority="0">       &lt;xsl:variable
name="node-id" select="generate-id(.)">&lt;/xsl:variable>       &lt;xsl:variable
name="from-node"
select="(ancestor-or-self::step2[not(ancestor::step2)])[last()]">&lt;/xsl:variable
>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^step2.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^step2.cnt'][not(ancestor-or-self::step2)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="1" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step3-->&lt;xsl:template
match="step3" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:attribute name="_gte:count-as-id">cnt__^step2.cnt&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="step3" mode="styler-LabelAndNumberMarker" priority="0">   
   &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"> 
           &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step3-->&lt;xsl:template
match="step3" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="step4" style="listItem">
<Context priority="20.005" selector="numlist/step4">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A209e6c13-986b-42fd-9499-3da9c927c213"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Afc264982-ea0b-42f7-9629-9348aae424a8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6" selector="step4[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.3em" leftIndent="@1.3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0a5268a6-2ba5-4fa7-afb2-e2aacf152eae"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="a"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="step3" numberStyle="a"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A4108140e-b04e-4002-b6da-a4e8999234da"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step4[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_step4.3st4p4282">       &lt;xsl:text> .x-step4-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: step4[child::*[1] != 'note']-->&lt;xsl:template
match="step4[child::*[1] != 'note']" priority="1">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step4-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: step4[child::*[1] != 'note']-->&lt;xsl:template
match="step4[child::*[1] != 'note']" mode="expand-gentext" priority="1"
>       &lt;xsl:copy>          &lt;xsl:attribute name="_gte:Gentext-Expanded"
>y&lt;/xsl:attribute>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*">&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)"
>             &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;_gte:styler_numbering>                   &lt;xsl:variable
name="gte_id">                      &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                            &lt;xsl:value-of
select="@_gte:id"/>                         &lt;/xsl:when>
&lt;xsl:otherwise>                            &lt;xsl:value-of select="'_g_'"
/>                            &lt;xsl:value-of select="generate-id(.)"
/>                         &lt;/xsl:otherwise>
&lt;/xsl:choose>                   &lt;/xsl:variable>                   &lt;xsl:attribute
name="gte_id">                      &lt;xsl:value-of select="$gte_id"
/>                   &lt;/xsl:attribute>                &lt;/_gte:styler_numbering
>                &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step4[child::*[1] != 'note']-->&lt;xsl:template
match="step4[child::*[1] != 'note']" mode="initial-pass-mode"
priority="1">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=step4[child::*[1] != 'note']-->&lt;xsl:template
match="step4[child::*[1] != 'note']" mode="styler_numbering"
priority="1">       &lt;xsl:variable name="node-id" select="generate-id(.)"
>&lt;/xsl:variable>       &lt;xsl:variable name="from-node"
select="(ancestor-or-self::step3[not(ancestor::step3)])[last()]">&lt;/xsl:variable
>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^step3.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^step3.cnt'][not(ancestor-or-self::step3)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="a" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step4[child::*[1] != 'note']-->&lt;xsl:template
match="step4[child::*[1] != 'note']" mode="set-countas" priority="1"
>       &lt;xsl:copy>          &lt;xsl:attribute name="_gte:count-as-id"
>cnt__^step3.cnt&lt;/xsl:attribute>          &lt;xsl:apply-templates
mode="set-countas" select="@*|node()">&lt;/xsl:apply-templates>     
 &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="step4[child::*[1] != 'note']" mode="styler-LabelAndNumberMarker"
priority="1">       &lt;_gte:styler_numbering>          &lt;xsl:variable
name="gte_id">             &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step4[child::*[1] != 'note']-->&lt;xsl:template
match="step4[child::*[1] != 'note']" mode="set-ch-chunk" priority="1"
>       &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"
>             &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="0" selector="step4">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.3em" leftIndent="@1.3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3d335e11-c043-4eea-a6ed-185f841c9ff9"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="step3" numberStyle="a"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A2e411796-813f-4889-a7ca-7089478809a2"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step4-->&lt;xsl:template
name="__style-for_step4.1">       &lt;xsl:text> .x-step4-1-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: step4-->&lt;xsl:template match="step4"
priority="0">&lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">emspace&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step4-1-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">100%&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">2&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">left&lt;/xsl:variable>          &lt;col>             &lt;xsl:if
test="$col1-width!=''">                &lt;xsl:attribute name="style"
>                   &lt;xsl:text>width: &lt;/xsl:text>                 
 &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                      &lt;xsl:apply-templates
select="_sfe:BeforeOrAfterText[1]">&lt;/xsl:apply-templates>        
          &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>                &lt;/td
>                &lt;td>                   &lt;xsl:if
test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
       &lt;xsl:apply-templates select="_sfe:BeforeOrAfterText[1]">
&lt;/xsl:apply-templates>                   &lt;/xsl:if>               
   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: step4-->&lt;xsl:template
match="step4" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:attribute name="_gte:Gentext-Expanded">y&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*">
&lt;/xsl:apply-templates>          &lt;xsl:if test="not(@_gte:id)">    
        &lt;xsl:attribute name="_gte:id">                &lt;xsl:value-of
select="'_g_'"/>                &lt;xsl:value-of select="generate-id(.)"
/>             &lt;/xsl:attribute>          &lt;/xsl:if>          &lt;!--Unconditional AddBefore-->&lt;xsl:if
test="not(@_gte:Gentext-Expanded)">             &lt;_gte:Must-Expand-Gentext
>&lt;/_gte:Must-Expand-Gentext>             &lt;_sfe:BeforeOrAfterText> 
              &lt;span style="text-decoration: underline; ">        
          &lt;_gte:styler_numbering>                      &lt;xsl:variable
name="gte_id">                         &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                               &lt;xsl:value-of
select="@_gte:id"/>                            &lt;/xsl:when>
&lt;xsl:otherwise>                               &lt;xsl:value-of
select="'_g_'"/>                               &lt;xsl:value-of
select="generate-id(.)"/>                            &lt;/xsl:otherwise>
&lt;/xsl:choose>                      &lt;/xsl:variable>               
      &lt;xsl:attribute name="gte_id">                         &lt;xsl:value-of
select="$gte_id"/>                      &lt;/xsl:attribute>         
         &lt;/_gte:styler_numbering>                &lt;/span>         
      &lt;xsl:text> &lt;/xsl:text>                &lt;xsl:text> &lt;/xsl:text
>             &lt;/_sfe:BeforeOrAfterText>          &lt;/xsl:if>       
  &lt;xsl:apply-templates mode="expand-gentext"
select="* | text() | processing-instruction()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step4-->&lt;xsl:template
match="step4" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Numbering template for context=step4-->&lt;xsl:template
match="step4" mode="styler_numbering" priority="0">       &lt;xsl:variable
name="node-id" select="generate-id(.)">&lt;/xsl:variable>       &lt;xsl:variable
name="from-node"
select="(ancestor-or-self::step3[not(ancestor::step3)])[last()]">&lt;/xsl:variable
>       &lt;xsl:variable name="num">          &lt;xsl:variable
name="candidate-num">             &lt;xsl:choose>
&lt;xsl:when test="count($from-node) &amp;gt; 0">                   &lt;xsl:for-each
select="$from-node/descendant-or-self::*[@_gte:count-as-id='cnt__^step3.cnt']"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:for-each
select="//*[@_gte:count-as-id='cnt__^step3.cnt'][not(ancestor-or-self::step3)]"
>                      &lt;xsl:if test="generate-id(.) = $node-id"> 
                       &lt;xsl:value-of select="position()"/>       
              &lt;/xsl:if>                   &lt;/xsl:for-each>        
       &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:choose>
&lt;xsl:when test="string(number($candidate-num))!='NaN'">          
     &lt;xsl:value-of select="$candidate-num"/>             &lt;/xsl:when>
&lt;xsl:otherwise>1&lt;/xsl:otherwise>
&lt;/xsl:choose>       &lt;/xsl:variable>       &lt;xsl:choose>
&lt;xsl:when test="string(number($num))!='NaN'">             &lt;xsl:number
format="a" value="$num"/>          &lt;/xsl:when>
&lt;xsl:otherwise>?&lt;/xsl:otherwise>
&lt;/xsl:choose>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step4-->&lt;xsl:template
match="step4" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:attribute name="_gte:count-as-id">cnt__^step3.cnt&lt;/xsl:attribute
>          &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--LabelAndNumberMarker template-->&lt;xsl:template
match="step4" mode="styler-LabelAndNumberMarker" priority="0">   
   &lt;_gte:styler_numbering>          &lt;xsl:variable name="gte_id"> 
           &lt;xsl:choose>
&lt;xsl:when test="@_gte:id">                   &lt;xsl:value-of
select="@_gte:id"/>                &lt;/xsl:when>
&lt;xsl:otherwise>                   &lt;xsl:value-of select="'_g_'"/> 
                 &lt;xsl:value-of select="generate-id(.)"/>         
      &lt;/xsl:otherwise>
&lt;/xsl:choose>          &lt;/xsl:variable>          &lt;xsl:attribute
name="gte_id">             &lt;xsl:value-of select="$gte_id"/>      
   &lt;/xsl:attribute>       &lt;/_gte:styler_numbering>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step4-->&lt;xsl:template
match="step4" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="step5" style="listItem">
<Context priority="20.005" selector="numlist/step5">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9fedd4bb-721d-4198-b712-7d36877966f6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae8953037-6c2e-46f1-9b65-6630ca751c47"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6" selector="step5[child::*[1] != 'note']">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step5[child::*[1] != 'note']-->&lt;xsl:template
name="__style-for_step5.3st5p5282">       &lt;xsl:text> .x-step5-2-0
{margin-left: 0pt; margin-right: 0pt; text-indent: 0pt; margin-top:
6pt; margin-bottom: 6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text
>    &lt;/xsl:template>&lt;!--Template for Context: step5[child::*[1] != 'note']-->&lt;xsl:template
match="step5[child::*[1] != 'note']" priority="1">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step5-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">0pt&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">3&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">center&lt;/xsl:variable>          &lt;col>           
 &lt;xsl:if test="$col1-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                   &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
    &lt;/xsl:if>                &lt;/td>                &lt;td>           
       &lt;xsl:if test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
    &lt;/xsl:if>                   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' ]">&lt;/xsl:apply-templates>                &lt;/td
>             &lt;/tr>          &lt;/tbody>       &lt;/table>    &lt;/xsl:template
>&lt;!--Gentext template for Context: step5[child::*[1] != 'note']-->&lt;xsl:template
match="step5[child::*[1] != 'note']" mode="expand-gentext" priority="1"
>       &lt;xsl:copy>          &lt;xsl:apply-templates mode="expand-gentext"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--Initial pass template for Context: step5[child::*[1] != 'note']-->&lt;xsl:template
match="step5[child::*[1] != 'note']" mode="initial-pass-mode"
priority="1">       &lt;xsl:copy>          &lt;xsl:call-template
name="maybe-set-gte-id">&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step5[child::*[1] != 'note']-->&lt;xsl:template
match="step5[child::*[1] != 'note']" mode="set-countas" priority="1"
>       &lt;xsl:copy>          &lt;xsl:apply-templates mode="set-countas"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
>&lt;!--Set ch:chunk template for Context: step5[child::*[1] != 'note']-->&lt;xsl:template
match="step5[child::*[1] != 'note']" mode="set-ch-chunk" priority="1"
>       &lt;xsl:copy>          &lt;xsl:if test="not(@_gte:did-set-chunk)"
>             &lt;xsl:attribute name="_gte:did-set-chunk">yes&lt;/xsl:attribute
>          &lt;/xsl:if>          &lt;xsl:apply-templates mode="set-ch-chunk"
select="@*|node()">&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template
></EditedSource>
</Context>
<Context priority="0" selector="step5">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
<EditedSource minorVersion="0" productVersion="6.0M010"
sourceType="xslDmp" stylerVersion="6">&lt;!--Style template for Context: step5-->&lt;xsl:template
name="__style-for_step5.2st5p552">       &lt;xsl:text> .x-step5-2-0 {margin-left:
0pt; margin-right: 0pt; text-indent: 0pt; margin-top: 6pt; margin-bottom:
6pt; margin-left: 0pt; text-indent: 0pt; }&lt;/xsl:text>    &lt;/xsl:template
>&lt;!--Template for Context: step5-->&lt;xsl:template match="step5"
priority="0">       &lt;xsl:apply-templates
select="node()[name() = 'warning' or name() = 'caution' or name() = 'note' ]">
&lt;/xsl:apply-templates>&lt;table border="0" cellpadding="0" cellspacing="0"
>          &lt;xsl:attribute name="style">             &lt;xsl:variable
name="followWith">&lt;/xsl:variable>             &lt;xsl:if
test="$followWith='tab'">table-layout: fixed; &lt;/xsl:if>          &lt;/xsl:attribute
>          &lt;!--Emit class values to reflect conditions-->&lt;xsl:attribute
name="class">             &lt;xsl:text> x-step5-2-0&lt;/xsl:text> x--zero-left-margins&lt;/xsl:attribute
>          &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute
name="lang">                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:copy-of select="@ch:*"/>          &lt;xsl:copy-of
select="@dmp:*"
xmlns:dmp="http://www.arbortext.com/namespace/dmp/dmpmap"/>      
   &lt;xsl:if test="@xml:lang">             &lt;xsl:attribute name="lang"
>                &lt;xsl:call-template
name="return-lang-applying-language-map">
&lt;xsl:with-param name="doclang" select="@xml:lang">&lt;/xsl:with-param>
&lt;/xsl:call-template>             &lt;/xsl:attribute>          &lt;/xsl:if
>          &lt;xsl:call-template name="maybe-set-id">&lt;/xsl:call-template
>          &lt;xsl:variable name="col1-width">0pt&lt;/xsl:variable>    
     &lt;xsl:variable name="col2-width">0pt&lt;/xsl:variable>          &lt;xsl:variable
name="col3-width">&lt;/xsl:variable>          &lt;xsl:variable
name="itemlabel-colnum">3&lt;/xsl:variable>          &lt;xsl:variable
name="col2-align">center&lt;/xsl:variable>          &lt;col>           
 &lt;xsl:if test="$col1-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col1-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col2-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col2-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;col>           
 &lt;xsl:if test="$col3-width!=''">                &lt;xsl:attribute
name="style">                   &lt;xsl:text>width: &lt;/xsl:text>     
             &lt;xsl:value-of select="$col3-width"/>                &lt;/xsl:attribute
>             &lt;/xsl:if>          &lt;/col>          &lt;tbody>         
   &lt;tr valign="baseline">                &lt;td align="right">      
            &lt;xsl:if test="$itemlabel-colnum=1">                  
   &lt;xsl:attribute name="style">word-break: keep-all; &lt;/xsl:attribute
>                   &lt;/xsl:if>                &lt;/td>                &lt;td
align="{$col2-align}">                   &lt;xsl:if
test="$itemlabel-colnum=2">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
    &lt;/xsl:if>                &lt;/td>                &lt;td>           
       &lt;xsl:if test="$itemlabel-colnum=3">                      &lt;xsl:attribute
name="style">word-break: keep-all; &lt;/xsl:attribute>              
    &lt;/xsl:if>                   &lt;!--Process this element's content-->&lt;xsl:apply-templates
select="node()[name(.)!='_sfe:BeforeOrAfterText' and name() != 'warning'
and name() != 'caution' and name() != 'note' ]">&lt;/xsl:apply-templates
>                &lt;/td>             &lt;/tr>          &lt;/tbody>       &lt;/table
>    &lt;/xsl:template>&lt;!--Gentext template for Context: step5-->&lt;xsl:template
match="step5" mode="expand-gentext" priority="0">       &lt;xsl:copy
>          &lt;xsl:apply-templates mode="expand-gentext" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Initial pass template for Context: step5-->&lt;xsl:template
match="step5" mode="initial-pass-mode" priority="0">       &lt;xsl:copy
>          &lt;xsl:call-template name="maybe-set-gte-id">
&lt;/xsl:call-template>          &lt;xsl:apply-templates
mode="initial-pass-mode" select="@*|node()">&lt;/xsl:apply-templates
>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set count-as pass template for Context: step5-->&lt;xsl:template
match="step5" mode="set-countas" priority="0">       &lt;xsl:copy>  
       &lt;xsl:apply-templates mode="set-countas" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template>&lt;!--Set ch:chunk template for Context: step5-->&lt;xsl:template
match="step5" mode="set-ch-chunk" priority="0">       &lt;xsl:copy> 
        &lt;xsl:if test="not(@_gte:did-set-chunk)">             &lt;xsl:attribute
name="_gte:did-set-chunk">yes&lt;/xsl:attribute>          &lt;/xsl:if> 
        &lt;xsl:apply-templates mode="set-ch-chunk" select="@*|node()">
&lt;/xsl:apply-templates>       &lt;/xsl:copy>    &lt;/xsl:template></EditedSource>
</Context>
</Element>
<Element name="subtask" style="formalBlock">
<Context priority="0" selector="subtask">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9c4cb299-9e56-4ec9-8322-29471cfcd688"><_gte:Target lang="en"
><_ufe:task-postspace>Subtask <_gte:AttributeContent occur="1"
scope="subtask" attr="chapnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="sectnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="subjnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="func"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="seq"/></_ufe:task-postspace></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests>
<AttributeTest attributeName="confltr" testType="any"/>
<AttributeTest attributeName="confltr" testType="notEqual"/>
<AttributeTest attributeName="varnbr"/>
<AttributeTest attributeName="varnbr" testType="notEqual"/>
<AttributeTest attributeName="varnbr" testType="notEqual" testValue="0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4b7862c2-53d3-47a3-b35e-6d0b8e260154"><_gte:Target lang="en"
><_ufe:task-postspace>Subtask <_gte:AttributeContent occur="1"
scope="subtask" attr="chapnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="sectnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="subjnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="func"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="seq"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="confltr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="varnbr"/></_ufe:task-postspace></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="confltr" testType="any"/>
<AttributeTest attributeName="confltr" testType="notEqual"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0e75a0a0-ef75-44c0-a907-97678d7e0fd2"><_gte:Target lang="en"
><_ufe:task-postspace>Subtask <_gte:AttributeContent occur="1"
scope="subtask" attr="chapnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="sectnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="subjnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="func"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="seq"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="confltr"/></_ufe:task-postspace></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="varnbr" testType="any"/>
<AttributeTest attributeName="varnbr" testType="notEqual"/>
<AttributeTest attributeName="varnbr" testType="notEqual" testValue="0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1ebe61e1-d26d-4729-9eaa-b60319db75c7"><_gte:Target lang="en"
><_ufe:task-postspace>Subtask <_gte:AttributeContent occur="1"
scope="subtask" attr="chapnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="sectnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="subjnbr"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="func"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="seq"/>-<_gte:AttributeContent occur="1"
scope="subtask" attr="varnbr"/></_ufe:task-postspace></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="task" style="formalBlock">
<Context priority="0" selector="task">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1f7a40af-dad0-479b-b414-2d2aedb1e4c5"><_gte:Target lang="en"
><_ufe:task-postspace>Task <_gte:AttributeContent occur="1" scope="task"
attr="chapnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="sectnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="subjnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="func"/>-<_gte:AttributeContent occur="1" scope="task" attr="seq"
/></_ufe:task-postspace></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="confltr" testType="any"/>
<AttributeTest attributeName="confltr" testType="notEqual"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A19df7378-45a3-4d48-bc10-61ce52a4c0d1"><_gte:Target lang="en"
><_ufe:task-postspace>Task <_gte:AttributeContent occur="1" scope="task"
attr="chapnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="sectnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="subjnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="func"/>-<_gte:AttributeContent occur="1" scope="task" attr="seq"
/>-<_gte:AttributeContent occur="1" scope="task" attr="confltr"/></_ufe:task-postspace
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<AttributeTest attributeName="varnbr"/>
<AttributeTest attributeName="varnbr" testType="notEqual"/>
<AttributeTest attributeName="varnbr" testType="notEqual" testValue="0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1a4fbba4-a504-4417-a1da-3a600405f6d1"><_gte:Target lang="en"
><_ufe:task-postspace>Task <_gte:AttributeContent occur="1" scope="task"
attr="chapnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="sectnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="subjnbr"/>-<_gte:AttributeContent occur="1" scope="task"
attr="func"/>-<_gte:AttributeContent occur="1" scope="task" attr="seq"
/>-<_gte:AttributeContent occur="1" scope="task" attr="varnbr"/></_ufe:task-postspace
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="taskproc" style="formalBlock">
<Context priority="0" selector="taskproc">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="ted" style="inline">
<Context priority="0" selector="ted">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A805408c5-2afd-4eb1-8a3d-5f72f420c6e3"><_gte:Target lang="en"
><_gte:ElementContent occur="1" scope="ted" include="contentOnly"
elem="toolname"/> (<_gte:ElementContent occur="1" scope="ted"
include="contentOnly" elem="toolnbr"/>)</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="teddtl" style="inline">
<Context priority="0" selector="teddtl">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Adf25de37-3d33-4afc-bc15-a12100e3bfc4"><_gte:Target lang="en"
><_gte:ElementContent occur="1" scope="teddtl" include="contentOnly"
elem="dtlname"/> (<_gte:ElementContent occur="1" scope="teddtl"
include="contentOnly" elem="dtlnbr"/> of <_gte:ElementContent occur="1"
scope="teddtl" include="contentOnly" elem="toolnbr"/>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="tfmatr" style="block">
<Context priority="0" selector="tfmatr">
<BaseProperties>
<Indent leftIndent="@18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="tprereq" style="formalBlock">
<Context priority="0" selector="tprereq">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="transltr" style="nostyle">
<Context priority="0" selector="transltr">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="trdata" style="block">
<Context priority="0" selector="trdata">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="trlist" style="block">
<Context priority="0" selector="trlist">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A022c7a1e-f18f-462e-9751-0d7f7c875e2a"><_gte:Target lang="en"
><_ufe:center><_gte:Font Underline="single" ScoreSpace="yes">TEMPORARY
REVISION INDEX</_gte:Font></_ufe:center></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="trloc" style="inline">
<Context priority="0" selector="trloc">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4f3d35bf-bcae-4399-acb5-0c77dda0c275"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="trnbr" style="inline">
<Context priority="0" selector="trnbr">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aaa1a3c01-6a11-4cc6-a92b-97f2d09aadad"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="trstatus" style="inline">
<Context priority="0" selector="trstatus">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0d5549e0-3646-44cf-8c6a-f6927fdf8d0f"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="txtgrphc" style="nostyle">
<Context priority="0" selector="txtgrphc">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="txtline" style="nostyle">
<Context priority="0" selector="txtline">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
</Elements>
<Styles><?Pub Dtl?>
<Style styleName="block">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="crossReference">
<Context priority="0" selector="$elemname">
<BaseProperties>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="customTable">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableCell">
<Context priority="0" selector="$customTable//$elemname">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableHeaderCell">
<Context priority="0" selector="$customTable//$elemname">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableRow">
<Context priority="0" selector="$customTable/$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableHeaderRow">
<Context priority="0" selector="$customTable/$elemname">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableTitle">
<Context priority="10" selector="$customTable/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space customTableTitle">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5ccfd71f-327a-4a9c-8ad8-283e38e972aa"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A0319abcf-ed36-462e-8dc6-34b51ecb6e97"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ad7888deb-4282-4789-b43c-b4157be73ef1"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="definitionList">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="definitionListItem">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division1">
<Context divisionLevel="1" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" startNew="page"/></BaseProperties>
</Context>
</Style>
<Style styleName="division2">
<Context divisionLevel="2" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" startNew="page"/></BaseProperties>
</Context>
</Style>
<Style styleName="division3">
<Context divisionLevel="3" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division4">
<Context divisionLevel="4" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division5">
<Context divisionLevel="5" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division6">
<Context divisionLevel="6" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division7">
<Context divisionLevel="7" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division8">
<Context divisionLevel="8" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division9">
<Context divisionLevel="9" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="document">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Default_Page_Set"
startNew="page"/></BaseProperties>
</Context>
</Style>
<Style styleName="footnote">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<Footnote footnoteModelReference="Default_Footnotes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A39b907e7-17ee-464f-94c3-262e74c9c130"><_gte:Target lang="en"
><_gte:Font TypeSize=".69em" Offset=".33em"><_gte:ElementNumber/></_gte:Font
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="nothing" format="(CURRENT)"
numberAlignment="left">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa7dcf3af-92ec-4d19-a916-eeababcffcc9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context footnoteModelReference="Default_Footnotes" priority="-0.005"
selector="$elemname">
<BaseProperties propertySetReferences="Footnote_font">
<Indent firstLineIndent="*-1.5pc" leftIndent="@1.5pc"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/>
<Footnote footnoteModelReference="Default_Footnotes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A83f3359e-2f13-42ac-b28a-4553c2d18095"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1."/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT) '.'"
numberAlignment="left" tabtoAfter="1.5pc">
<LabelAndNumber><_gte:Translate translate="off"
id="A163a97ac-13bf-40d1-bfcd-6d2b018997f0"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="footnoteReference">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<Footnote footnoteIdRefAttrName="rid"
footnoteModelReference="Default_Footnotes" referenceType="references"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aca7f4ab4-ccdd-4327-b19a-e33ea86c97f0"><_gte:Target lang="en"
><_gte:Font TypeSize=".69em" Offset=".33em"><_gte:CrossReference
refAttr="rid" xrefStyle="Number"/></_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="formalBlock">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="graphic">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="hidden">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Style>
<Style styleName="index">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" spanInto="2" startNew="page"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="indexTermAttributeModel">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="indexTermElementModel">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="indexTermNestingElementModel">
<Context priority="20"
selector="$elemname//$elemname//$elemname/$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="15" selector="$elemname//$elemname/$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="10" selector="$elemname/$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="inline">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="link">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Link">
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="linkTarget">
<Context priority="0" selector="$elemname">
<BaseProperties></BaseProperties>
</Context>
</Style>
<Style styleName="bulletedList">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="numberedList">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="listItem">
<Context priority="25"
selector="*numberedList//*numberedList//*numberedList//*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A79ba6028-d470-40fd-81ea-3320d7be865a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) ')'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Af8d50b8d-953a-480c-8173-14cb2789dc74"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="*bulletedList//*bulletedList//*bulletedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adae1308d-0fe2-4e06-8773-9a21e29b70f9"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>♦</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="*numberedList//*numberedList//*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-3em" leftIndent="@3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Acdb75f26-04c8-49d6-ad3d-2f5815e49734"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="2em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="i" tabtoAfter="3em">
<LabelAndNumber><_gte:Translate translate="off"
id="A4bc952b5-16e1-40e8-ba94-76f50683c552"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="15" selector="*bulletedList//*bulletedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5526f8d3-6519-4655-b22f-9bdbebeb9377"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>–</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="15" selector="*numberedList//*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2em" leftIndent="@2em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8916e511-9ef7-43c2-8d11-ba7b1a6d7a82"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="a" tabtoAfter="2em">
<LabelAndNumber><_gte:Translate translate="off"
id="Abc2ba347-51ce-4cb1-93f5-550a46488933"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*bulletedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A403d4936-fd7d-4b42-8e53-ebdff7ddbd35"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>•</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1011ce30-686a-44db-ae52-0afce5d6988c"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa5a70906-d4e3-4b30-8a10-a11e57e4f0e9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*definitionList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="paragraph">
<Context priority="20" selector="*listItem/$elemname[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="15" selector="*footnote//$elemname[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="10" selector="*listItem/$elemname[position()>1]">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="preformatted">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="preformatted_font">
<Alignment align="preformatted"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style
description="Not used to style a table; see tableRoot and tableTgroup"
styleName="table">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableCell">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableHeaderCell">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="bold">
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableHead">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableFoot">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style
description="Used to style the table element in the HTML table model"
styleName="tableRoot">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style description="Used to style tgroup in CALS/OASIS table model"
styleName="tableTgroup">
<Context priority="0" selector="$elemname[1]">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname[position()>1]">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableOfContents">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="title">
<Context priority="10" selector="*document/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_document">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10" selector="*tableOfContents/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_TOC">
<Breaks blockOrInline="block"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*formalBlock/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab59ad1be-f89c-456e-89eb-66ed01694c50"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A894d7db4-57e5-400b-bcc9-0e2a1f46f2f2"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A9a5771be-5770-4b8b-a983-fff9889f0deb"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*division1/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7f1ff3b8-a788-49a0-8137-e8ffb0e21962"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae4f15cd6-75a7-4687-a8c6-c5f5ea1f20b6"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*division2/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_2">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa1d8872e-0751-49b1-86e6-e6eed5c90a5a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A1a0380a1-3378-4010-b97b-d3cc96f1df5f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*division3/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_3">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa37904cd-e751-4d5a-8af6-913c4ce4271e"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac120e40d-7994-40db-8438-55808d0e9937"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division4/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_4">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9186fafd-6081-426b-9a03-ba482d208192"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A55ed43a4-135a-483f-9cd4-47df6a0e7bfb"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division5/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_5">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad55957a6-c24f-4a8c-809a-86e54faee6bb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Afce47915-8840-4233-8a9d-0c382c55d03f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division6/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_6">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A51c1d6c5-104e-4d9d-8916-6181d8ad9d73"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A45cf8cbd-5885-4c19-82d7-91f81e514df8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division7/$elemname">
<BaseProperties
propertySetReferences="Title_color Title_alignment Title_keeps Title_space Title_7">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa643f778-2b59-4379-bc78-a0fe9ab4a1e1"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A163e75ae-c58c-4033-8b24-bedcaaeefd7e"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division8/$elemname">
<BaseProperties
propertySetReferences="Title_color Title_alignment Title_keeps Title_space Title_8">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A348b60b9-5ac2-45e9-b7f9-f4120b6dc5fb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A26707ce9-2236-46c3-8b54-5b3f1fe9eaf6"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division9/$elemname">
<BaseProperties
propertySetReferences="Title_color Title_alignment Title_keeps Title_space Title_9">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa9124fa1-231d-44fe-8705-949e51fb5558"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A890a1fd7-64f0-4d99-8978-54710e428d24"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="nostyle">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="unstyled">
<Context priority="0" selector="$elemname">
<BaseProperties></BaseProperties>
</Context>
</Style>
</Styles>
<Bullets><?Pub Dtl?>
<Bullet><_gte:Font>•</_gte:Font></Bullet>
<Bullet><_gte:Font>–</_gte:Font></Bullet>
<Bullet><_gte:Font>♦</_gte:Font></Bullet>
<Bullet><_gte:Font>◊</_gte:Font></Bullet>
<Bullet><_gte:Font>⇒</_gte:Font></Bullet>
</Bullets>
<ReferenceFormats><?Pub Dtl?></ReferenceFormats>
<Indexes><?Pub Dtl?>
<Index indexName="Main_Index"/></Indexes>
<PrintPageSets><?Pub Dtl?></PrintPageSets>
<PageTypes></PageTypes>
<PageRegions>
<PageRegion pageRegionName="main_content_region">
<PageRegionPosition/>
<PageRegionTextContent contentType="main"/></PageRegion>
</PageRegions>
<GeneratedContents></GeneratedContents>
<TablesOfContents><?Pub Dtl?>
<TableOfContents leaderDots="yes" leaderMinLength="3pc"
leaderSpacing="3pt" printPageNumbers="yes" rightAlignPageNumbers="yes"
textRightIndent="2pc" tocDivLevels="6" tocIndented="yes"
tocName="Table_of_Contents" useForBookmarks="no" useForChunkedHTML="yes">
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="8em" numberAlignment="left" numbered="no"
tabtoAfter="4em" tocLevel="3"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="no"
tabtoAfter="6em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocTitleContexts>
<TocTitleContext titleContextSelector="subject/title">
<TocEntry tocLevel="3" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry3_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry3_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="8em" numberAlignment="left" numbered="no"
tabtoAfter="4em" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="section/title">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="frontmatter/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="chapter/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="ata-page-block//n-para/title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="ata-page-block/pageblock-title">
<TocEntry tocLevel="4" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry4_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry4_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="no"
tabtoAfter="6em" tocLevel="4"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="manual-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="frontmatter//module/pageblock-title">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pageblock-title">
<TocEntry tocLevel="4" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry4_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry4_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="no"
tabtoAfter="6em" tocLevel="4"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="highlights/_ufe:npara-numbering">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="highlights/title">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="highlights/manual-title">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="highlights/pageblock-title">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="n-para/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="highlights/pwc-title">
<TocEntry tocLevel="2" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry2_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry2_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="no"
tabtoAfter="2em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="lof/pwc-title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="lot/pwc-title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="module/pwc-title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="ata-page-block//fixtures-and-equipment//_ufe:fixequ-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="page-block//fixtures-and-equipment//_ufe:fixequ-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="page-block//consumables//_ufe:consumables-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="ata-page-block//consumables//_ufe:consumables-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="page-block//general//_ufe:general-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="ata-page-block//general//_ufe:general-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="page-block//special-tools//_ufe:spectools-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="ata-page-block//special-tools//_ufe:spectools-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="page-block//n-para/title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="fits/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pgblk/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="task/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:cir-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:intro-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="prcitem1/prcitem/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pwcni/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:chapsect-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="sblist/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pwcspblist/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:howtouse-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:highlights-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:temp-rev-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pwcpbfront/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:sblist-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="page-block[@pb-name='ni']//mfmatr/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:spblist-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="module[@module-name='Airworthiness_Limits']/pgblk/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="lof/title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="lot/title">
<TocEntry tocLevel="5" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry5_Table_of_Contents><_sfe:TocLabel_Table_of_Contents
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry5_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="lof-item/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:em-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:tmm-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pbfmatr/title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pbfmatr//_ufe:task-title">
<TocEntry tocLevel="1" tocNameReference="Table_of_Contents">
<TocEntryContents><_sfe:TocEntry1_Table_of_Contents><_sfe:TocTitle_Table_of_Contents
><_gte:ElementContent/></_sfe:TocTitle_Table_of_Contents><_sfe:TocPage_Table_of_Contents
><_gte:Leaders leaderType="dots" leaderSpacing="3pt" lenType="fit"
minLen="3pc"/><_gte:PageNumberReference/></_sfe:TocPage_Table_of_Contents
></_sfe:TocEntry1_Table_of_Contents></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
</TablesOfContents>
<FootnoteModels><?Pub Dtl?>
<FootnoteModel columnOrPageWide="page"
footnoteModelName="Default_Footnotes" footnoteNumberStyle="1"
insertSeparator="yes" separatorAlign="left"
separatorLengthType="specified" separatorRuleLength="9pc"
separatorRuleThickness=".5pt" spaceAboveFootnote="15pt"
spaceBelowSeparator="2pt"/></FootnoteModels>
<CustomTables><?Pub Dtl?></CustomTables>
<SizeDefinitions></SizeDefinitions>
<CombinedFonts></CombinedFonts>
</Styler>
